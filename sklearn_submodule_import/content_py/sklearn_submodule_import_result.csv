line,count
from sklearn.cross_validation import train_test_split,1395
from sklearn import svm,1158
from sklearn import cross_validation,1012
from sklearn.ensemble import RandomForestClassifier,905
from sklearn.svm import SVC,878
from sklearn import preprocessing,857
from sklearn import metrics,844
from sklearn.linear_model import LogisticRegression,774
from sklearn.externals import joblib,762
from sklearn.grid_search import GridSearchCV,706
from sklearn.decomposition import PCA,671
from sklearn.preprocessing import StandardScaler,635
from sklearn.pipeline import Pipeline,618
from sklearn.cluster import KMeans,602
from sklearn.cross_validation import KFold,588
from sklearn import linear_model,571
from sklearn.feature_extraction.text import TfidfVectorizer,556
from sklearn import datasets,533
from sklearn.metrics import accuracy_score,533
from sklearn.feature_extraction.text import CountVectorizer,502
from sklearn.svm import LinearSVC,495
from sklearn.neighbors import KNeighborsClassifier,482
from sklearn.tree import DecisionTreeClassifier,417
from sklearn.metrics import confusion_matrix,386
from sklearn.base import BaseEstimator,368
from sklearn.naive_bayes import GaussianNB,353
from sklearn import tree,311
from sklearn.cross_validation import StratifiedKFold,311
from sklearn.naive_bayes import MultinomialNB,275
from sklearn.metrics import classification_report,274
from sklearn.cross_validation import cross_val_score,274
from sklearn.utils import check_random_state,263
from sklearn.preprocessing import LabelEncoder,257
from sklearn.metrics import mean_squared_error,247
from sklearn.feature_extraction import DictVectorizer,244
from sklearn.linear_model import SGDClassifier,240
from sklearn.linear_model import LinearRegression,217
from sklearn.metrics import roc_auc_score,216
from sklearn.ensemble import AdaBoostClassifier,207
from sklearn.feature_extraction.text import TfidfTransformer,206
from sklearn import ensemble,194
from sklearn.cluster import DBSCAN,192
from sklearn.ensemble import RandomForestRegressor,184
from sklearn.neighbors import NearestNeighbors,181
from sklearn import mixture,178
"from sklearn.base import BaseEstimator, TransformerMixin",177
from sklearn.svm import SVR,177
from sklearn.utils import shuffle,172
from sklearn.lda import LDA,168
from sklearn import neighbors,164
from sklearn.multiclass import OneVsRestClassifier,158
from sklearn.preprocessing import scale,155
from sklearn.datasets import load_iris,149
from sklearn.preprocessing import normalize,145
from sklearn.ensemble import ExtraTreesClassifier,145
from sklearn.preprocessing import LabelBinarizer,143
"from sklearn.metrics import roc_curve, auc",140
from sklearn.pipeline import make_pipeline,138
from sklearn.ensemble import GradientBoostingClassifier,137
from sklearn.utils.testing import assert_equal,136
from sklearn.datasets import load_digits,135
from sklearn import cluster,130
from sklearn.base import clone,127
from sklearn.cross_validation import StratifiedShuffleSplit,123
from sklearn.datasets import make_classification,122
from sklearn.utils.testing import assert_raises,121
from sklearn.utils.testing import assert_array_equal,118
from sklearn.utils.testing import assert_array_almost_equal,117
from sklearn.metrics import f1_score,116
from sklearn.tree import DecisionTreeRegressor,116
from sklearn.preprocessing import Imputer,116
from sklearn.metrics import log_loss,110
from sklearn.metrics.pairwise import cosine_similarity,110
from sklearn.decomposition import TruncatedSVD,109
from sklearn.naive_bayes import BernoulliNB,105
from sklearn import decomposition,104
from sklearn.utils.testing import assert_almost_equal,99
from sklearn.datasets.samples_generator import make_blobs,99
from sklearn.gaussian_process import GaussianProcess,99
from sklearn.mixture import GMM,98
from sklearn.utils.testing import assert_greater,98
from sklearn.metrics.pairwise import pairwise_distances,96
from sklearn.cluster import MiniBatchKMeans,96
from sklearn.datasets import load_svmlight_file,95
from sklearn.utils.testing import assert_true,95
from sklearn.decomposition import RandomizedPCA,93
from sklearn.cross_validation import ShuffleSplit,92
from sklearn.feature_selection import SelectKBest,90
from sklearn.ensemble import GradientBoostingRegressor,87
"    from sklearn.svm import SVC",83
from sklearn import grid_search,83
from sklearn.base import TransformerMixin,82
from sklearn.feature_extraction.text import HashingVectorizer,81
from sklearn.preprocessing import MinMaxScaler,79
from sklearn.datasets import fetch_mldata,79
"from sklearn.externals.joblib import Parallel, delayed",75
"from sklearn import svm, datasets",72
"from sklearn.base import BaseEstimator, ClassifierMixin",72
from sklearn.linear_model import Ridge,72
from sklearn.metrics import r2_score,71
from sklearn.metrics import precision_score,71
from sklearn.neighbors import KNeighborsRegressor,70
from sklearn.datasets.base import Bunch,69
"from sklearn.feature_selection import SelectKBest, chi2",69
from sklearn.datasets import make_blobs,68
from sklearn.datasets import fetch_20newsgroups,66
from sklearn.preprocessing import PolynomialFeatures,66
from sklearn.manifold import TSNE,64
"    from sklearn import datasets",63
from sklearn.qda import QDA,63
from sklearn.metrics import euclidean_distances,62
from sklearn.metrics import precision_recall_curve,62
from sklearn import manifold,61
from sklearn.metrics.pairwise import euclidean_distances,61
"    >>> from sklearn import cross_validation",60
"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier",59
"    >>> from sklearn import linear_model",59
"from sklearn.svm import LinearSVC, SVC",58
from sklearn.externals import six,58
from sklearn.datasets import load_boston,58
from sklearn.metrics import mean_absolute_error,57
"    from sklearn.preprocessing import StandardScaler",57
from sklearn.linear_model import Perceptron,55
from sklearn.neural_network import BernoulliRBM,54
from sklearn.preprocessing import Normalizer,54
from sklearn.neighbors import KernelDensity,54
from sklearn.utils.testing import assert_less,53
"    from sklearn.cross_validation import train_test_split",52
from sklearn.ensemble import ExtraTreesRegressor,52
from sklearn.externals.joblib import Memory,51
from sklearn.metrics import pairwise_distances,51
"    from sklearn.metrics import roc_auc_score",50
from sklearn.metrics import roc_curve,48
"from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer",48
from sklearn.feature_selection import RFECV,48
"from sklearn.neighbors import KNeighborsRegressor, KNeighborsClassifier",48
from sklearn.feature_selection import chi2,48
from sklearn.learning_curve import learning_curve,47
from sklearn.metrics import recall_score,47
from sklearn.utils.testing import ignore_warnings,47
"from sklearn.cross_validation import train_test_split",46
"    from sklearn.pipeline import Pipeline",46
from sklearn.metrics import precision_recall_fscore_support,46
"from sklearn.ensemble import RandomForestClassifier",45
from sklearn.linear_model import PassiveAggressiveClassifier,45
from sklearn.cluster import AffinityPropagation,45
from sklearn.decomposition import NMF,45
from sklearn.preprocessing import label_binarize,44
from sklearn.metrics import auc,44
"from sklearn.tree import DecisionTreeRegressor, DecisionTreeClassifier",44
"from sklearn.metrics.cluster import adjusted_mutual_info_score, adjusted_rand_score, completeness_score, homogeneity_completeness_v_measure, homogeneity_score, mutual_info_score, normalized_mutual_info_score, v_measure_score",43
from sklearn.externals.six import StringIO,43
from sklearn.utils.extmath import safe_sparse_dot,43
"from sklearn.linear_model import Ridge, LinearRegression, LogisticRegression",43
"from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor, RandomForestClassifier, GradientBoostingClassifier",42
from sklearn.preprocessing import OneHotEncoder,42
"    from sklearn.linear_model import LogisticRegression",42
"from sklearn.metrics import explained_variance_score, mean_absolute_error, mean_squared_error, r2_score, accuracy_score, roc_auc_score, average_precision_score, f1_score, hinge_loss, matthews_corrcoef, precision_score, recall_score, zero_one_loss",42
"from sklearn.externals import joblib",42
from sklearn.calibration import CalibratedClassifierCV,40
from sklearn.decomposition import FastICA,40
"from sklearn import svm",40
from sklearn.utils.testing import assert_warns,40
from sklearn.ensemble import BaggingClassifier,39
from sklearn.utils.validation import check_random_state,39
from sklearn.dummy import DummyClassifier,39
from sklearn.feature_extraction import FeatureHasher,38
from sklearn import naive_bayes,38
"from sklearn.metrics import confusion_matrix, accuracy_score",38
"    from sklearn.externals import joblib",38
"from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer",38
from sklearn.base import ClassifierMixin,38
from sklearn.externals.six.moves import zip,38
from sklearn.cluster import AgglomerativeClustering,38
from sklearn.feature_selection import f_regression,38
"from sklearn.feature_selection import SelectKBest, f_classif",38
"from sklearn.datasets import make_moons, make_circles, make_classification",37
"from sklearn.linear_model import LogisticRegression",37
from sklearn.metrics import zero_one_loss,37
"    >>> from sklearn.cross_validation import train_test_split",37
from sklearn import preprocessing as pp,37
from sklearn.feature_selection import RFE,37
"            from sklearn.feature_extraction.image import grid_to_graph",36
"from sklearn.pipeline import Pipeline, FeatureUnion",36
from sklearn.utils.extmath import logsumexp,35
from sklearn.metrics.pairwise import pairwise_kernels,35
from sklearn.feature_extraction import text,35
from sklearn.utils.extmath import density,35
"    from sklearn import metrics",34
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis,34
from sklearn.linear_model.logistic import LogisticRegression,34
from sklearn.linear_model import Lasso,33
from sklearn.datasets import load_files,33
"from sklearn.feature_selection import SelectPercentile, f_classif",33
from sklearn.grid_search import RandomizedSearchCV,33
"    from sklearn import cross_validation",33
"from sklearn.metrics import confusion_matrix, classification_report",33
"        from sklearn.decomposition import RandomizedPCA",32
"from sklearn import datasets, metrics, cross_validation",32
from sklearn.grid_search import ParameterGrid,32
"    from sklearn.metrics import accuracy_score",32
from sklearn.cluster import Ward,32
from sklearn.metrics import average_precision_score,32
from sklearn.metrics import make_scorer,31
from sklearn.feature_selection import VarianceThreshold,31
from sklearn.utils import check_array,31
from sklearn.metrics.pairwise import rbf_kernel,31
from sklearn.datasets import make_regression,31
"from sklearn.base import BaseEstimator, RegressorMixin",30
from sklearn import cross_validation as cv,30
"from sklearn import datasets, metrics",30
"from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer",29
from sklearn.neighbors import kneighbors_graph,29
"    from sklearn.cluster import KMeans",29
from sklearn.ensemble import AdaBoostRegressor,29
"    from sklearn.decomposition import PCA",29
"from sklearn import preprocessing",29
"    from sklearn.grid_search import GridSearchCV",29
"    from sklearn import svm",29
"from sklearn.cluster import MeanShift, estimate_bandwidth",29
"    from sklearn.preprocessing import LabelEncoder",29
from sklearn.pipeline import FeatureUnion,29
from sklearn.linear_model import LogisticRegression as LR,28
from sklearn.linear_model import RidgeClassifier,28
from sklearn.utils.testing import assert_false,28
from sklearn.externals.six.moves import xrange,28
"from sklearn.naive_bayes import MultinomialNB, BernoulliNB",28
"    from sklearn.ensemble import RandomForestClassifier",27
from sklearn.utils import check_X_y,27
from sklearn.metrics import *,27
"from sklearn.feature_extraction.text import CountVectorizer",27
"from sklearn import datasets, linear_model",27
"from sklearn.cross_validation import train_test_split, cross_val_score",27
"from sklearn.naive_bayes import BernoulliNB, MultinomialNB",27
"    >>> from sklearn import metrics",26
"from sklearn import linear_model",26
"from sklearn.svm import LinearSVC",26
from sklearn import feature_selection,26
"from sklearn.cluster import KMeans",26
"from sklearn.svm import SVC, LinearSVC",26
from sklearn.manifold import MDS,26
"    from sklearn import linear_model",26
from sklearn.kernel_ridge import KernelRidge,25
"  from sklearn.manifold import TSNE",25
from sklearn import pipeline,25
"from sklearn.preprocessing import StandardScaler",25
"from sklearn.grid_search import GridSearchCV",25
"    from sklearn.neighbors import KNeighborsClassifier",25
"        from sklearn.linear_model import LogisticRegression",25
"from sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor",25
"from sklearn.metrics import classification_report, confusion_matrix",25
"from sklearn.feature_selection import SelectKBest, f_regression",25
from sklearn.base import RegressorMixin,25
"    from sklearn.base import clone",25
from sklearn import gaussian_process,25
"            from sklearn.decomposition import FastICA  # to avoid strong dep.",25
from sklearn.ensemble import RandomForestClassifier as RF,25
"from sklearn.base import TransformerMixin, BaseEstimator",24
"        >>> from sklearn.neighbors import NearestNeighbors",24
"from sklearn.cross_validation import cross_val_score, KFold",24
from sklearn.neighbors import NearestCentroid,24
"from sklearn import svm, cross_validation",24
"from sklearn import linear_model, datasets",24
"        from sklearn.neighbors import NearestNeighbors",24
from sklearn.cross_validation import LeaveOneOut,24
"from sklearn.cross_validation import StratifiedKFold, KFold",24
"from sklearn.decomposition import PCA, KernelPCA",24
"from sklearn.linear_model import LogisticRegression, SGDClassifier",24
"from sklearn.cluster import KMeans, MiniBatchKMeans",24
"from sklearn import cross_validation, metrics",23
from sklearn.tree._tree import TREE_LEAF,23
"    from sklearn import preprocessing",23
from sklearn.utils import ConvergenceWarning,23
"from sklearn.svm import SVC",23
"from sklearn.feature_extraction.text import TfidfVectorizer",23
from sklearn.decomposition import KernelPCA,23
from sklearn.learning_curve import validation_curve,23
"from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier",23
"        from sklearn.preprocessing import StandardScaler",22
"    from sklearn.base import is_classifier",22
"        from sklearn.metrics import accuracy_score",22
"    >>> from sklearn.ensemble import RandomForestClassifier",22
"from sklearn import metrics",22
from sklearn.datasets import dump_svmlight_file,22
"    >>> from sklearn.datasets import load_iris",22
"from sklearn import svm, preprocessing",22
from sklearn.datasets import fetch_lfw_people,22
"    from sklearn.utils.validation import NonBLASDotWarning",21
from sklearn.metrics import silhouette_score,21
from sklearn.neighbors import KDTree,21
from sklearn.feature_extraction.image import grid_to_graph,21
from sklearn.utils.testing import assert_raise_message,21
from sklearn.metrics.pairwise import linear_kernel,21
"from sklearn import datasets, svm",21
from sklearn.utils.validation import check_is_fitted,21
"    from sklearn.tree import DecisionTreeClassifier",21
"from sklearn.base import BaseEstimator, ClassifierMixin, RegressorMixin",21
"from sklearn import cross_validation",21
from sklearn.utils.testing import assert_in,20
"    >>> from sklearn.tree import DecisionTreeClassifier",20
from sklearn.pipeline import Pipeline  # noqa,20
from sklearn.preprocessing import MultiLabelBinarizer,20
"from sklearn import metrics, preprocessing",20
"    >>> from sklearn.cross_validation import cross_val_score",20
from sklearn.cluster import k_means,20
from sklearn.isotonic import IsotonicRegression,20
from sklearn.cluster import MeanShift,20
from sklearn.random_projection import sparse_random_matrix,20
"    from sklearn.metrics import mean_squared_error",20
from sklearn.datasets import make_multilabel_classification,20
from sklearn.utils.extmath import randomized_svd,20
"        from sklearn.base import clone",20
"        from sklearn.pipeline import Pipeline",20
from sklearn.svm import OneClassSVM,19
"from sklearn import datasets, cross_validation, metrics",19
"    from sklearn.cross_validation import StratifiedKFold",19
from sklearn.cluster import SpectralClustering,19
from sklearn.utils.validation import check_array,19
"from sklearn.svm import SVC, LinearSVC, NuSVC",19
from sklearn.neighbors.classification import KNeighborsClassifier,19
from sklearn.linear_model import SGDRegressor,19
"        from sklearn.utils.extmath import fast_dot",19
"from sklearn.pipeline import Pipeline",19
from sklearn.utils.testing import SkipTest,19
"    from sklearn.cross_validation import KFold",19
"from sklearn.metrics import mean_squared_error, r2_score",19
"    >>> from sklearn import datasets",19
from sklearn.decomposition import ProjectedGradientNMF,18
"from sklearn.ensemble import RandomForestClassifier, RandomForestRegressor",18
"from sklearn.decomposition import PCA",18
"    from sklearn.svm import LinearSVC",18
from sklearn.covariance import EllipticEnvelope,18
from sklearn.ensemble import GradientBoostingClassifier as GBC,18
"    from sklearn import manifold",18
"    from sklearn.feature_extraction.text import TfidfVectorizer",18
from sklearn.multiclass import OneVsOneClassifier,18
"from sklearn.grid_search import GridSearchCV, RandomizedSearchCV",18
"    from sklearn.cross_validation import cross_val_score",18
from sklearn.utils.validation import NotFittedError,18
"    from sklearn import tree",17
"from sklearn.metrics import accuracy_score, f1_score",17
"    from sklearn.feature_extraction.text import CountVectorizer",17
"from sklearn import datasets, svm, metrics",17
from sklearn.neural_network import MLPClassifier,17
"        from sklearn.externals import joblib",17
"from sklearn.externals.six import StringIO  ",16
"    from sklearn.decomposition import PCA, FactorAnalysis",16
"    from sklearn.covariance import (LedoitWolf, ShrunkCovariance,",16
"from sklearn.base import BaseEstimator, ClusterMixin",16
"    from sklearn.naive_bayes import GaussianNB",16
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis,16
"        from sklearn import tree",16
from sklearn.tree import export_graphviz,16
# from sklearn.datasets import make_hastie_10_2,16
from sklearn.feature_selection import f_classif,16
"from sklearn import tree",16
"        from sklearn.cluster import KMeans",16
from sklearn.metrics import mutual_info_score,16
from sklearn.neighbors import BallTree,16
"from sklearn.cross_validation import StratifiedKFold",16
"            from sklearn.covariance import empirical_covariance, log_likelihood",16
"from sklearn import linear_model, datasets, metrics",16
"from sklearn.feature_extraction.text import TfidfTransformer",16
"from sklearn.svm import LinearSVC,SVC",16
"    from sklearn.neighbors import NearestNeighbors",16
"        from sklearn import linear_model",16
from sklearn.utils.testing import raises,16
from sklearn.linear_model import *,16
from sklearn.utils.testing import assert_warns_message,16
"    from sklearn.covariance import (EmpiricalCovariance, shrunk_covariance,",16
from sklearn.cross_validation import LeaveOneLabelOut,16
"from sklearn.externals.joblib import Parallel, delayed, cpu_count",16
"    >>> from sklearn.datasets import load_boston",15
"    from sklearn.lda import LDA",15
from sklearn.svm import *,15
"from sklearn import cluster, datasets",15
from sklearn.utils.validation import column_or_1d,15
from sklearn.metrics import mean_squared_error as mse,15
"from sklearn import metrics, cross_validation",15
"            from sklearn.neighbors import BallTree",15
from sklearn.metrics import mean_squared_error as MSE,15
from sklearn.kernel_approximation import AdditiveChi2Sampler,15
from sklearn.feature_extraction.image import extract_patches_2d,15
"from sklearn import svm, metrics",15
from sklearn.utils.random import check_random_state,15
from sklearn.datasets.mldata import fetch_mldata,15
from sklearn.feature_selection import SelectFromModel,15
"from sklearn.cross_validation import KFold, StratifiedKFold",15
"    >>> from sklearn.svm import SVC",15
from sklearn import *,15
from sklearn.datasets import fetch_olivetti_faces,15
"from sklearn.cluster import MiniBatchKMeans, KMeans",15
"from sklearn.cross_validation import StratifiedKFold, cross_val_score",15
"from sklearn.base import BaseEstimator, TransformerMixin, clone",14
from sklearn.feature_extraction import image,14
from sklearn.metrics import explained_variance_score,14
from sklearn import feature_extraction,14
"from sklearn.metrics import precision_score, recall_score",14
from sklearn.neighbors.unsupervised import NearestNeighbors,14
"from sklearn.externals import joblib  ### Needed if you want to SAVE your learned dataset to .pkl",14
"from sklearn.base import ClassifierMixin, RegressorMixin",14
"from sklearn.svm import LinearSVC ",14
from sklearn.metrics import jaccard_similarity_score,14
from sklearn.neighbors.nearest_centroid import NearestCentroid,14
"from sklearn.svm import SVC, SVR",14
from sklearn.linear_model.base import LinearRegression,14
"from sklearn.metrics import classification_report, accuracy_score",14
from sklearn.utils.testing import assert_raises_regexp,14
from sklearn import base,14
from sklearn.utils.testing import assert_not_equal,14
"from sklearn.linear_model import SGDClassifier, LogisticRegression",14
"from sklearn.multiclass import OneVsRestClassifier, OneVsOneClassifier",14
"    from sklearn.decomposition import RandomizedPCA",14
from sklearn.neighbors.kde import KernelDensity,14
from sklearn.manifold import Isomap,14
"from sklearn.metrics import mean_squared_error",14
"    from sklearn.datasets import make_blobs",14
from sklearn import linear_model as lm,14
"from sklearn import manifold, datasets",14
from sklearn import clone,14
"from sklearn.cross_validation import StratifiedKFold, StratifiedShuffleSplit",14
from sklearn.metrics import roc_auc_score as AUC,14
"        from sklearn.decomposition import PCA",14
"from sklearn import datasets, linear_model",14
"    from sklearn.metrics import classification_report",14
from sklearn.utils import column_or_1d,14
from sklearn.metrics import normalized_mutual_info_score,13
from sklearn.covariance import EmpiricalCovariance,13
"    >>> from sklearn import svm",13
"                    from sklearn.covariance import LedoitWolf",13
"from sklearn.metrics import precision_recall_curve, roc_curve",13
"                from sklearn.covariance import ShrunkCovariance",13
from sklearn.neighbors import DistanceMetric,13
"    from sklearn.svm import SVR",13
from sklearn.linear_model import BayesianRidge,13
from sklearn.cross_validation import cross_val_predict,13
from sklearn.cross_validation import ShuffleSplit  # noqa,13
"from sklearn.ensemble import RandomForestClassifier ",13
from sklearn.neighbors import KNeighborsClassifier as KNN,13
from sklearn.datasets.samples_generator import make_classification,13
"    >>> from sklearn.svm import SVR",13
"from sklearn.neighbors import KNeighborsClassifier",13
"        from sklearn.grid_search import GridSearchCV",13
from sklearn.datasets import make_circles,13
"        from sklearn.svm import SVC",13
from sklearn.datasets.samples_generator import make_spd_matrix,13
from sklearn.metrics.pairwise import polynomial_kernel,13
"from sklearn.feature_selection import SelectPercentile, f_classif, chi2",13
from sklearn.utils import gen_even_slices,13
"    from sklearn.externals.six.moves import cStringIO as StringIO",13
from sklearn.cross_validation import StratifiedKFold as KFold,13
"    from sklearn.metrics import confusion_matrix",13
"    >>> from sklearn.naive_bayes import GaussianNB",13
from sklearn.linear_model import RidgeCV,13
"    from sklearn.metrics import f1_score",13
"from sklearn import ensemble",13
"                    from sklearn.covariance import OAS",13
from sklearn.preprocessing import Scaler,12
"from sklearn.cross_validation import StratifiedKFold, LeaveOneOut, KFold",12
"    from sklearn.tree._tree import TREE_LEAF",12
"        from sklearn import cross_validation",12
from sklearn.cross_validation import LabelKFold,12
from sklearn_pmml.convert.features import *,12
"from sklearn.cross_validation import cross_val_score, ShuffleSplit",12
"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier",12
"from sklearn.linear_model import LinearRegression, Ridge",12
"from sklearn.ensemble import GradientBoostingRegressor, GradientBoostingClassifier",12
"from sklearn.ensemble import ExtraTreesClassifier",12
"    >>> from sklearn.grid_search import ParameterGrid",12
"from sklearn import mixture, metrics",12
"            from sklearn.externals.joblib import Parallel, delayed",12
from sklearn.svm import SVC  # noqa,12
from sklearn.utils.testing import all_estimators,12
from sklearn.metrics.cluster import v_measure_score,12
"from sklearn.naive_bayes import GaussianNB, MultinomialNB",12
"from sklearn.metrics import roc_auc_score, roc_curve",12
"from sklearn.metrics import f1_score, accuracy_score",12
"from sklearn.linear_model import LogisticRegression, Ridge, Lasso, ElasticNet",12
"        from sklearn.cross_validation import check_cv, StratifiedKFold",12
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA,12
from sklearn.metrics.cluster import normalized_mutual_info_score,12
"from sklearn.metrics import auc, f1_score",12
"from sklearn.metrics import mean_squared_error, mean_absolute_error",12
"from sklearn.ensemble import  RandomForestRegressor, RandomForestClassifier",12
"    from sklearn.datasets import load_digits",12
from sklearn.cluster.bicluster import SpectralCoclustering,12
"from sklearn.decomposition import ProbabilisticPCA, KernelPCA",12
"from sklearn import svm, naive_bayes, neighbors, tree",12
#from sklearn.cross_validation import cross_val_predict,12
"    from sklearn.utils import check_random_state",12
"    from sklearn.cross_validation import ShuffleSplit",12
"from sklearn import metrics, linear_model, tree, ensemble",11
"        from sklearn import svm",11
from sklearn.linear_model import LassoCV,11
"        from sklearn import preprocessing",11
"from sklearn.cross_validation import KFold, cross_val_score",11
from sklearn.kernel_approximation import Nystroem,11
"        from sklearn.cross_validation import StratifiedKFold",11
"from sklearn.metrics import classification_report, roc_auc_score, roc_curve",11
from sklearn.ensemble import *,11
"    from sklearn.linear_model import SGDClassifier",11
"    from sklearn.datasets import load_svmlight_file",11
from sklearn.cluster import spectral_clustering,11
from sklearn.datasets.samples_generator import make_regression,11
from sklearn.decomposition import pca,11
from sklearn import lda,11
from sklearn.ensemble.forest import RandomForestRegressor,11
"from sklearn.tree import DecisionTreeClassifier",11
from sklearn.ensemble.forest import RandomForestClassifier,11
"        from sklearn.utils._csgraph import cs_graph_components",11
from sklearn.utils.multiclass import type_of_target,11
from sklearn.mixture import (,11
"from sklearn.metrics import precision_recall_curve, roc_curve, auc",11
from sklearn.decomposition import IncrementalPCA,11
"        from sklearn.cross_validation import train_test_split",11
"from sklearn import datasets",11
from sklearn.utils.extmath import pinvh,11
"from sklearn.linear_model import SGDClassifier, SGDRegressor",11
"    from sklearn.utils.extmath import fast_dot",11
"from sklearn.metrics import accuracy_score, mean_squared_error",11
from sklearn.metrics.scorer import check_scoring,11
"    >>> from sklearn import svm, grid_search, datasets",11
from sklearn.datasets import make_moons,11
"from sklearn.naive_bayes import GaussianNB",10
"from sklearn.tree import DecisionTreeRegressor",10
"                from sklearn.utils.sparsetools import connected_components",10
from sklearn.feature_extraction.text import *,10
from sklearn.utils.validation import check_X_y,10
from sklearn.manifold import spectral_embedding,10
"from sklearn.preprocessing import StandardScaler, MinMaxScaler",10
from sklearn.feature_selection import *,10
from sklearn.utils.extmath import cartesian,10
"from sklearn.feature_selection import SelectPercentile, SelectKBest, f_classif",10
"from sklearn.cross_validation import train_test_split, KFold",10
"            from sklearn.cluster import KMeans",10
"from sklearn.decomposition import TruncatedSVD, PCA, KernelPCA",10
from sklearn.cross_decomposition import PLSRegression,10
"from sklearn.metrics import roc_curve, auc, confusion_matrix",10
"from sklearn.pipeline import make_pipeline",10
"    >>> from sklearn.tree import DecisionTreeRegressor",10
from sklearn_pmml import pmml,10
from sklearn.utils.extmath import row_norms,10
"from sklearn import svm, linear_model",10
"from sklearn.decomposition import PCA ",10
"        >>> from sklearn.externals.joblib import Parallel, delayed",10
"    >>> from sklearn.metrics import accuracy_score",10
"from sklearn import datasets, neighbors, linear_model",10
from sklearn.decomposition import SparseCoder,10
from sklearn import feature_selection as skl_fss,10
#from sklearn.linear_model import LogisticRegression,10
"from sklearn.naive_bayes import MultinomialNB",10
"         >>> from sklearn.externals.joblib import Parallel, delayed",10
from sklearn.svm import LinearSVR,10
"    >>> from sklearn import preprocessing",10
"from sklearn.pipeline import FeatureUnion, Pipeline",10
from sklearn.feature_extraction.stop_words import ENGLISH_STOP_WORDS,10
# from sklearn import metrics,10
"    from sklearn.datasets import load_iris",10
from sklearn.metrics import adjusted_rand_score,10
from sklearn.utils.validation import DataConversionWarning,10
from sklearn import hmm,10
"from sklearn.linear_model import LogisticRegression, LinearRegression",10
from sklearn.ensemble import RandomForestClassifier as RandomForest,9
"        from sklearn.neighbors import KNeighborsClassifier",9
from sklearn.tree import ExtraTreeRegressor,9
from sklearn.utils.extmath import weighted_mode,9
from sklearn.feature_selection import SelectPercentile,9
"from sklearn.metrics import accuracy_score, mean_squared_error, log_loss",9
"    >>> from sklearn.metrics import confusion_matrix",9
from sklearn.cross_validation import Bootstrap,9
from sklearn.metrics import matthews_corrcoef,9
from sklearn.externals.six import iteritems,9
from sklearn import preprocessing as pre,9
#from sklearn import svm,9
from sklearn.ensemble.weight_boosting import AdaBoostClassifier,9
from sklearn.metrics.cluster import adjusted_rand_score,9
from sklearn.multiclass import OutputCodeClassifier,9
"    >>> from sklearn import mixture",9
"    from sklearn.feature_selection import SelectKBest",9
"from sklearn.metrics import precision_recall_curve, average_precision_score",9
"from sklearn.feature_extraction.text import TfidfTransformer, TfidfVectorizer",9
from sklearn.svm.base import BaseLibSVM,9
"from sklearn.cross_validation import LeaveOneLabelOut, cross_val_score",9
"        from sklearn.cross_validation import cross_val_score",9
from sklearn.externals.six.moves import cStringIO as StringIO,9
from sklearn.decomposition import MiniBatchDictionaryLearning,9
from sklearn.dummy import DummyRegressor,9
from sklearn.metrics import fbeta_score,9
"from sklearn.ensemble import ExtraTreesClassifier, RandomForestClassifier",9
"    from sklearn.feature_extraction import DictVectorizer",9
from sklearn.externals.six.moves import range,9
"from sklearn.base import BaseEstimator, ClusterMixin, TransformerMixin",9
"from sklearn.metrics import log_loss",9
"    >>> from sklearn.datasets import make_friedman1",9
"  from sklearn.pipeline import Pipeline",9
"from sklearn.base import ClusterMixin, TransformerMixin",9
"from sklearn.base import BaseEstimator, clone",9
from sklearn.naive_bayes import *,9
"    from sklearn.cross_validation import StratifiedShuffleSplit",9
"    >>> from sklearn.linear_model import LogisticRegression",9
from sklearn.ensemble import VotingClassifier,9
from sklearn.metrics.pairwise import sigmoid_kernel,9
"        from sklearn.ensemble import RandomForestClassifier",9
"    >>> from sklearn.utils import deprecated",9
from sklearn.metrics import hamming_loss,9
"from sklearn.metrics import silhouette_samples, silhouette_score",9
"from sklearn.metrics import roc_curve, roc_auc_score",9
"from sklearn import cluster, covariance, manifold # Machine Learning Packeage",9
from sklearn.linear_model import RandomizedLogisticRegression,9
from sklearn.cross_validation import cross_val_score  # noqa,9
"    from sklearn.exceptions import NotFittedError",9
from sklearn_pandas import DataFrameMapper,9
"    >>> from sklearn.linear_model import Ridge",9
from sklearn import cross_validation as cval,9
from sklearn.decomposition import LatentDirichletAllocation,9
"    from sklearn.decomposition import TruncatedSVD",9
"from sklearn import ensemble, preprocessing",9
"from sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor, GradientBoostingRegressor",9
"    >>> from sklearn.cross_validation import StratifiedShuffleSplit",9
"    >>> from sklearn.metrics import f1_score",9
"    from sklearn.preprocessing import MinMaxScaler",9
"    >>> from sklearn.grid_search import ParameterSampler",8
"    >>> from sklearn.metrics import matthews_corrcoef",8
"from sklearn.metrics import confusion_matrix, log_loss",8
"from sklearn.ensemble import BaggingClassifier ",8
"from sklearn.metrics import f1_score, classification_report",8
"    from sklearn.mixture import GMM",8
from sklearn.decomposition import PCA as sklearnPCA,8
"    >>> from sklearn.decomposition import PCA",8
"    from sklearn.linear_model import Ridge",8
"    from sklearn.cluster import DBSCAN",8
"from sklearn.metrics import accuracy_score, roc_auc_score",8
"from sklearn.metrics import accuracy_score, adjusted_rand_score, f1_score",8
# from sklearn.pipeline import Pipeline,8
"from sklearn import svm, tree, naive_bayes",8
from sklearn.kernel_approximation import RBFSampler,8
from sklearn.tree import _tree,8
"    from sklearn.metrics.pairwise import pairwise_distances",8
"from sklearn.base import BaseEstimator, ClassifierMixin, TransformerMixin",8
from sklearn.utils.estimator_checks import check_estimator,8
"from sklearn.base import BaseEstimator",8
from sklearn.cluster import WardAgglomeration,8
"    >>> from sklearn.feature_selection import SelectKBest",8
"from sklearn.cluster import KMeans, AgglomerativeClustering, MiniBatchKMeans",8
#from sklearn import cross_validation,8
"from sklearn.utils import check_array, check_random_state",8
from sklearn.datasets import base as bunch,8
"from sklearn.linear_model import LinearRegression, LogisticRegression",8
"    >>> from sklearn.metrics import precision_score",8
"from sklearn.datasets import load_iris, load_boston, make_blobs",8
"    >>> from sklearn.metrics import classification_report",8
from sklearn.utils.testing import set_random_state,8
"from sklearn.pipeline import make_pipeline, make_union",8
"from sklearn.cluster import MeanShift, estimate_bandwidth, KMeans",8
"from sklearn import cluster, metrics",8
"    >>> from sklearn.metrics import recall_score",8
"    >>> from sklearn.preprocessing import OneHotEncoder",8
"    >>> from sklearn.utils.extmath import logsumexp",8
"from sklearn.base import BaseEstimator, ClassifierMixin, clone",8
"    from sklearn.cross_validation import (KFold, StratifiedKFold, ShuffleSplit,",8
"from sklearn.utils.testing import assert_false, assert_true",8
"    from sklearn.linear_model.coordinate_descent import MultiTaskLasso",8
"    >>> from sklearn.metrics import jaccard_similarity_score",8
from sklearn.linear_model import LogisticRegressionCV,8
"from sklearn.covariance import EmpiricalCovariance, MinCovDet",8
"    >>> from sklearn.metrics import hinge_loss",8
"    >>> from sklearn.metrics import hamming_loss",8
"    >>> from sklearn.metrics import precision_recall_fscore_support",8
"    from sklearn.neighbors import KDTree",8
"from sklearn.cross_validation import cross_val_score, train_test_split",8
"from sklearn.base import BaseEstimator,TransformerMixin",8
"from sklearn.naive_bayes import GaussianNB , MultinomialNB, BernoulliNB",8
"    from sklearn.ensemble import ExtraTreesRegressor",8
"    >>> from sklearn.metrics import fbeta_score",8
from sklearn.datasets import *,8
from sklearn.metrics import auc_score,8
"    from sklearn.feature_extraction.image import grid_to_graph",8
"        from sklearn.cross_validation import KFold",8
"from sklearn import metrics ",8
"    >>> from sklearn.metrics import zero_one_loss",8
from sklearn.utils import check_arrays,8
"        from sklearn.neighbors import BallTree",8
# from sklearn import svm,8
"    from sklearn.cross_validation import check_cv",8
"from sklearn.utils.testing import assert_greater, assert_less",8
"    from sklearn.linear_model import LinearRegression",8
"from sklearn.cross_validation import StratifiedKFold,cross_val_score,StratifiedShuffleSplit",7
"            from sklearn.decomposition import PCA",7
"            from sklearn import grid_search",7
# from sklearn.decomposition import PCA,7
"from sklearn.metrics.pairwise import pairwise_distances",7
from sklearn.grid_search import ParameterSampler,7
"    from sklearn.ensemble import GradientBoostingClassifier",7
"    >>> from sklearn.metrics import brier_score_loss",7
"from sklearn.decomposition import PCA, FactorAnalysis",7
from sklearn.tree.tree import DecisionTreeClassifier,7
"                    from sklearn import grid_search",7
"    from sklearn.cross_validation import LeaveOneLabelOut",7
#from sklearn.cross_validation import train_test_split,7
"from sklearn.metrics import classification_report,confusion_matrix",7
"    >>> from sklearn.metrics.pairwise import manhattan_distances",7
from sklearn.datasets import make_hastie_10_2,7
"from sklearn.metrics import mean_squared_error, make_scorer",7
"            from sklearn.linear_model import LogisticRegression",7
"from sklearn.preprocessing import LabelBinarizer, MultiLabelBinarizer",7
from sklearn.semi_supervised import LabelPropagation,7
from sklearn.datasets import fetch_20newsgroups_vectorized,7
"    from sklearn.linear_model import RANSACRegressor, LinearRegression",7
from sklearn import preprocessing as prep,7
#from sklearn import mixture,7
"from sklearn.metrics import roc_auc_score",7
"        from sklearn.feature_extraction.text import TfidfVectorizer",7
"            from sklearn.cross_validation import train_test_split",7
from sklearn.cluster.spectral import spectral_embedding,7
"from sklearn.ensemble import RandomForestClassifier, BaggingClassifier",7
from sklearn.externals.six import PY3,7
from sklearn_theano.datasets import load_sample_image,7
from sklearn.pipeline import _name_estimators,7
"from sklearn.linear_model import LinearRegression, SGDClassifier,\",7
"from sklearn.base import BaseEstimator, TransformerMixin, ClassifierMixin",7
"from sklearn import svm, grid_search",7
"from sklearn.metrics import f1_score, precision_score, recall_score",7
"    from sklearn.manifold import MDS",7
"from sklearn.cross_validation import cross_val_score, StratifiedShuffleSplit",7
from sklearn.feature_extraction.image import reconstruct_from_patches_2d,7
"from sklearn import cluster, covariance, manifold",7
from sklearn.linear_model.base import LinearClassifierMixin,7
from sklearn.preprocessing import binarize,7
"from sklearn.naive_bayes import GaussianNB, BernoulliNB, MultinomialNB",7
from sklearn.datasets.twenty_newsgroups import fetch_20newsgroups,7
"from sklearn.neighbors import NearestNeighbors",7
from sklearn.ensemble import RandomForestClassifier as RFC,7
from sklearn.cross_validation import StratifiedKFold  # NOQA,7
from sklearn import  preprocessing,7
"from sklearn.metrics import accuracy_score",7
# from sklearn.ensemble import RandomForestClassifier,7
"from sklearn.metrics import precision_recall_curve, auc",7
from sklearn.utils.multiclass import unique_labels,7
"from sklearn import preprocessing, metrics, cross_validation",7
"from sklearn import (manifold, datasets, decomposition, ensemble, lda,",7
#from sklearn.decomposition import PCA,7
from sklearn.decomposition import *,7
"from sklearn.metrics import roc_auc_score, accuracy_score",7
"from sklearn.naive_bayes import MultinomialNB, GaussianNB, BernoulliNB",7
from sklearn.cross_validation import check_cv,7
>>> from sklearn.pipeline import Pipeline,7
"    from sklearn.preprocessing import scale",7
from sklearn.ensemble import BaggingRegressor,7
"  from sklearn.cross_validation import train_test_split",7
from sklearn.linear_model.base import LinearModel,7
"    >>> from sklearn.utils.extmath import weighted_mode",7
from sklearn.utils import resample,7
"from sklearn import datasets, cross_validation",7
from sklearn.preprocessing import StandardScaler as Scaler,7
"from sklearn import linear_model, cross_validation, datasets, metrics",7
"        from sklearn.metrics.pairwise import euclidean_distances",7
"    from sklearn.neighbors import KernelDensity",7
"        from sklearn.naive_bayes import GaussianNB",7
"    from sklearn import neighbors, svm",7
"from sklearn.linear_model import RidgeCV, LogisticRegression",7
from sklearn.semi_supervised import label_propagation,7
from sklearn.naive_bayes import MultinomialNB as MNB,7
"    >>> from sklearn.gaussian_process import GaussianProcess",7
from sklearn.linear_model import OrthogonalMatchingPursuit,7
"from sklearn.metrics import classification_report, roc_auc_score, average_precision_score",7
"    from sklearn.decomposition import PCA",7
"    from sklearn.preprocessing import OneHotEncoder",7
"        from sklearn.utils import check_random_state",7
"            from sklearn.neighbors import KernelDensity",7
"from sklearn.linear_model import SGDClassifier",7
from sklearn.utils import as_float_array,7
"from sklearn.decomposition import TruncatedSVD",7
"    from sklearn.metrics.pairwise import euclidean_distances",7
"    >>> from sklearn.metrics.pairwise import euclidean_distances",7
from sklearn.metrics.pairwise import laplacian_kernel,7
from sklearn.cluster import dbscan,7
"    >>> from sklearn.preprocessing import add_dummy_feature",7
from sklearn.metrics import metrics,7
from sklearn.metrics.pairwise import manhattan_distances,7
"from sklearn.preprocessing import MinMaxScaler, StandardScaler",7
from sklearn.cross_validation import *,7
"from sklearn.cross_validation import train_test_split, StratifiedKFold",6
"from sklearn.metrics import precision_score, recall_score, f1_score",6
"from sklearn.feature_extraction import DictVectorizer",6
"  >>> from sklearn.svm import LinearSVC",6
"    from sklearn.neighbors import KNeighborsClassifier as KNN",6
# from sklearn.tree import DecisionTreeClassifier,6
"        >>> from sklearn.decomposition import PCA",6
"    from sklearn.feature_selection import SelectKBest, f_classif",6
"    from sklearn.metrics import roc_curve, auc",6
from sklearn.preprocessing.data import StandardScaler,6
from sklearn.decomposition import FactorAnalysis,6
"from sklearn import linear_model, cross_validation",6
"from sklearn import preprocessing, svm, cross_validation, metrics, pipeline, grid_search",6
"from sklearn.ensemble import RandomForestRegressor, RandomForestClassifier",6
from sklearn.tree import ExtraTreeClassifier,6
"from sklearn.linear_model import LinearRegression",6
"from sklearn import preprocessing, cross_validation, metrics, pipeline, grid_search",6
from sklearn import datasets # generate gaussian mixture,6
"    >>> from sklearn.svm import NuSVR",6
from sklearn.preprocessing import balance_weights,6
from sklearn.datasets.samples_generator import make_swiss_roll,6
from sklearn.utils.fixes import unique,6
from sklearn.linear_model.stochastic_gradient import SGDClassifier,6
"    from sklearn.pipeline import make_pipeline",6
from sklearn.utils import deprecated,6
from sklearn.utils.testing import assert_greater_equal,6
# from sklearn.metrics import confusion_matrix,6
from sklearn.utils.testing import assert_not_in,6
>>> from sklearn.feature_extraction.text import TfidfTransformer,6
from sklearn import multiclass,6
"    >>> from sklearn.naive_bayes import MultinomialNB",6
"  from sklearn.metrics import accuracy_score, log_loss, mean_squared_error",6
"    from sklearn.linear_model.logistic import LogisticRegression",6
# from sklearn.svm import SVC,6
"from sklearn.ensemble import AdaBoostClassifier, RandomForestClassifier, ExtraTreesClassifier, BaggingClassifier",6
"from sklearn import cross_validation, datasets, svm",6
"            from sklearn.externals import joblib",6
"    >>> from sklearn.svm import NuSVC",6
"from sklearn import svm, linear_model, datasets, metrics, base",6
from sklearn.manifold import LocallyLinearEmbedding,6
"from sklearn.svm import SVR, SVC",6
"    >>> from sklearn.lda import LDA",6
#from sklearn.feature_extraction.text import TfidfVectorizer,6
from sklearn.decomposition.pca import PCA,6
"from sklearn.utils.testing import assert_less, assert_greater",6
"from sklearn.ensemble import GradientBoostingClassifier",6
from sklearn import covariance,6
"    from sklearn.ensemble import AdaBoostClassifier",6
# from sklearn.lda import LDA,6
"from sklearn.metrics import auc, precision_recall_curve",6
"from sklearn.linear_model import (RandomizedLasso, lasso_stability_path,",6
# from sklearn import preprocessing,6
from sklearn.decomposition import DictionaryLearning,6
"    from sklearn.naive_bayes import BernoulliNB",6
"from sklearn.metrics import median_absolute_error, mean_squared_error",6
from sklearn.datasets.samples_generator import make_low_rank_matrix,6
from sklearn import __version__ as sklearn_version,6
"from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor",6
"    >>> from sklearn.pipeline import Pipeline",6
from sklearn.metrics import pairwise,6
>>> from sklearn.naive_bayes import MultinomialNB,6
"        from sklearn.datasets import fetch_mldata",6
"from sklearn.ensemble import GradientBoostingClassifier, RandomForestClassifier",6
"from sklearn.linear_model import ARDRegression, LinearRegression",6
from sklearn import random_projection,6
from sklearn.datasets import make_checkerboard,6
"from sklearn.metrics import mean_squared_error, roc_auc_score",6
"    >>> from sklearn.naive_bayes import BernoulliNB",6
from sklearn.metrics import silhouette_samples,6
from sklearn.decomposition import fastica,6
from sklearn.linear_model import (LogisticRegression),6
"      >>> from sklearn.utils import resample",6
"    from sklearn.kernel_ridge import KernelRidge",6
"	from sklearn.svm import SVC",6
"from sklearn import pipeline, metrics, grid_search",6
"from sklearn import preprocessing ",6
"    >>> from sklearn.metrics import roc_auc_score",6
"from sklearn.ensemble import AdaBoostClassifier, RandomForestClassifier",6
from sklearn.datasets import load_sample_image,6
"from sklearn import cluster, datasets, preprocessing",6
"from sklearn.ensemble import RandomForestRegressor, BaggingRegressor, GradientBoostingRegressor",6
"from sklearn.metrics import auc, roc_curve",6
"	from sklearn.feature_extraction import DictVectorizer",6
"        from sklearn.cross_validation import LeaveOneOut",6
"from sklearn.metrics import classification_report",6
"    from sklearn.metrics import SCORERS",6
"        from sklearn.utils import shuffle",6
from sklearn.feature_extraction import DictVectorizer as DV,6
"from sklearn.linear_model import SGDClassifier, Perceptron",6
"from sklearn.metrics import roc_curve, auc, accuracy_score",6
"        >>> from sklearn.linear_model import LinearRegression",6
from sklearn.utils import atleast2d_or_csr,6
"from sklearn import linear_model ",6
from sklearn.cross_validation import train_test_split as tts,6
"from sklearn.cross_validation import StratifiedKFold, ShuffleSplit",6
"from sklearn.tree import DecisionTreeClassifier, export_graphviz",6
#from sklearn.cluster import KMeans,6
"from sklearn.preprocessing import StandardScaler, LabelEncoder",6
from sklearn.externals.joblib import delayed,6
"            from sklearn.neighbors import KNeighborsClassifier",6
"from sklearn.linear_model import (LinearRegression, Lasso, ElasticNet, Ridge,",6
"      >>> from sklearn.utils import shuffle",6
"    >>> from sklearn.utils import gen_even_slices",6
"from sklearn import svm ",6
"  >>> from sklearn.exceptions import NotFittedError",6
"from sklearn.preprocessing import MinMaxScaler",6
"from sklearn.metrics import precision_recall_fscore_support, confusion_matrix",6
from sklearn.metrics import log_loss  # NOQA,6
"    >>> from sklearn.metrics import average_precision_score",6
from sklearn.metrics import consensus_score,6
"    from sklearn.preprocessing import LabelBinarizer",6
"    >>> from sklearn.metrics import precision_recall_curve",6
"from sklearn.feature_extraction import DictVectorizer, FeatureHasher",6
from sklearn.linear_model import SGDClassifier #SVM Linear,6
from sklearn.linear_model import ElasticNetCV,6
#from sklearn.svm import LinearSVC,6
from sklearn_pmml.convert.tree import DecisionTreeConverter,6
"from sklearn.utils import check_random_state, check_array",6
"from sklearn.grid_search import GridSearchCV, ParameterGrid",6
"from sklearn.cross_validation import cross_val_score, ShuffleSplit, cross_val_predict",6
">>> from sklearn.feature_selection import SelectKBest, chi2",6
"from sklearn.metrics import pairwise, zero_one_loss, mean_squared_error",6
"from sklearn.ensemble import *",6
"    from sklearn.metrics import log_loss",6
"from sklearn.linear_model import SGDClassifier, LogisticRegression, RidgeClassifier",6
"from sklearn.preprocessing import LabelEncoder, OneHotEncoder",6
from sklearn.svm import LinearSVC as SVM,6
"    from sklearn.manifold import TSNE",6
"from sklearn.datasets.samples_generator import (make_classification,",6
from sklearn.ensemble import ExtraTreesClassifier as ET,6
from sklearn.linear_model import RandomizedLasso,6
"from sklearn.decomposition import KernelPCA, PCA",6
from sklearn.preprocessing import *,6
"from sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier",6
from sklearn.tree import *,6
"from sklearn.utils.validation import check_arrays, atleast2d_or_csr",6
#from sklearn.svm import SVC,6
from sklearn.metrics.scorer import SCORERS,5
"from sklearn.linear_model import enet_path",5
"from sklearn.metrics import roc_curve, auc, precision_recall_curve",5
"            from sklearn.preprocessing import StandardScaler",5
"from sklearn.cluster import Ward, WardAgglomeration, ward_tree",5
"from sklearn.utils import check_X_y, check_array",5
"        from sklearn.cluster import MiniBatchKMeans",5
"from sklearn.preprocessing import Imputer",5
"            from sklearn.grid_search import GridSearchCV",5
from sklearn.linear_model import LogisticRegression as LGR,5
"from sklearn.metrics import f1_score, precision_recall_fscore_support",5
from sklearn.datasets.svmlight_format import dump_svmlight_file,5
"    >>> from sklearn import datasets, preprocessing",5
"from sklearn.metrics import roc_auc_score, roc_curve",5
"    from sklearn.manifold import LocallyLinearEmbedding",5
"from sklearn import datasets, preprocessing",5
"from sklearn.svm import SVC ",5
from sklearn import utils,5
"from sklearn.feature_selection import SelectKBest, chi2",5
"    >>> from sklearn.metrics.pairwise import paired_distances",5
"from sklearn.linear_model import Ridge, RidgeClassifier, LogisticRegression",5
"    from sklearn.grid_search import IterGrid as ParameterGrid",5
from sklearn.metrics.pairwise import pairwise_distances_argmin,5
"  from sklearn.metrics.scorer import make_scorer",5
"from sklearn.feature_extraction.text import TfidfTransformer, CountVectorizer",5
"from sklearn.naive_bayes import BernoulliNB, MultinomialNB",5
"from sklearn.ensemble import RandomForestClassifier, forest",5
"from sklearn import cross_decomposition, naive_bayes, neighbors, kernel_approximation, random_projection, isotonic",5
"from sklearn import linear_model, naive_bayes, neighbors, cross_validation, feature_selection",5
"from sklearn import neighbors, datasets",5
"    >>> from sklearn.linear_model import lars_path",5
from sklearn.random_projection import SparseRandomProjection,5
"  from sklearn.grid_search import RandomizedSearchCV",5
#from sklearn.externals import joblib,5
"#from sklearn.cross_validation import StratifiedKFold",5
"    from sklearn.grid_search import ParameterGrid",5
"      from sklearn.utils.validation import NotFittedError",5
"    >>> from sklearn.metrics import r2_score",5
"from sklearn import cross_validation, linear_model",5
"from sklearn import datasets, manifold",5
"from sklearn.base import BaseEstimator,ClassifierMixin",5
"from sklearn import svm, cluster",5
#from sklearn.metrics import classification_report,5
"                from sklearn.cluster import DBSCAN",5
"from sklearn import metrics, cross_validation, linear_model",5
"from sklearn.decomposition import RandomizedPCA, PCA",5
"from sklearn.linear_model.base import LinearClassifierMixin, SparseCoefMixin",5
"from sklearn.metrics.cluster import v_measure_score",5
"from sklearn import linear_model, pipeline, preprocessing",5
"from sklearn.decomposition import PCA, RandomizedPCA",5
"    >>> from sklearn.datasets.samples_generator import make_blobs",5
from sklearn.mixture import gmm,5
"            from sklearn.svm import LinearSVC",5
"        from sklearn.cluster import DBSCAN",5
"    from sklearn.decomposition import FastICA",5
"            >>> from sklearn.externals.joblib import Parallel, delayed",5
from sklearn.utils.extmath import svd_flip,5
from sklearn.decomposition import SparsePCA,5
"from sklearn.utils import check_random_state, tosequence",5
from sklearn.datasets import load_svmlight_files,5
"from sklearn.naive_bayes import BernoulliNB",5
from sklearn.metrics.pairwise import rbf_kernel   # noqa,5
from sklearn.linear_model.ridge import Ridge,5
from sklearn.metrics import accuracy_score as accuracy,5
"from sklearn.decomposition import PCA, FastICA, FactorAnalysis",5
from sklearn.cluster.affinity_propagation_ import affinity_propagation,5
# from sklearn.linear_model import RidgeClassifier as Ridge,5
"from sklearn.externals.joblib import Parallel, delayed, logger",5
"    from sklearn.calibration import CalibratedClassifierCV",5
"                        from sklearn.covariance import LedoitWolf",5
from sklearn.decomposition import sparse_encode,5
"        from sklearn.manifold.isomap import Isomap",5
#from sklearn.metrics import accuracy_score,5
"from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score",5
"    from sklearn.ensemble import ExtraTreesClassifier",5
"    >>> from sklearn.datasets import load_sample_images",5
"from sklearn.preprocessing import scale, MinMaxScaler",5
"from sklearn.linear_model import LinearRegression, Lasso, ElasticNet",5
"from sklearn.ensemble import RandomForestClassifier, VotingClassifier",5
from sklearn.random_projection import BaseRandomProjection,5
"    from sklearn.metrics import roc_curve",5
"from sklearn.cross_validation import LeaveOneOut,StratifiedKFold",5
"from sklearn.preprocessing import LabelEncoder, StandardScaler",5
#from sklearn import decomposition,5
from sklearn.utils.validation import _num_samples,5
from sklearn.datasets import load_diabetes,5
"from sklearn import linear_model, metrics",5
from sklearn.linear_model import ARDRegression,5
from sklearn.utils.testing import META_ESTIMATORS,5
"from sklearn.feature_selection import f_classif, SelectKBest",5
from sklearn import svm;,5
"from sklearn.linear_model import Ridge, Lasso",5
"from sklearn import cross_validation, cross_validation, grid_search, linear_model, svm, metrics",5
"from sklearn.multiclass import OneVsOneClassifier, OneVsRestClassifier",5
from sklearn.decomposition import TruncatedSVD as SVD,5
from sklearn.metrics import hinge_loss,5
"            from sklearn.svm import SVC ",5
"    >>> from sklearn import tree",5
from sklearn.utils.fixes import bincount,5
"from sklearn.base import BaseEstimator, RegressorMixin, ClassifierMixin",5
"from sklearn.cross_validation import StratifiedKFold, train_test_split",5
from sklearn.utils.testing import assert_no_warnings,5
from sklearn.metrics import pairwise_distances_argmin,5
# from sklearn.svm import SVC as SVC  # Support vector machines,5
"from sklearn.utils import shuffle",5
"    from sklearn.feature_selection import RFECV",5
from sklearn.linear_model import LogisticRegression as lr,5
# from sklearn.qda import QDA,5
"from sklearn.linear_model import LogisticRegression, Lasso, LassoCV, RandomizedLogisticRegression, lasso_stability_path, LassoLarsCV",5
from sklearn.metrics.metrics import UndefinedMetricWarning,5
"from sklearn.ensemble import GradientBoostingClassifier, GradientBoostingRegressor, BaggingClassifier, BaggingRegressor, RandomForestClassifier",5
"from sklearn.utils.mocking import CheckingClassifier, MockDataFrame",5
"from sklearn.preprocessing import normalize, scale",5
"    from sklearn.linear_model import LogisticRegressionCV",5
"from sklearn import linear_model, svm",5
from sklearn.ensemble import RandomTreesEmbedding,5
"    from sklearn.externals.joblib import Parallel, delayed",5
from sklearn.preprocessing import Binarizer,5
"            from sklearn.svm import SVC",5
from sklearn.utils.extmath import *,5
# from sklearn.ensemble import BaggingClassifier as Bagging,5
"    from sklearn.neighbors import KNeighborsRegressor",5
from sklearn.linear_model import ElasticNet,5
"    from sklearn.metrics import adjusted_rand_score",5
"from sklearn.decomposition import PCA, TruncatedSVD",5
#     from sklearn import cross_validation,5
"from sklearn.cluster import KMeans, SpectralClustering",5
"from sklearn.learning_curve import learning_curve, validation_curve",5
"from sklearn.preprocessing import StandardScaler, OneHotEncoder",5
"from sklearn.metrics import accuracy_score, classification_report",5
"from sklearn.metrics import accuracy_score, roc_auc_score, mean_squared_error",5
from sklearn.lda import LDA  # noqa,5
"    >>> from sklearn.datasets import load_sample_image",5
from sklearn.cluster.spectral import spectral_embedding  # noqa,5
"from sklearn.base import (ClassifierMixin, RegressorMixin, TransformerMixin,",5
"from sklearn.preprocessing import StandardScaler,MinMaxScaler",5
"        >>> from sklearn.datasets import load_digits",5
"    from sklearn.ensemble import RandomForestRegressor",5
from sklearn.utils import safe_mask,5
"        from sklearn.ensemble import RandomForestRegressor",5
from sklearn.datasets import samples_generator as sg,5
from sklearn import neural_network,5
from sklearn.neighbors import LSHForest,5
"    from sklearn.cross_decomposition import PLSRegression",5
"from sklearn import cluster, mixture",5
"from sklearn.metrics import accuracy_score,classification_report#,confusion_matrix",5
"from sklearn import cross_validation, externals",5
#from sklearn.preprocessing import StandardScaler,5
"from sklearn.feature_selection import RFECV,RFE,SelectPercentile, f_classif",5
"                        from sklearn.covariance import OAS",5
"from sklearn.base import clone, BaseEstimator",5
"from sklearn.naive_bayes import BernoulliNB, GaussianNB",5
from sklearn.ensemble.gradient_boosting import GradientBoostingClassifier,5
"from sklearn.metrics import roc_curve, auc",5
from sklearn.covariance import graph_lasso,5
"from sklearn.metrics.pairwise import linear_kernel",5
"from sklearn.datasets import make_blobs",5
"        from sklearn.model_selection import cross_val_score",5
from sklearn.preprocessing import KernelCenterer,5
"from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer",5
"    from sklearn.metrics import normalized_mutual_info_score",5
from sklearn.metrics import roc_auc_score;,5
"from sklearn.covariance import ShrunkCovariance, LedoitWolf",5
from sklearn.svm import libsvm,5
"from sklearn import metrics, ensemble, decomposition, preprocessing, svm, manifold, mixture, neural_network",5
from sklearn.ensemble import RandomForestRegressor as RandomForestReg,5
"from sklearn.kernel_approximation import RBFSampler, Nystroem",5
"from sklearn.ensemble import GradientBoostingRegressor, RandomForestRegressor",5
# from sklearn.neighbors import KNeighborsClassifier as KNN,5
"from sklearn.metrics import accuracy_score, confusion_matrix",5
"from sklearn.base import is_classifier, clone",5
"from sklearn.feature_selection.rfe import RFE, RFECV",5
from sklearn.externals.joblib import Parallel,5
"from sklearn.manifold import TSNE, MDS",5
"    >>> from sklearn.feature_selection import f_regression",5
"from sklearn.preprocessing import LabelEncoder, scale",5
"    >>> from sklearn.datasets import samples_generator",5
from sklearn.covariance import GraphLassoCV,5
"from sklearn import preprocessing, neighbors, svm",5
from sklearn.cluster.bicluster import SpectralBiclustering,5
from sklearn import cross_validation as cv;,5
"                    from sklearn.covariance import ShrunkCovariance",5
"from sklearn.externals.joblib import Memory, delayed, Parallel",5
"from sklearn.multiclass import OneVsRestClassifier",5
"        from sklearn.mixture import GMM",5
from sklearn.linear_model import RANSACRegressor,5
"from sklearn.neighbors import KDTree, BallTree",5
"from sklearn.metrics import confusion_matrix, precision_recall_fscore_support",5
"from sklearn.tree import DecisionTreeClassifier ",5
from sklearn.grid_search      import GridSearchCV,5
"from sklearn.utils import array2d, as_float_array",5
#from sklearn.cluster import Ward,5
from sklearn.datasets import samples_generator,5
"from sklearn_pandas import DataFrameMapper, cross_val_score",5
# from sklearn.feature_extraction import DictVectorizer,5
"    from sklearn.multiclass import OneVsRestClassifier",5
from sklearn.utils.estimator_checks import (,5
from sklearn import qda,5
"        from sklearn.model_selection import GridSearchCV",5
"from sklearn.externals.joblib import load, dump",5
"    >>> from sklearn.decomposition import RandomizedPCA",5
#from sklearn.multiclass import OneVsRestClassifier,5
"from sklearn.linear_model import LinearRegression, LassoCV, LassoLarsIC",4
"        from sklearn.linear_model.coordinate_descent import MultiTaskLasso  # noqa",4
"from sklearn.linear_model.coordinate_descent import Lasso, \",4
"            from sklearn import tree",4
"from sklearn.cross_validation import check_cv, _safe_split, _score",4
"        from sklearn.preprocessing import Normalizer",4
"		from sklearn.cluster import SpectralClustering",4
# from sklearn.cross_validation import KFold,4
"from sklearn.metrics.pairwise import chi2_kernel, additive_chi2_kernel",4
from sklearn.naive_bayes import MultinomialNB as mnb,4
"    from sklearn.datasets.samples_generator import make_blobs",4
"from sklearn.datasets import load_digits, load_iris",4
"from sklearn.cluster import KMeans, k_means",4
#from sklearn.ensemble import RandomForestClassifier,4
"        from sklearn.model_selection import (KFold, StratifiedKFold,",4
"from sklearn.metrics.pairwise import cosine_similarity",4
from sklearn.utils.sparsefuncs import mean_variance_axis0,4
"from sklearn.metrics import classification_report, make_scorer",4
"from sklearn.feature_selection import SelectKBest, f_classif  # noqa",4
"from sklearn.cluster import KMeans,MiniBatchKMeans",4
"        from sklearn.datasets import load_iris",4
"from sklearn.preprocessing import OneHotEncoder, StandardScaler",4
# from sklearn.cluster import KMeans,4
"from sklearn.metrics import roc_auc_score, average_precision_score",4
"    >>> from sklearn.neural_network import BernoulliRBM",4
"    from sklearn.utils import shuffle",4
"from sklearn.metrics import classification_report, mean_squared_error",4
"from sklearn import svm, metrics, preprocessing",4
"from sklearn.ensemble import AdaBoostClassifier, BaggingClassifier",4
"	from sklearn.cluster import DBSCAN",4
"from sklearn import decomposition ",4
"        from sklearn.preprocessing import LabelEncoder",4
"            from sklearn.tree import DecisionTreeClassifier",4
from sklearn.preprocessing._weights import _balance_weights,4
"      >>> from sklearn.externals.joblib import Memory",4
from sklearn.metrics.pairwise import paired_distances,4
"            from sklearn import ensemble",4
"from sklearn.base import BaseEstimator, clone, is_classifier",4
from sklearn.ensemble import GradientBoostingClassifier as GBDT,4
"from sklearn.cross_validation import cross_val_score",4
"    from sklearn import decomposition",4
"from sklearn import preprocessing, linear_model",4
"    >>> from sklearn.svm import LinearSVC as SVM",4
"    from sklearn import neighbors",4
from sklearn.linear_model import PassiveAggressiveRegressor,4
"        from sklearn.model_selection import (check_cv, StratifiedKFold, KFold)",4
from sklearn.metrics import label_ranking_average_precision_score,4
"        from sklearn.ensemble import GradientBoostingClassifier",4
"    >>> from sklearn.utils import gen_batches",4
from sklearn.covariance import empirical_covariance,4
from sklearn.metrics import get_scorer,4
"from sklearn.ensemble import RandomForestClassifier, GradientBoostingRegressor",4
from sklearn_pmml.convert.utils import estimator_to_converter,4
"    from sklearn.grid_search import ParameterSampler",4
from sklearn.covariance import MinCovDet,4
from sklearn.datasets import make_sparse_coded_signal,4
"    from sklearn.cluster import KMeans, MiniBatchKMeans",4
#from sklearn.feature_extraction.text import CountVectorizer,4
# from sklearn.ensemble import AdaBoostClassifier,4
"from sklearn import datasets, svm, cross_validation",4
from sklearn.utils.validation import assert_all_finite,4
"from sklearn.feature_selection import (chi2, f_classif, f_oneway, f_regression,",4
"from sklearn.metrics import adjusted_mutual_info_score, adjusted_rand_score",4
from sklearn.utils.random import sample_without_replacement,4
from sklearn.utils import extmath,4
"    >>> from sklearn.ensemble import GradientBoostingClassifier",4
"from sklearn.preprocessing import OneHotEncoder, LabelEncoder",4
"from sklearn.feature_extraction.text import CountVectorizer ",4
"                from sklearn.neighbors import KernelDensity",4
"        from sklearn.metrics import f1_score",4
from sklearn.utils.graph import graph_laplacian,4
"    from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA",4
"                from sklearn.ensemble import GradientBoostingClassifier",4
from sklearn.utils.testing import skip_if_32bit,4
from sklearn.utils import safe_asarray,4
"        from sklearn.metrics import (brier_score_loss, precision_score, recall_score,f1_score)",4
"            >> from sklearn.utils.validation import NonBLASDotWarning",4
"#from sklearn.decomposition import PCA",4
"from sklearn import mixture",4
from sklearn.externals.six import StringIO  # doctest: +SKIP,4
"from sklearn.metrics import adjusted_mutual_info_score, \",4
from sklearn.datasets import make_friedman1,4
"	from sklearn import tree",4
from sklearn.base import copy,4
"from sklearn.metrics import roc_curve, auc, roc_auc_score",4
"from sklearn.cross_validation import StratifiedShuffleSplit, cross_val_score",4
"    from sklearn import mixture",4
#from sklearn.datasets import fetch_20newsgroups,4
"        from sklearn.base import is_classifier",4
"from sklearn.linear_model import LassoCV, RidgeCV, ElasticNetCV",4
"        from sklearn.cross_validation import (KFold, StratifiedKFold,",4
from sklearn.ensemble.base import BaseEnsemble,4
from sklearn.metrics.pairwise import pairwise_distances_argmin_min,4
"    from sklearn.metrics import roc_auc_score, mean_squared_error",4
"from sklearn.feature_extraction import FeatureHasher, DictVectorizer",4
# from sklearn.metrics import precision_recall_curve,4
#from sklearn.ensemble import AdaBoostRegressor,4
"from sklearn.base import BaseEstimator, ClassifierMixin, TransformerMixin, clone",4
from sklearn.datasets import make_swiss_roll,4
"from sklearn.feature_extraction import DictVectorizer,FeatureHasher",4
"from sklearn.linear_model import LogisticRegression,SGDClassifier",4
"    >>> from sklearn.linear_model import SGDClassifier",4
"from sklearn.svm import SVC,LinearSVC",4
"from sklearn.covariance import GraphLassoCV, ledoit_wolf",4
"from sklearn.covariance import GraphLassoCV, LedoitWolf, OAS, \",4
"            from sklearn.ensemble import RandomForestClassifier",4
"  from sklearn.externals import joblib",4
"        from sklearn.cross_validation import StratifiedShuffleSplit",4
"        from sklearn.naive_bayes import MultinomialNB",4
"from sklearn import ensemble, feature_extraction, preprocessing",4
"    from sklearn.base import BaseEstimator",4
"from sklearn import cross_validation  # , metrics",4
"from sklearn import (metrics, cross_validation, linear_model, preprocessing)",4
from sklearn.metrics.pairwise import cosine_distances,4
"from sklearn.cross_validation import cross_val_score, ShuffleSplit  # noqa",4
"from sklearn.linear_model import Ridge, LogisticRegression",4
"from sklearn.datasets import load_svmlight_file,dump_svmlight_file",4
"        from sklearn.ensemble import ExtraTreesClassifier",4
"from sklearn.utils import check_X_y,check_array",4
"from sklearn.ensemble import RandomForestRegressor",4
#from sklearn.cluster import MeanShift,4
# from sklearn.utils.testing import assert_array_equal,4
"    from sklearn.ensemble import GradientBoostingRegressor",4
"#from sklearn.feature_selection import SelectKBest, f_classif",4
"from sklearn.metrics import hamming_loss, accuracy_score, roc_auc_score",4
from sklearn.feature_selection.base import SelectorMixin,4
#     from sklearn.preprocessing import MinMaxScaler,4
"    >>> from sklearn.decomposition import PCA, TruncatedSVD",4
"    from sklearn.manifold import Isomap",4
"from sklearn.cluster import KMeans, SpectralClustering, AgglomerativeClustering",4
from sklearn_theano.feature_extraction import OverfeatLocalizer,4
from sklearn.externals.six import with_metaclass,4
"            from sklearn.linear_model import LinearRegression",4
"from sklearn.cluster import MiniBatchKMeans",4
"from sklearn.metrics import r2_score, accuracy_score",4
"from sklearn.utils.extmath import norm, squared_norm",4
"from sklearn.feature_extraction.image import extract_patches_2d, reconstruct_from_patches_2d",4
# from sklearn.linear_model import SGDClassifier,4
"from sklearn.utils.validation import _num_samples, indexable",4
"  from sklearn.cluster import MiniBatchKMeans",4
"from sklearn.cluster import Ward,WardAgglomeration",4
"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score",4
from sklearn.metrics import pairwise_kernels,4
"from sklearn.preprocessing import PolynomialFeatures",4
from sklearn.svm import NuSVC,4
"    from sklearn.externals.joblib import hash",4
"from sklearn.cross_validation import ShuffleSplit, StratifiedShuffleSplit",4
#from sklearn.datasets import load_files,4
from sklearn.metrics import coverage_error,4
"from sklearn.utils.validation import (assert_all_finite, check_is_fitted,",4
from sklearn.decomposition import ProbabilisticPCA,4
from sklearn.feature_extraction.text import ENGLISH_STOP_WORDS,4
from sklearn.ensemble.gradient_boosting import ZeroEstimator,4
"  from sklearn.base import BaseEstimator, ClassifierMixin, RegressorMixin, TransformerMixin",4
"from sklearn.feature_extraction.text import HashingVectorizer",4
from sklearn.utils.extmath import log_logistic,4
"from sklearn.decomposition import TruncatedSVD ",4
from sklearn.linear_model.ridge import RidgeClassifierCV,4
"from sklearn.pipeline import Pipeline,FeatureUnion",4
"from sklearn import neighbors,svm,preprocessing",4
"from sklearn.linear_model import LinearRegression, Lasso",4
"      >>> from sklearn.externals.joblib import Parallel, delayed",4
"from sklearn.externals.joblib import Memory, Parallel, delayed",4
"    from sklearn.datasets.base import Bunch",4
"from sklearn import neighbors, linear_model, svm, ensemble, naive_bayes, lda, qda, cross_validation",4
from sklearn.utils.arpack import eigsh,4
"    >>> from sklearn.ensemble import GradientBoostingRegressor",4
"from sklearn import cross_validation, svm",4
"    from sklearn.utils import check_array",4
from sklearn.decomposition import PCA as skPCA,4
"from sklearn.base import (clone, ClassifierMixin, RegressorMixin,",4
from sklearn.linear_model.ridge import RidgeCV,4
from sklearn.utils.testing import assert_array_less,4
"from sklearn.linear_model import LinearRegression ",4
from sklearn.utils import safe_indexing,4
"from sklearn.cross_validation import KFold",4
"from sklearn import linear_model, svm, cross_validation, grid_search, metrics",4
"from sklearn.metrics import precision_score, accuracy_score, recall_score",4
"from sklearn.ensemble import GradientBoostingClassifier, GradientBoostingRegressor",4
"    >>> from sklearn.hmm import MultinomialHMM",4
"    from sklearn.utils import compute_class_weight",4
"    from sklearn.metrics.pairwise import linear_kernel",4
"from sklearn.metrics import roc_auc_score, f1_score",4
"from sklearn.svm import SVR",4
"        from sklearn.cross_validation import (check_cv, StratifiedKFold, KFold)",4
"        from sklearn.linear_model.coordinate_descent import MultiTaskLasso",4
"from sklearn import linear_model, decomposition, datasets",4
from sklearn.utils.fixes import np_version,4
"            from sklearn.base import is_regressor",4
"    >>> from sklearn.feature_extraction import image",4
"        from sklearn.calibration import calibration_curve",4
from sklearn.linear_model import LassoLarsCV,4
"from sklearn_vw import VW, VWClassifier, VWRegressor, tovw",4
"from sklearn.externals import joblib	# to load data",4
"from sklearn.preprocessing import *",4
"    from sklearn.cluster import MiniBatchKMeans",4
"    from sklearn import cluster",4
# from sklearn import tree,4
"from sklearn import cluster",4
"from sklearn_theano.base import (Convolution, Relu, MaxPool, FancyMaxPool,",4
"    >>> from sklearn.feature_extraction import DictVectorizer",4
#from sklearn import tree,4
from sklearn.neighbors import NearestNeighbors as NN,4
"from sklearn.feature_extraction.text import CountVectorizer,TfidfTransformer,HashingVectorizer",4
from sklearn.feature_extraction.image import extract_patches,4
"from sklearn.metrics import confusion_matrix",4
from sklearn.cluster import Birch,4
"from sklearn.utils.arpack import eigsh  ",4
from sklearn.cluster import FeatureAgglomeration,4
"    >>> from sklearn.feature_selection import RFECV",4
from sklearn.linear_model.ridge import _RidgeGCV,4
"from sklearn.metrics import roc_auc_score, log_loss",4
"from sklearn.preprocessing import PolynomialFeatures, MinMaxScaler",4
"    from sklearn.datasets import fetch_20newsgroups",4
from sklearn.metrics.pairwise import chi2_kernel,4
"        from sklearn.preprocessing import scale",4
# from sklearn import neighbors,4
"from sklearn.preprocessing import StandardScaler, Normalizer",4
from sklearn.neighbors import BallTree as BallTree,4
"            from sklearn.metrics import mean_squared_error",4
from sklearn.semi_supervised import LabelSpreading,4
"from sklearn.covariance import oas, ledoit_wolf, fast_mcd, empirical_covariance",4
from sklearn.decomposition import randomized_svd,4
"from sklearn.utils.extmath import fast_dot, _fast_dot",4
"    >>> from sklearn.utils.multiclass import is_multilabel",4
from sklearn.metrics.pairwise import check_pairwise_arrays,4
from sklearn.linear_model.ridge import RidgeClassifier,4
from sklearn.neighbors import *,4
"from sklearn.utils.testing import assert_false, clean_warning_registry",4
"from sklearn.neighbors import kneighbors_graph, NearestNeighbors",4
"        from sklearn import grid_search",4
from sklearn.manifold import SpectralEmbedding,4
"        from sklearn.metrics import accuracy_score, mean_squared_error",4
"    >>> from sklearn.datasets import make_blobs",4
from sklearn.calibration import _sigmoid_calibration,4
"from sklearn.base import RegressorMixin, BaseEstimator, TransformerMixin",4
"        from sklearn import datasets",4
# from sklearn.multiclass import OneVsRestClassifier,4
"    from sklearn.cross_validation import LeaveOneOut",4
"        from sklearn.metrics import roc_auc_score",4
"        from sklearn.decomposition import FastICA",4
"from sklearn import neighbors",4
"    from sklearn.cross_validation import KFold",4
"from sklearn import cross_validation, grid_search",4
"    from sklearn.utils import check_arrays",4
from sklearn.preprocessing.label import LabelEncoder,4
"    from sklearn.preprocessing import StandardScaler",4
"from sklearn import decomposition, pipeline, metrics, grid_search",4
from sklearn.utils import murmurhash3_32,4
"from sklearn.decomposition import PCA, FastICA",4
from sklearn.ensemble import RandomForestClassifier as rfc,4
"from sklearn.ensemble import GradientBoostingClassifier ",4
from sklearn.cluster import *,3
"      >>> from sklearn.metrics.cluster import adjusted_rand_score",3
"from sklearn import decomposition",3
"from sklearn.ensemble import RandomForestRegressor,ExtraTreesRegressor",3
"from sklearn.metrics import confusion_matrix, classification_report, accuracy_score",3
"    from sklearn.utils.validation import NotFittedError  # pylint: disable=ungrouped-imports",3
"from sklearn.linear_model import RidgeCV, Ridge",3
"        from sklearn.feature_extraction.text import CountVectorizer",3
from sklearn.utils.extmath import fast_dot,3
"from sklearn.metrics import precision_recall_fscore_support,matthews_corrcoef, classification_report,confusion_matrix",3
"from sklearn.metrics import roc_auc_score, roc_curve, accuracy_score, precision_score, recall_score",3
"	from sklearn.svm import LinearSVC",3
"from sklearn import cross_validation, grid_search, svm",3
"from sklearn.grid_search import GridSearchCV, ParameterGrid, _CVScoreTuple",3
"from sklearn.base import BaseEstimator,RegressorMixin, ClassifierMixin",3
"from sklearn.ensemble import ExtraTreesClassifier, RandomForestClassifier, \",3
"from sklearn.grid_search import RandomizedSearchCV,GridSearchCV",3
"    >>> from sklearn.neighbors import KNeighborsClassifier",3
"from sklearn.cross_validation import KFold, train_test_split",3
"        from sklearn.lda import LDA",3
"from sklearn.preprocessing import OneHotEncoder, MinMaxScaler",3
from sklearn.metrics import brier_score_loss,3
"from sklearn.grid_search import (GridSearchCV, RandomizedSearchCV,",3
"        from sklearn.feature_extraction import text",3
from sklearn.ensemble.partial_dependence import partial_dependence,3
"from sklearn.metrics import precision_score",3
"from sklearn.metrics import f1_score",3
"    >>> from sklearn.metrics import label_ranking_average_precision_score",3
from sklearn.metrics.pairwise import PAIRWISE_KERNEL_FUNCTIONS,3
"from sklearn.naive_bayes import GaussianNB, BernoulliNB",3
"from sklearn.metrics import recall_score",3
"            from sklearn.decomposition import PCA, FastICA",3
"from sklearn.feature_selection import RFE, RFECV, SelectFdr,SelectFwe,SelectKBest",3
"from sklearn.ensemble import RandomForestClassifier, RandomForestRegressor ",3
"# from sklearn.feature_selection import chi2, f_classif, f_regression",3
from sklearn.preprocessing.label import label_binarize,3
"# from sklearn.feature_extraction.text import TfidfTransformer, CountVectorizer",3
"		from sklearn.cluster import DBSCAN",3
from sklearn.preprocessing.data import OneHotEncoder,3
from sklearn.ensemble.gradient_boosting import LogOddsEstimator,3
"    from sklearn.ensemble import AdaBoostRegressor",3
#from sklearn import metrics,3
"    from sklearn.cross_validation import cross_val_predict",3
"from sklearn.neighbors import KNeighborsRegressor",3
"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, GradientBoostingRegressor",3
from sklearn.metrics.metrics import _check_clf_targets,3
"from sklearn import tree, svm",3
from sklearn.metrics.cluster import entropy,3
"from sklearn import cross_validation ",3
from sklearn.externals.joblib import hash,3
"from sklearn.linear_model import LogisticRegression, RidgeClassifier, \",3
from sklearn.ensemble import RandomForestRegressor as RF,3
from sklearn.utils import shuffle as sh,3
from sklearn.linear_model import LassoLars,3
from sklearn.cluster.k_means_ import _labels_inertia,3
"    from sklearn.svm import LinearSVC as SVM",3
#from sklearn.neighbors import KDTree,3
"                from sklearn.cluster import KMeans",3
from sklearn.hmm import GaussianHMM,3
"# 	from sklearn import tree",3
"        from sklearn.decomposition import NMF",3
"                from sklearn.ensemble import ExtraTreesClassifier",3
"from sklearn.linear_model import Perceptron",3
"from sklearn.preprocessing import StandardScaler ",3
"    from sklearn.preprocessing import StandardScaler, MinMaxScaler",3
from sklearn.metrics.metrics import _average_binary_score,3
from sklearn.preprocessing import MaxAbsScaler,3
"        from sklearn.tree import DecisionTreeClassifier",3
"        from sklearn.datasets import load_digits",3
from sklearn.cross_decomposition import CCA,3
"      >>> from sklearn.metrics.cluster import v_measure_score",3
"from sklearn.gaussian_process import GaussianProcess",3
"from sklearn.externals.six.moves import xrange, zip",3
"from sklearn.metrics import make_scorer,mean_squared_error,r2_score",3
"    from sklearn.svm import OneClassSVM",3
"from sklearn.ensemble import ExtraTreesRegressor, GradientBoostingRegressor",3
"from sklearn.preprocessing import normalize ",3
"    from sklearn import neighbors, datasets",3
"    from sklearn.tree import DecisionTreeRegressor",3
from sklearn.utils import array2d,3
from sklearn.feature_extraction.text import TfidfVectorizer as Tfidf,3
from sklearn.datasets.samples_generator import make_sparse_uncorrelated,3
"        >>> from sklearn.svm import SVC",3
"from sklearn import random_projection, decomposition, cluster",3
"# from sklearn.feature_selection import SelectPercentile, SelectKBest",3
"from sklearn.metrics import accuracy_score, precision_recall_fscore_support",3
"        from sklearn.externals.joblib import Parallel, delayed",3
"    from sklearn.cross_decomposition import PLSRegression",3
"    from sklearn.ensemble import BaggingClassifier",3
from sklearn.cross_validation import LeavePLabelOut,3
from sklearn.utils.extmath import norm,3
"from sklearn.base import RegressorMixin, BaseEstimator",3
from sklearn.preprocessing import FunctionTransformer,3
# from sklearn.metrics import log_loss,3
"            from sklearn.cluster import KMeans, Ward",3
#    from sklearn import datasets,3
from sklearn.feature_extraction.text import VectorizerMixin,3
"    >>> from sklearn.hmm import GMMHMM",3
from sklearn.multiclass import fit_ovo,3
"from sklearn.feature_selection import f_regression",3
"                 from sklearn.grid_search import GridSearchCV",3
# from sklearn.linear_model import LinearRegression as LinearReg,3
"from sklearn.linear_model import (Perceptron,",3
"from sklearn import svm, ensemble",3
"    from sklearn import cross_validation, preprocessing",3
"from sklearn.ensemble            import RandomForestClassifier ",3
"from sklearn import metrics, cross_validation  #, linear_model, preprocessing)",3
from sklearn.neighbors import KNeighborsClassifier as knc,3
"from sklearn.linear_model import ElasticNet, LogisticRegression, RandomizedLogisticRegression",3
"from sklearn.linear_model import LinearRegression, BayesianRidge, ARDRegression",3
"from sklearn.linear_model import ElasticNet, LinearRegression",3
"from sklearn.utils import check_random_state, atleast2d_or_csr",3
"from sklearn.feature_selection import chi2, f_classif",3
"from sklearn.externals.joblib import Parallel, delayed, Memory",3
"    >>> from sklearn.utils import _get_n_jobs",3
from sklearn.gaussian_process import regression_models as regression,3
"    >>> from sklearn.decomposition import TruncatedSVD",3
from sklearn.random_projection import johnson_lindenstrauss_min_dim,3
"    >>> from sklearn.random_projection import sparse_random_matrix",3
"from sklearn import grid_search, cross_validation",3
"    from sklearn.model_selection import train_test_split as sklearn_split",3
"    from sklearn.preprocessing import PolynomialFeatures",3
"#from sklearn import svm, datasets",3
"    >>> from sklearn.semi_supervised import LabelSpreading",3
"from sklearn.naive_bayes import MultinomialNB ",3
"from sklearn import cross_validation, svm, grid_search",3
"from sklearn.feature_selection import f_classif, f_regression",3
"from sklearn.ensemble.forest import RandomForestClassifier",3
"from sklearn.metrics import pairwise_distances, adjusted_rand_score",3
"    from sklearn.feature_extraction.text import HashingVectorizer",3
from sklearn.datasets import one_class_data,3
from sklearn.cluster import KMeans as KMeans,3
"    from sklearn import (metrics, cross_validation)",3
from sklearn.feature_extraction.text import strip_accents_ascii,3
"from sklearn.learning_curve import learning_curve",3
>>> from sklearn.svm.sparse import LinearSVC,3
"        from sklearn import decomposition",3
# from sklearn.feature_extraction import text,3
"from sklearn.linear_model import LinearRegression, ElasticNet, Lasso, Ridge, ElasticNetCV",3
"                from sklearn.dummy import DummyClassifier",3
"                from sklearn import svm",3
"from sklearn.preprocessing import LabelEncoder",3
"from sklearn.preprocessing import LabelBinarizer, StandardScaler",3
"from sklearn.cross_validation import StratifiedKFold, StratifiedShuffleSplit, LeaveOneOut",3
"from sklearn.linear_model import Ridge, RidgeCV",3
from sklearn.feature_selection.univariate_selection import SelectKBest,3
"# from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer",3
from sklearn.kernel_approximation import SkewedChi2Sampler,3
from sklearn._build_utils import get_blas_info,3
"    from sklearn import datasets, svm, naive_bayes",3
from sklearn.feature_extraction.text import strip_tags,3
"from sklearn.decomposition import NMF, LatentDirichletAllocation",3
"        from sklearn.metrics import mean_squared_error",3
#from sklearn import linear_model # LogisticRegression,3
"from sklearn.feature_selection import SelectPercentile, f_classif, SelectFromModel",3
"from sklearn import linear_model, ensemble, decomposition, cross_validation, preprocessing",3
"from sklearn.utils.validation import DataConversionWarning, NotFittedError",3
from sklearn.metrics import (,3
"        >>> from sklearn import datasets",3
"from sklearn.cluster import SpectralClustering, spectral_clustering",3
"from sklearn.feature_extraction.text import TfidfVectorizer, HashingVectorizer, CountVectorizer",3
"from sklearn.tree import DecisionTreeClassifier  ",3
"    from sklearn.qda import QDA",3
"    >>> from sklearn.metrics import auc_score",3
"from sklearn.datasets import load_iris, load_digits",3
"from sklearn.feature_extraction.text import (CountVectorizer,",3
"from sklearn.utils.testing import assert_greater, assert_in, assert_less",3
from sklearn.metrics.metrics import _check_reg_targets,3
"from sklearn.cluster import AgglomerativeClustering, FeatureAgglomeration",3
"from sklearn import tree, ensemble",3
"from sklearn.metrics.pairwise import euclidean_distances",3
from sklearn.decomposition.pca import _infer_dimension_,3
"    from sklearn.datasets import get_data_home as gdh",3
"from sklearn.datasets import fetch_20newsgroups",3
from sklearn.tree import DecisionTreeClassifier as dtc,3
"from sklearn.utils.testing import assert_raises_regexp, assert_warns",3
"from sklearn.ensemble import RandomForestRegressor, BaggingRegressor",3
"from sklearn.metrics import v_measure_score, make_scorer, homogeneity_score",3
"from sklearn.linear_model import LinearRegression, Lasso, Ridge",3
from sklearn.metrics import precision_recall_fscore_support as prfs,3
"from sklearn.metrics import (accuracy_score,",3
"                from sklearn import grid_search",3
"from sklearn.ensemble import RandomForestRegressor, AdaBoostRegressor",3
from sklearn import  decomposition,3
from sklearn.metrics import label_ranking_loss,3
from sklearn.datasets import make_gaussian_quantiles,3
"from sklearn.metrics import f1_score, roc_auc_score",3
"from sklearn import svm, linear_model, gaussian_process",3
from sklearn.utils.testing import if_matplotlib,3
"from sklearn.datasets.samples_generator import make_blobs, make_moons",3
"from sklearn.metrics import roc_auc_score, precision_recall_curve",3
from sklearn.cluster.bicluster import BiclusterMixin,3
"from sklearn.metrics import precision_score,accuracy_score,log_loss,recall_score",3
#from sklearn.preprocessing import scale,3
"    >>> from sklearn.decomposition import NMF",3
"from sklearn.dummy import DummyClassifier, DummyRegressor",3
"		from sklearn.datasets import load_digits",3
"from sklearn.preprocessing import MinMaxScaler, StandardScaler, Normalizer",3
"from sklearn import linear_model, preprocessing",3
"from sklearn import svm, preprocessing, cross_validation",3
"from sklearn.base import clone, is_classifier",3
"from sklearn.utils import timeout, max_time, TimeoutError",3
from sklearn.utils.extmath import softmax,3
"  from sklearn.cluster import MeanShift, estimate_bandwidth",3
#from sklearn import ensemble,3
"	from sklearn.neighbors import KNeighborsClassifier",3
"from sklearn.neighbors.nearest_centroid import NearestCentroid",3
"    # from sklearn import metrics",3
"from sklearn.metrics import roc_curve, auc, accuracy_score, precision_score, f1_score, recall_score",3
"    >>> from sklearn.utils.multiclass import unique_labels",3
from sklearn.utils.testing import check_skip_travis,3
"    from sklearn.preprocessing import Normalizer",3
from sklearn.decomposition.tests.test_nmf import random_state,3
# from sklearn.metrics.pairwise import cosine_similarity,3
"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, AdaBoostClassifier",3
from sklearn.utils.extmath import fast_logdet,3
# from sklearn.neighbors.nearest_centroid import NearestCentroid,3
"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, ExtraTreesClassifier, \",3
from sklearn import metrics as skmetrics,3
"from sklearn import cluster, preprocessing, manifold",3
"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, BaggingClassifier",3
"from sklearn import tree, datasets, linear_model",3
"from sklearn_recommender.base import array_to_fm_format, FMDecoder, \",3
"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier",3
"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, ExtraTreesClassifier",3
"                from sklearn import preprocessing",3
"from sklearn.decomposition import PCA, IncrementalPCA, KernelPCA",3
"      >>> from sklearn.metrics.cluster import normalized_mutual_info_score",3
"from sklearn.feature_extraction.text import TfidfVectorizer,CountVectorizer",3
"        >>> from sklearn.linear_model import BayesianRidge",3
from sklearn.utils import shuffle as sk_shuffle,3
"    from sklearn.neural_network import BernoulliRBM",3
"    >>> from sklearn.metrics import mean_squared_error",3
"from sklearn.preprocessing import Imputer, LabelBinarizer",3
"      >>> from sklearn.metrics.cluster import completeness_score",3
"    from sklearn.neighbors import NearestNeighbors as NN",3
"            from sklearn.lda import LDA",3
from sklearn_theano.feature_extraction import OverfeatTransformer,3
"        from sklearn.decomposition import FastICA  # to avoid strong dep.",3
from sklearn.metrics.metrics import accuracy_score,3
"            from sklearn.ensemble import RandomForestRegressor",3
from sklearn.cluster.affinity_propagation_ import AffinityPropagation,3
"from sklearn import datasets, utils",3
from sklearn.ensemble.partial_dependence import plot_partial_dependence,3
"from sklearn import svm, tree",3
"    >>> from sklearn.semi_supervised import LabelPropagation",3
"    >>> from sklearn.metrics import mean_absolute_error",3
from sklearn_pmml.convert.model import EstimatorConverter,3
"from sklearn.cross_validation import ShuffleSplit,cross_val_score",3
"	from sklearn.ensemble import RandomForestClassifier",3
"    >>> from sklearn.linear_model import RandomizedLogisticRegression",3
"from sklearn.svm import SVC, NuSVC",3
from sklearn.metrics import zero_one_score,3
from sklearn.ensemble.gradient_boosting import GradientBoostingRegressor,3
"from sklearn.cross_validation import LeaveOneOut",3
"from sklearn.tree.tree import DecisionTreeRegressor, DTYPE",3
"from sklearn import cross_validation, grid_search, preprocessing",3
"from sklearn.preprocessing import StandardScaler, RobustScaler, MaxAbsScaler, MinMaxScaler",3
from sklearn.hmm import MultinomialHMM,3
"from sklearn.metrics import (f1_score, r2_score, roc_auc_score, fbeta_score,",3
"                    from sklearn.svm import SVC",3
"        from sklearn.linear_model import LinearRegression",3
"        from sklearn.grid_search import ParameterSampler",3
from sklearn.feature_extraction.text import TfidfVectorizer # for creating a TFIDF matrice,3
"from sklearn.utils import check_random_state, shuffle",3
"from sklearn.utils.testing import (assert_true,",3
#from sklearn import preprocessing,3
"            from sklearn.preprocessing import normalize",3
from sklearn.externals.joblib import logger,3
from sklearn.preprocessing.label import LabelBinarizer,3
"from sklearn.metrics import roc_curve, precision_recall_curve, auc",3
# from sklearn.feature_extraction.text import TfidfVectorizer,3
"    from sklearn.cross_validation import train_test_split as sklearn_split",3
from sklearn.preprocessing import normalize ### install from http://scikit-learn.org/stable/,3
"    from sklearn.utils.testing import assert_warns",3
"from sklearn.externals.six import StringIO",3
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis as QDA,3
"from sklearn.metrics import precision_recall_fscore_support, accuracy_score",3
"    from sklearn.preprocessing import Imputer",3
# from sklearn.neural_network import MLPClassifier,3
from sklearn.base import BaseEstimator as SKBaseEstimator,3
"from sklearn.naive_bayes import MultinomialNB, BernoulliNB",3
"from sklearn.linear_model import LogisticRegression   ",3
"from sklearn.metrics import average_precision_score, precision_recall_curve, \",3
"from sklearn import svm, neighbors",3
"from sklearn.utils.testing import assert_equal, assert_array_equal",3
from sklearn.utils import validation,3
"    from sklearn.metrics import roc_curve, auc",3
from sklearn import mixture as skmixture,3
from sklearn.feature_extraction.text import strip_accents_unicode,3
"    from sklearn.covariance import LedoitWolf, OAS, MCD",3
# from sklearn.cross_validation import train_test_split,3
"from sklearn.ensemble import AdaBoostClassifier",3
from sklearn.tree.tree import SPARSE_SPLITTERS,3
"        from sklearn.neighbors import KernelDensity",3
from sklearn.mixture import sample_gaussian,3
"#from sklearn.feature_selection import SelectKBest, chi2",3
"    >>> from sklearn.utils.multiclass import is_label_indicator_matrix",3
from sklearn.metrics.metrics import mean_squared_error,3
"from sklearn.datasets import make_blobs, load_iris, make_circles",3
"from sklearn.linear_model import LogisticRegression,  RandomizedLogisticRegression",3
"from sklearn.decomposition import PCA, IncrementalPCA",3
from sklearn import decomposition as sk_decomp,3
from sklearn import cluster as sk_cluster,3
"from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier",3
"from sklearn.ensemble import BaggingClassifier, RandomForestClassifier",3
"from sklearn.ensemble import RandomForestClassifier,AdaBoostClassifier",3
from sklearn.calibration import calibration_curve,3
"from sklearn.linear_model import PassiveAggressiveRegressor, RANSACRegressor",3
"from sklearn.datasets import load_iris, load_digits, load_diabetes, make_regression",3
"from sklearn.linear_model import PassiveAggressiveClassifier",3
# from sklearn.feature_extraction.text import TfidfTransformer,3
"    >>> from sklearn.pls import PLSCanonical, PLSRegression, CCA",3
from sklearn.utils.extmath import _deterministic_vector_sign_flip,3
"from sklearn.linear_model import LassoCV",3
"from sklearn.metrics import silhouette_score, silhouette_samples",3
"from sklearn.utils.testing import assert_raises, clean_warning_registry",3
from sklearn.cross_validation import permutation_test_score,3
"    from sklearn.metrics import pairwise_distances",3
"    >>> from sklearn.preprocessing import label_binarize",3
"from sklearn import datasets, neighbors",3
>>> from sklearn import datasets,3
>>> from sklearn.semi_supervised import LabelPropagation,3
"from sklearn.cluster.bicluster import SpectralCoclustering",3
"from sklearn.metrics import mean_absolute_error, mean_squared_error",3
from sklearn.svm.tests import test_svm,3
"        >>> from sklearn.manifold import LocallyLinearEmbedding",3
"from sklearn.base import BaseEstimator, RegressorMixin, clone",3
"        from sklearn import naive_bayes",3
from sklearn.utils import assert_all_finite,3
"from sklearn.neighbors import KNeighborsClassifier, KNeighborsRegressor",3
"from sklearn import svm, cross_validation, datasets",3
"    from sklearn.decomposition import KernelPCA",3
"    >>> from sklearn.linear_model import RandomizedLasso",3
"from sklearn import pipeline, cross_validation",3
"from sklearn.cluster import KMeans, DBSCAN",3
"		from sklearn.cluster import KMeans",3
"    from sklearn.base import RegressorMixin, ClassifierMixin",3
"from sklearn.naive_bayes import BernoulliNB, GaussianNB, MultinomialNB",3
from sklearn.tree import tree,3
from sklearn.decomposition.pca import _assess_dimension_,3
"from sklearn.cluster.hierarchical import (_hc_cut, _TREE_BUILDERS,",3
"from sklearn.cluster._hierarchical import average_merge, max_merge",3
from sklearn.utils.fast_dict import IntFloatDict,3
from sklearn_evaluation import plot,3
# from sklearn.svm import LinearSVC,3
from sklearn.linear_model import LogisticRegression as LogReg,3
from sklearn.utils.testing import if_not_mac_os,3
"from sklearn.metrics import confusion_matrix, f1_score, SCORERS",3
from sklearn.base import MetaEstimatorMixin,3
from sklearn.cluster.tests.common import generate_clustered_data,3
"from sklearn.metrics import precision_recall_curve, auc, classification_report, precision_recall_fscore_support",3
"from sklearn.datasets import (load_svmlight_file, load_svmlight_files,",3
"        from sklearn import metrics",3
"            from sklearn import __version__",3
"from sklearn.metrics.pairwise import PAIRED_DISTANCES, cosine_distances,\",3
"from sklearn.naive_bayes import (BernoulliNB,",3
from sklearn.cross_validation import _PartitionIterator,3
from sklearn.utils.metaestimators import if_delegate_has_method,3
"from sklearn.linear_model import LassoLarsCV, lars_path",3
# from sklearn.preprocessing import MultiLabelBinarizer,3
"from sklearn.base import BaseEstimator ",3
from sklearn.linear_model import OrthogonalMatchingPursuit as OMP,3
"from sklearn.utils.extmath import logsumexp, pinvh",3
"from sklearn.feature_selection import RFE, RFECV",3
"from sklearn import linear_model, svm, tree",3
"from sklearn.linear_model import Lasso ",3
#from sklearn.naive_bayes import MultinomialNB,3
# from sklearn.neighbors import NearestNeighbors,3
"    from sklearn.grid_search import RandomizedSearchCV",3
from sklearn.linear_model import LinearRegression  # Import the learning algorithm,3
>>> from sklearn.svm import LinearSVC,3
"	from sklearn import svm",3
"    from sklearn.naive_bayes import MultinomialNB",3
from sklearn.cluster.k_means_ import _init_centroids,3
from sklearn.tree.tree import DTYPE,3
# from sklearn.naive_bayes import GaussianNB,3
"from sklearn.naive_bayes import MultinomialNB, GaussianNB",3
from sklearn.metrics import adjusted_mutual_info_score,3
"from sklearn import manifold, decomposition",3
"    >>> from sklearn.hmm import GaussianHMM",3
"from sklearn.svm import OneClassSVM",3
"from sklearn.cross_validation import cross_val_predict, StratifiedKFold",3
"from sklearn.ensemble import AdaBoostRegressor, BaggingRegressor, RandomTreesEmbedding",3
>>> from sklearn.preprocessing import PolynomialFeatures,3
"from sklearn import datasets, svm, linear_model, base",3
from sklearn.gaussian_process import GaussianProcessRegressor,3
"        from sklearn.decomposition import PCA",3
"from sklearn.metrics import f1_score,precision_score,recall_score",3
#from sklearn.covariance import EmpiricalCovariance,3
from sklearn.decomposition import PCA as PCAr,3
"from sklearn.svm import SVR,LinearSVC",3
"	from sklearn.cross_validation import train_test_split",3
"from sklearn.cluster import KMeans, AffinityPropagation",3
"from sklearn.feature_selection import VarianceThreshold, SelectKBest, SelectPercentile, RFE, SelectFwe, f_classif",3
"from sklearn import cross_validation, preprocessing",3
from sklearn.metrics.base import UndefinedMetricWarning,3
from sklearn.neighbors import RadiusNeighborsRegressor,3
"  from sklearn.decomposition import PCA",3
"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier, VotingClassifier",3
from sklearn.linear_model import RandomizedLogisticRegression;,3
from sklearn import preprocessing  # noqa,3
from sklearn.metrics.scorer import accuracy_scorer,3
"    >>> from sklearn.metrics import explained_variance_score",3
from sklearn.ensemble import GradientBoostingClassifier as GradBoost,3
from sklearn.linear_model.passive_aggressive import PassiveAggressiveClassifier,3
"from sklearn.base import clone, ClassifierMixin",3
"from sklearn.datasets import load_digits, load_iris, load_diabetes",3
"		from sklearn import mixture",3
"from sklearn import decomposition, metrics, cross_validation",3
from sklearn import cross_validation;,3
"    from sklearn.cluster import Ward",3
from sklearn import linear_model as splm,3
"from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer, TfidfTransformer",3
"from sklearn.preprocessing import Normalizer, PolynomialFeatures",3
"from sklearn import cluster, datasets, preprocessing",3
"            from sklearn.manifold import MDS",3
from sklearn_model_eval.report import ReportGenerator,3
>>> from sklearn.ensemble import AdaBoostClassifier,3
from sklearn.naive_bayes import GaussianNB as NB,3
"from sklearn.linear_model import Perceptron, LogisticRegression",3
"from sklearn import cluster, decomposition",3
"        from sklearn.metrics import get_scorer",3
"from sklearn import decomposition, manifold",3
"      >>> from sklearn.metrics.cluster import homogeneity_score",3
"    from sklearn.metrics import f1_score, precision_score, recall_score",3
from sklearn.svm import SVC #access library that contains certain M.L. algo.,3
"      >>> from sklearn.metrics.cluster import adjusted_mutual_info_score",3
"    from sklearn.externals.joblib import cpu_count",3
"    >>> from sklearn.feature_selection import RFE",3
from sklearn_recommender.datasets import fetch_ml_10m,3
"from sklearn.cluster import SpectralClustering, KMeans",2
"	from sklearn.ensemble import AdaBoostClassifier",2
from sklearn.linear_model import SGDClassifier as SGD,2
from sklearn.cluster.hierarchical import _hc_cut,2
"    >>> from sklearn.neural_network import SAE",2
# from sklearn.cluster.k_means_ import _labels_inertia,2
"    from sklearn.metrics.pairwise import euclidean_distances as d",2
"from sklearn.linear_model import LinearRegression, Lasso, ElasticNet, Ridge",2
"from sklearn.linear_model import LassoCV, LinearRegression, RidgeCV",2
"	from sklearn.metrics import confusion_matrix",2
from sklearn.linear_model.ridge import _solve_cholesky_kernel,2
from sklearn import svm as sksvm,2
"		from sklearn.cross_validation import train_test_split",2
"        from sklearn.linear_model import Ridge",2
"from sklearn.preprocessing import MinMaxScaler, Binarizer",2
"from sklearn.metrics.pairwise import _VALID_METRICS, pairwise_distances",2
"from sklearn.preprocessing import LabelBinarizer, LabelEncoder",2
"    #from sklearn.preprocessing import MinMaxScaler",2
"from sklearn.cross_validation import cross_val_score ",2
# from sklearn.ensemble import GradientBoostingClassifier as GradBoost,2
"    from sklearn.linear_model import Perceptron",2
"from sklearn.ensemble import AdaBoostClassifier, GradientBoostingClassifier, RandomForestClassifier, ExtraTreesClassifier",2
"from sklearn.utils import check_array, extmath",2
from sklearn_pmml.convert.gbrt import *,2
"    #from sklearn.preprocessing import Imputer",2
"from sklearn import manifold, cluster",2
"from sklearn.linear_model import RidgeClassifier, LogisticRegression",2
"from sklearn.neighbors import KNeighborsClassifier as kNN",2
"from sklearn.svm import SVC, NuSVC, LinearSVC, SVR, NuSVR",2
"from sklearn.metrics import precision_score, recall_score, accuracy_score",2
"from sklearn import naive_bayes",2
"from sklearn.decomposition import NMF, TruncatedSVD",2
"        from sklearn import cluster",2
"from sklearn import ensemble, linear_model, preprocessing, svm",2
"from sklearn.metrics import make_scorer",2
from sklearn.tree.tree import DecisionTreeRegressor,2
#from sklearn.pipeline import Pipeline,2
"from sklearn.datasets.base import Bunch",2
from sklearn.cluster import KMeans as KM,2
"from sklearn.metrics import classification_report, f1_score, accuracy_score, precision_score, recall_score, precision_recall_fscore_support",2
from sklearn.svm.classes import SVC,2
"from sklearn.metrics import make_scorer, get_scorer, SCORERS",2
# from sklearn.linear_model.logistic import _intercept_dot,2
from sklearn_theano.feature_extraction.overfeat_class_labels import (,2
from sklearn.utils import check_consistent_length,2
"    from sklearn.svm import SVR ",2
from sklearn.datasets.twenty_newsgroups import download_20newsgroups,2
"#from sklearn.decomposition import RandomizedPCA",2
"from sklearn_pmml.convert import TransformationContext, Schema",2
"    from sklearn.preprocessing import binarize",2
"#from sklearn import pipeline, metrics, grid_search",2
"    from sklearn.datasets import load_boston",2
"from sklearn.utils.testing import (assert_in, assert_less, assert_greater,",2
"from sklearn.multiclass import OutputCodeClassifier,OneVsRestClassifier,OneVsOneClassifier",2
"from sklearn.decomposition import FastICA, PCA",2
"from sklearn.svm import SVR, NuSVR",2
"	from sklearn import datasets",2
from sklearn_theano.utils import check_tensor,2
"from sklearn.utils.testing import assert_equal, assert_array_almost_equal",2
from sklearn.linear_model.ridge import ridge_regression,2
"            from sklearn.manifold.spectral_embedding_ import _graph_is_connected",2
"from sklearn import svm, datasets, feature_selection, cross_validation",2
"from sklearn.decomposition.pca import PCA, RandomizedPCA",2
"from sklearn import metrics, linear_model, preprocessing",2
"    if '_random_forest' in operators_used: pipeline_text += 'from sklearn.ensemble import RandomForestClassifier\n'",2
"from sklearn.feature_selection import RFE,SelectKBest,SelectFwe",2
"    from sklearn.utils.estimator_checks import check_estimator",2
"    if '_svc' in operators_used or '_rfe' in operators_used: pipeline_text += 'from sklearn.svm import SVC\n'",2
"        from sklearn.multiclass import OneVsRestClassifier",2
#from sklearn.feature_extraction.text import TfidfTransformer,2
"from sklearn.utils.extmath import density",2
"        >>> from sklearn.lda import LDA",2
"    from sklearn.metrics import precision_recall_fscore_support",2
"from sklearn.svm import SVC, OneClassSVM",2
"  >>> from sklearn.linear_model import LogisticRegression",2
"    from sklearn.metrics import f1_score, accuracy_score",2
from sklearn import cross_validation #cross val,2
from sklearn.naive_bayes import BernoulliNB as BNB,2
from sklearn.utils.testing import meta_estimators,2
"from sklearn.datasets import (load_iris, load_boston, make_blobs,",2
# from sklearn.externals.joblib import Parallel,2
"    from sklearn.feature_extraction import DictVectorizer",2
"    from sklearn.cross_validation import KFold, LeaveOneOut    ",2
from sklearn.datasets.samples_generator import make_sparse_spd_matrix,2
"from sklearn.preprocessing import Imputer, StandardScaler, MinMaxScaler",2
"                    from sklearn.metrics import classification_report",2
"from sklearn.multiclass import OneVsRestClassifier, OneVsOneClassifier, OutputCodeClassifier",2
"from sklearn.linear_model import SGDRegressor",2
"#from sklearn.lda import LDA",2
"    from sklearn.feature_selection import VarianceThreshold",2
from sklearn.linear_model import LogisticRegression;,2
from sklearn import svm as SVM,2
# from sklearn.cluster import DBSCAN,2
"from sklearn.naive_bayes import (BaseDiscreteNB, BaseNB, BernoulliNB,",2
from sklearn.metrics.metrics import confusion_matrix,2
from sklearn_theano.datasets import fetch_asirra,2
"    from sklearn.linear_model import LogisticRegressionCV, LogisticRegression",2
"            from sklearn.decomposition import NMF",2
from sklearn_pmml.convert import TransformationContext,2
"from sklearn.metrics import confusion_matrix,accuracy_score",2
"from sklearn.cross_validation import StratifiedKFold, cross_val_score, KFold, ShuffleSplit",2
"#from sklearn.naive_bayes import GaussianNB",2
#from sklearn.naive_bayes import GaussianNB,2
"    if '_logistic_regression' in operators_used: pipeline_text += 'from sklearn.linear_model import LogisticRegression\n'",2
"    if '_polynomial_features' in operators_used: pipeline_text += 'from sklearn.preprocessing import PolynomialFeatures\n'",2
from sklearn.covariance import LedoitWolf as LW,2
"from sklearn.datasets import load_boston, load_diabetes",2
"from sklearn.neighbors import NearestCentroid",2
"from sklearn.metrics.metrics import mean_absolute_error, mean_squared_error",2
from sklearn.externals.joblib import dump,2
from sklearn.metrics.cluster import homogeneity_completeness_v_measure,2
"from sklearn.metrics import explained_variance_score, mean_absolute_error, mean_squared_error, r2_score",2
#from sklearn.preprocessing import OneHotEncoder,2
"from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer, TfidfTransformer",2
# from sklearn.preprocessing import StandardScaler,2
"from sklearn.utils import gen_batches, check_random_state",2
"from sklearn.manifold import LocallyLinearEmbedding, Isomap",2
# from sklearn.linear_model import LogisticRegression as LogReg,2
"from sklearn.linear_model import LinearRegression, LogisticRegression ",2
"    if '_robust_scaler' in operators_used: pipeline_text += 'from sklearn.preprocessing import RobustScaler\n'",2
"from sklearn.metrics.pairwise import euclidean_distances, manhattan_distances",2
#from sklearn.linear_model import LogisticRegression as LR,2
"                    from sklearn.ensemble import RandomForestClassifier",2
from sklearn.decomposition import PCA as pca,2
"    from sklearn.learning_curve import validation_curve",2
"    from sklearn.metrics import precision_recall_fscore_support, \",2
from sklearn.base import is_classifier,2
"        from sklearn.metrics.pairwise import pairwise_distances",2
"from sklearn.ensemble import AdaBoostClassifier, RandomForestClassifier, \",2
"        from sklearn.metrics.metrics import mean_absolute_error, mean_squared_error,r2_score",2
from sklearn.tree.tree import BaseDecisionTree,2
" from sklearn import linear_model",2
"from sklearn import svm,metrics",2
"        from sklearn.metrics.metrics import precision_score, recall_score, confusion_matrix, classification_report, accuracy_score, f1_score",2
"from sklearn.feature_extraction.text import CountVectorizer,TfidfTransformer",2
"    >>> from sklearn.cross_validation import PredefinedSplit",2
"    # from sklearn.multiclass import OneVsRestClassifier",2
"    # from sklearn.pipeline import Pipeline",2
"from sklearn.svm import SVR,SVC",2
from sklearn_tester import SklearnTester,2
"    if '_max_abs_scaler' in operators_used: pipeline_text += 'from sklearn.preprocessing import MaxAbsScaler\n'",2
"        '_select_fwe' in operators_used): pipeline_text += 'from sklearn.feature_selection import f_classif\n'",2
"from sklearn.feature_selection import RFE",2
"    # from sklearn.linear_model import LogisticRegression",2
from sklearn.linear_model     import LogisticRegression,2
from sklearn.random_projection import gaussian_random_matrix,2
"from sklearn_pmml import EstimatorConverter, TransformationContext, pmml",2
"from sklearn.neighbors import NearestNeighbors, DistanceMetric",2
"		from sklearn.ensemble import RandomForestClassifier",2
"from sklearn.base import BaseEstimator, ClassifierMixin",2
"from sklearn import  pipeline# ,metrics, grid_search",2
"    if '_select_kbest' in operators_used: pipeline_text += 'from sklearn.feature_selection import SelectKBest\n'",2
from sklearn.preprocessing.imputation import Imputer,2
"    from sklearn.manifold import SpectralEmbedding",2
from sklearn.preprocessing.data import MinMaxScaler,2
"from sklearn.feature_extraction.text import CountVectorizer, HashingVectorizer",2
"from sklearn.preprocessing import Imputer, MinMaxScaler, PolynomialFeatures",2
from sklearn.tree._tree import DTYPE,2
from sklearn.metrics.pairwise import PAIRWISE_DISTANCE_FUNCTIONS,2
from sklearn.svm import NuSVR,2
from sklearn.utils.validation import (,2
#from sklearn.decomposition import TruncatedSVD,2
# from sklearn.feature_extraction.text import CountVectorizer,2
from sklearn.manifold.locally_linear import barycenter_kneighbors_graph,2
"    # from sklearn.cross_validation import train_test_split",2
"from sklearn.utils.extmath import log_logistic, logistic_sigmoid",2
"    from sklearn.datasets import make_classification",2
"from sklearn import preprocessing, metrics",2
"        from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer",2
"    >>> from sklearn.cluster import KMeans, MiniBatchKMeans",2
"from sklearn import svm, linear_model, ensemble #, neural_network",2
"from sklearn.preprocessing import OneHotEncoder, scale",2
"    from sklearn.datasets import make_friedman1",2
"        from sklearn.metrics.pairwise import cosine_similarity",2
"from sklearn.decomposition import PCA,KernelPCA",2
"#from sklearn.multiclass import OneVsOneClassifier",2
"    from sklearn.mixture import _distribute_covar_matrix_to_match_covariance_type",2
from sklearn.externals import joblib    # to load data,2
from sklearn.externals.joblib import cpu_count,2
"from sklearn.metrics import precision_recall_fscore_support, roc_curve, auc",2
"from sklearn import ensemble, cross_validation",2
"from sklearn.metrics import mean_squared_error, log_loss",2
"from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score",2
"from sklearn.neighbors import KNeighborsClassifier  ",2
"    >>> from sklearn.neighbors import RadiusNeighborsClassifier",2
"        from sklearn.metrics import classification_report",2
from sklearn import neighbors #knn,2
"from sklearn.base import ClassifierMixin, RegressorMixin, BaseEstimator",2
"from sklearn import linear_model as lm ",2
#from sklearn.decomposition import FastICA,2
"    from sklearn.cluster import AffinityPropagation",2
"	from sklearn.datasets import  load_diabetes",2
"from sklearn.cross_validation import cross_val_score , KFold",2
from sklearn import __version__ as SCIKIT_VERSION,2
from sklearn.metrics.cluster import expected_mutual_information,2
"        from sklearn.metrics import silhouette_score",2
from sklearn.utils.class_weight import compute_sample_weight,2
"from sklearn import linear_model, externals",2
from sklearn import metrics as skm,2
"#from sklearn.svm import LinearSVC, SVC",2
"from sklearn.metrics import accuracy_score, roc_auc_score, log_loss",2
# from sklearn.externals.six.moves import cStringIO as StringIO,2
# from sklearn.utils.testing import if_not_mac_os,2
#from sklearn.ensemble import RandomForestClassifier as RF,2
# from sklearn.utils.testing import assert_true,2
"    from sklearn.cluster import KMeans       ",2
from sklearn.metrics.pairwise import paired_manhattan_distances,2
"    from sklearn.metrics import confusion_matrix",2
"from sklearn.metrics import precision_score,recall_score",2
"    from sklearn.linear_model import ElasticNet",2
from sklearn.externals.six.moves import StringIO,2
"from sklearn.metrics import accuracy_score, recall_score, f1_score",2
from sklearn.metrics.pairwise import kernel_metrics,2
"from sklearn.metrics.pairwise import rbf_kernel, linear_kernel, polynomial_kernel",2
"    from sklearn.preprocessing import RobustScaler",2
from sklearn.metrics.metrics import classification_report,2
"    from sklearn import feature_selection",2
"from sklearn.metrics import make_scorer, mean_squared_error",2
"	from sklearn.utils import shuffle",2
"# from sklearn.metrics import confusion_matrix",2
"    from sklearn.cluster import Ward       ",2
# from sklearn.utils.testing import SkipTest,2
"from sklearn.cluster import KMeans, MeanShift",2
"from sklearn.metrics import f1_score, precision_score",2
"from sklearn.linear_model import LinearRegression, LogisticRegression, Ridge",2
# from sklearn.linear_model import LinearRegression,2
"from sklearn.metrics.scorer import roc_auc_scorer, get_scorer",2
"from sklearn.metrics import recall_score, f1_score",2
"from sklearn.feature_selection import SelectKBest,f_regression",2
"    >>> from sklearn.neighbors.nearest_centroid import NearestCentroid",2
"    from sklearn.neighbors import kneighbors_graph",2
"from sklearn.decomposition import SparsePCA, PCA",2
"from sklearn.cross_validation import cross_val_score, LeaveOneLabelOut",2
from sklearn.cluster.spectral import discretize,2
"from sklearn.cluster import SpectralClustering, AffinityPropagation",2
"        from sklearn.decomposition import fastica",2
"from sklearn import cross_validation as skcv ",2
from sklearn.decomposition import PCA;,2
# from sklearn.naive_bayes import BernoulliNB,2
"from sklearn.preprocessing import LabelEncoder ",2
# from sklearn.utils.sparsefuncs_fast import assign_rows_csr,2
"from sklearn.utils.testing import assert_array_almost_equal, assert_raises",2
"from sklearn.feature_extraction.text import CountVectorizer,TfidfVectorizer, TfidfTransformer",2
# from sklearn import linear_model,2
# from sklearn.datasets import make_classification,2
"    from sklearn.neighbors.graph import radius_neighbors_graph",2
"    from sklearn.mixture import log_multivariate_normal_density",2
"        from sklearn.datasets import make_blobs",2
# from sklearn.externals.joblib import delayed,2
"from sklearn.metrics import classification_report, roc_curve, auc",2
"from sklearn.linear_model import LogisticRegression, RidgeClassifierCV",2
from sklearn.datasets.base import load_files,2
# from sklearn.utils import gen_batches,2
"from sklearn.utils.validation import check_X_y, check_is_fitted, check_array",2
"from sklearn import linear_model, datasets, metrics, cross_validation, preprocessing",2
"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, ExtraTreesClassifier, GradientBoostingClassifier",2
"from sklearn.metrics import confusion_matrix, classification_report, average_precision_score, accuracy_score, roc_auc_score, f1_score, recall_score",2
"from sklearn.ensemble import ExtraTreesRegressor, RandomForestRegressor",2
from sklearn.cluster import SpectralClustering as sk_spectralclust,2
"from sklearn.cross_decomposition import PLSRegression, PLSCanonical, CCA, PLSSVD",2
from sklearn.metrics.classification import accuracy_score,2
"from sklearn.decomposition import PCA, KernelPCA, SparsePCA",2
#from sklearn import neighbors,2
"    from sklearn import __version__ as sklearn_ver",2
"from sklearn.metrics.cluster import normalized_mutual_info_score, adjusted_mutual_info_score, adjusted_rand_score",2
"    from sklearn.linear_model import ARDRegression",2
"    from sklearn.linear_model import SGDRegressor",2
from sklearn.model_selection import train_test_split,2
"from sklearn.datasets import load_svmlight_file, dump_svmlight_file",2
"from sklearn.externals.joblib import hash, Memory",2
"from sklearn import grid_search",2
from sklearn.ensemble import RandomForestRegressor as randomforest,2
from sklearn.utils.fixes import frombuffer_empty,2
"from sklearn.datasets import load_boston, load_diabetes",2
# from sklearn.utils.testing import assert_raises_regexp,2
# from sklearn.cluster import MiniBatchKMeans,2
"    from sklearn.linear_model import LogisticRegression, LinearRegression",2
"from sklearn.preprocessing import Imputer, StandardScaler",2
"from sklearn import ensemble, feature_extraction, preprocessing",2
"from sklearn.svm import SVR, SVC, LinearSVC",2
from sklearn.metrics import mean_squared_error as accuracy,2
"    # from sklearn.preprocessing import StandardScaler",2
"    # from sklearn.metrics import accuracy_score",2
"from sklearn.linear_model.coordinate_descent import (Lasso, ElasticNet,",2
"from sklearn.ensemble import AdaBoostClassifier, GradientBoostingClassifier, AdaBoostRegressor, \",2
"from sklearn.ensemble import AdaBoostClassifier, GradientBoostingClassifier, RandomForestClassifier",2
"from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer, HashingVectorizer",2
"from sklearn.preprocessing import StandardScaler, PolynomialFeatures",2
"from sklearn.cluster import MiniBatchKMeans,  KMeans",2
"from sklearn import decomposition, feature_extraction",2
"from sklearn.metrics import zero_one_loss, mean_squared_error",2
"        from sklearn.pipeline import make_pipeline",2
"from sklearn.ensemble import RandomForestRegressor, BaggingRegressor, GradientBoostingRegressor, AdaBoostRegressor",2
from sklearn.linear_model import lasso_path,2
# from sklearn.utils.random import choice,2
"from sklearn.feature_selection import chi2",2
"from sklearn.cross_validation import train_test_split, StratifiedKFold, KFold",2
from sklearn.tree import DecisionTreeClassifier as CART,2
"from sklearn.linear_model import LogisticRegression, Ridge",2
from sklearn.metrics import mean_absolute_error as mae,2
from sklearn.ensemble.gradient_boosting import BinomialDeviance,2
from sklearn.ensemble.bagging import BaggingClassifier,2
"        from sklearn.feature_selection import SelectKBest",2
"from sklearn.cluster import DBSCAN, MiniBatchKMeans",2
"    #from sklearn.cross_validation import KFold",2
#from sklearn.ensemble import GradientBoostingClassifier,2
"    >>> from sklearn.grid_search import IterGrid",2
"    from sklearn.naive_bayes import GaussianNB ",2
"        from sklearn.model_selection import LeaveOneOut",2
"#from sklearn.linear_model import RandomizedLogisticRegression",2
from sklearn import feature_selection #feature selection,2
"from sklearn.ensemble import (RandomForestClassifier,",2
"from sklearn.covariance import (EmpiricalCovariance, ShrunkCovariance, OAS,",2
# from sklearn.datasets import fetch_mldata,2
"from sklearn.svm import SVC, LinearSVC, LinearSVR",2
"    #from sklearn.utils import shuffle",2
"    >>> from sklearn.datasets import load_breast_cancer",2
"    from sklearn.neighbors import BallTree",2
from sklearn.datasets import make_low_rank_matrix,2
"from sklearn.cluster import k_means, MiniBatchKMeans, KMeans",2
"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, AdaBoostClassifier, \",2
from sklearn_pmml.convert.model import *,2
"from sklearn.cross_validation import StratifiedShuffleSplit, KFold",2
"    from sklearn.manifold.spectral_embedding_ import spectral_embedding as se",2
# from sklearn import cross_validation,2
"from sklearn import ensemble, svm",2
"        from sklearn.metrics import log_loss",2
"	from sklearn.decomposition import PCA",2
"from sklearn.utils.graph import (graph_shortest_path,",2
"    from sklearn.decomposition import NMF,PCA",2
from sklearn.cluster import KMeans as sk_kmeans,2
"from sklearn import (metrics, cross_validation, linear_model, ensemble, tree, preprocessing, svm, neighbors, gaussian_process, naive_bayes, neural_network, pipeline, lda)",2
#    from sklearn.neighbors import kneighbors_graph,2
"from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer, TfidfVectorizer",2
from sklearn.externals.six import u,2
"        from sklearn.cross_validation import ShuffleSplit",2
"from sklearn.datasets import load_iris, load_digits, load_boston",2
"from sklearn.preprocessing import PolynomialFeatures, StandardScaler",2
"from sklearn.pipeline import Pipeline ",2
"from sklearn import neighbors, datasets, linear_model",2
"from sklearn.svm import SVC, LinearSVC, SVR",2
from sklearn.ensemble.forest import ExtraTreesClassifier,2
"    from sklearn.svm import SVR, SVC",2
"from sklearn.decomposition import RandomizedPCA, FastICA",2
"from sklearn import linear_model, gaussian_process",2
"from sklearn.ensemble import AdaBoostClassifier,RandomForestClassifier",2
"from sklearn.linear_model import LinearRegression, Ridge, Lasso",2
"from sklearn.feature_selection import SelectKBest, RFECV, RFE",2
"from sklearn import decomposition, pipeline, metrics, grid_search, cross_validation",2
#from sklearn.datasets import fetch_mldata,2
"    >>> from sklearn.preprocessing import StandardScaler",2
"    >>> from sklearn.manifold import TSNE",2
"from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer,TfidfVectorizer",2
"##from sklearn.decomposition import RandomizedPCA",2
from sklearn.utils import gen_batches,2
"from sklearn import cross_validation, metrics, ensemble",2
from sklearn.decomposition.truncated_svd import TruncatedSVD,2
from sklearn.externals import joblib as pickle,2
"    >>> from sklearn.svm.sparse import NuSVR",2
"from sklearn.utils import atleast2d_or_csr, check_random_state",2
from sklearn import cross_validation as CV,2
"from sklearn import cross_validation as cv",2
"        from sklearn.feature_selection import f_regression",2
"from sklearn.preprocessing import scale, StandardScaler",2
from sklearn.utils.extmath import _incremental_mean_and_var,2
"    from sklearn.cross_validation import KFold, cross_val_score",2
"	from sklearn.linear_model import Perceptron",2
"from sklearn import linear_model, svm, ensemble",2
"from sklearn.externals.joblib import dump",2
from sklearn.feature_extraction.text import CountVectorizer as CV,2
"    from sklearn.feature_extraction.image import extract_patches_2d",2
"from sklearn.linear_model import LogisticRegression, SGDClassifier, LinearRegression",2
from sklearn.metrics import classification_report as report,2
"from sklearn.metrics import r2_score, mean_squared_error",2
# from sklearn.cross_validation import StratifiedShuffleSplit,2
"        from sklearn.svm import base",2
"    from sklearn.metrics import mean_absolute_error",2
"from sklearn.metrics import classification_report, roc_curve, auc, precision_recall_curve",2
from sklearn.linear_model import Lars,2
from sklearn.base import _pprint,2
from sklearn.ensemble import RandomForestClassifier as skRF,2
"        from sklearn.tree import DecisionTreeRegressor",2
"from sklearn import linear_model, decomposition",2
from sklearn.manifold import locally_linear_embedding,2
"from sklearn.cross_validation import train_test_split, ShuffleSplit",2
from sklearn.utils import shuffle as skshuffle,2
from sklearn_decoder import ImgRecognizer,2
"    if '_min_max_scaler' in operators_used: pipeline_text += 'from sklearn.preprocessing import MinMaxScaler\n'",2
"from sklearn.utils.testing import assert_almost_equal, assert_array_equal",2
"from sklearn import cross_validation, ensemble, metrics",2
"        from sklearn.semi_supervised import LabelSpreading",2
"from sklearn.cross_validation import StratifiedKFold, LeaveOneOut",2
"                    from sklearn.grid_search import GridSearchCV",2
"from sklearn.utils.extmath import (safe_sparse_dot, logsumexp, squared_norm)",2
"from sklearn.linear_model import SGDRegressor, ElasticNet",2
from sklearn.ensemble import \,2
"from sklearn.naive_bayes import GaussianNB, MultinomialNB, BernoulliNB",2
"#     from sklearn import ensemble, feature_selection, linear_model, naive_bayes, neighbors, svm, tree",2
"#from sklearn.cluster import MeanShift, estimate_bandwidth",2
# from sklearn import mixture,2
# # from sklearn import metrics,2
from sklearn.cluster import dbscan as dbscan,2
"from sklearn.metrics import accuracy_score, precision_score, recall_score, \",2
"from sklearn.preprocessing import MaxAbsScaler",2
from sklearn_theano.feature_extraction import GoogLeNetClassifier,2
"        from sklearn import linear_model",2
"from sklearn.svm import LinearSVC, SVC, LinearSVR, SVR",2
from sklearn.externals.joblib import dump as jl_dump,2
"    from sklearn.learning_curve import learning_curve",2
"from sklearn.metrics import (accuracy_score, confusion_matrix,",2
"from sklearn.metrics.metrics import accuracy_score, roc_auc_score",2
# from sklearn.utils.fixes import astype,2
"from sklearn import datasets, cross_validation, preprocessing",2
"from sklearn import ensemble, linear_model, preprocessing",2
from sklearn.utils.bench import total_seconds,2
from sklearn.datasets import get_data_home,2
"from sklearn.cluster import WardAgglomeration, AffinityPropagation, \",2
"  from sklearn import cluster",2
# from sklearn.linear_model import Lasso,2
from sklearn.feature_extraction.dict_vectorizer import DictVectorizer,2
"from sklearn.linear_model import ElasticNetCV, ElasticNet",2
# from sklearn.utils.sparsefuncs import mean_variance_axis,2
from sklearn.base import BaseEstimator as SklearnBaseEstimator,2
"from sklearn.preprocessing import MinMaxScaler ",2
from sklearn.datasets import load_mlcomp,2
# from sklearn import datasets,2
from sklearn.metrics.cluster import homogeneity_score,2
"            from sklearn.ensemble import GradientBoostingClassifier",2
from sklearn.metrics.pairwise import paired_euclidean_distances,2
"from sklearn.metrics import mean_squared_error, accuracy_score",2
"from sklearn_pmml.convert.utils import pmml_row, assert_equal",2
"from sklearn import cluster, datasets, metrics",2
"    from sklearn.pls import PLSRegression as pls",2
# from sklearn.utils.testing import assert_raise_message,2
"from sklearn.ensemble.forest import RandomForestClassifier, ExtraTreesClassifier",2
"        from sklearn.datasets.samples_generator import make_blobs",2
"from sklearn.feature_extraction.text import TfidfTransformer, CountVectorizer, HashingVectorizer",2
"from sklearn.decomposition import FastICA, fastica, PCA",2
"from sklearn.pipeline import FeatureUnion, Pipeline, _name_estimators",2
from sklearn.metrics.pairwise import pairwise_kernels as kernel,2
"from sklearn.metrics import mean_absolute_error, mean_squared_error, make_scorer",2
"            from sklearn.utils.extmath import fast_svd",2
"    from sklearn.decomposition import RandomizedPCA",2
"from sklearn.utils.testing import (assert_array_equal, assert_equal,",2
"# from sklearn.cross_validation import KFold, StratifiedKFold",2
from sklearn.ensemble import BaggingClassifier as BG,2
"from sklearn import linear_model, manifold, decomposition, datasets",2
"from sklearn import datasets, metrics, preprocessing",2
"        # from sklearn.metrics import confusion_matrix",2
"        from sklearn.ensemble import ExtraTreesRegressor",2
"from sklearn.cluster import AffinityPropagation, DBSCAN",2
"        from sklearn.utils.validation import NotFittedError",2
from sklearn.ensemble import RandomForestClassifier ; #base lib,2
from sklearn.ensemble import BaggingClassifier as BC,2
"	from sklearn.externals import joblib",2
from sklearn import isotonic,2
"from sklearn.base import clone, ClassifierMixin, RegressorMixin, \",2
"from sklearn.decomposition import NMF",2
"from sklearn.pipeline import FeatureUnion, Pipeline",2
"from sklearn.preprocessing import MaxAbsScaler, MinMaxScaler, StandardScaler, RobustScaler",2
"from sklearn.kernel_approximation import (AdditiveChi2Sampler, Nystroem,",2
"from sklearn.preprocessing import LabelBinarizer, LabelEncoder, Binarizer, \",2
"from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer",2
"from sklearn.datasets import dump_svmlight_file",2
"	from sklearn.naive_bayes import GaussianNB",2
from sklearn.metrics.cluster import contingency_matrix,2
"from sklearn.utils import as_float_array, check_array, check_symmetric",2
"from sklearn_pmml.convert.features import Feature, CategoricalFeature, NumericFeature",2
"from sklearn.linear_model import SGDClassifier ",2
"        from sklearn.datasets import dump_svmlight_file",2
"from sklearn.cluster.bicluster import SpectralBiclustering, SpectralCoclustering",2
"from sklearn.metrics import mean_absolute_error,mean_squared_error,median_absolute_error",2
from sklearn.utils.fixes import sp_version,2
from sklearn.ensemble import RandomForestRegressor as RFR,2
"from sklearn.utils.validation import check_arrays, column_or_1d",2
from sklearn.ensemble import RandomForestClassifier;,2
#from sklearn.manifold import TSNE,2
"    #from sklearn.decomposition import PCA",2
"from sklearn.decomposition import SparsePCA",2
"    from sklearn.cross_validation import train_test_split",2
"            from sklearn.svm import SVR",2
"        from sklearn.linear_model.sparse import LogisticRegression",2
"from sklearn.metrics import mean_squared_error, mean_absolute_error, median_absolute_error",2
from sklearn.metrics import cohen_kappa_score,2
from sklearn.externals.joblib import load as jl_load,2
#     from sklearn.feature_extraction.text import TfidfTransformer,2
"from sklearn.cluster import AffinityPropagation, DBSCAN, KMeans, Ward",2
from sklearn.cross_validation import (,2
"    if '_decision_tree' in operators_used: pipeline_text += 'from sklearn.tree import DecisionTreeClassifier\n'",2
#from sklearn.datasets.samples_generator import make_blobs,2
"            from sklearn.qda import QDA",2
from sklearn.feature_extraction import DictVectorizer;,2
from sklearn_pmml.convert.random_forest import RandomForestClassifierConverter,2
"from sklearn.cross_validation import cross_val_score, cross_val_predict, train_test_split",2
"        from sklearn.random_projection import SparseRandomProjection",2
"from sklearn.grid_search import RandomizedSearchCV, GridSearchCV",2
"    from sklearn import pipeline, datasets",2
"from sklearn.utils.testing import assert_warns_message, assert_raise_message",2
"#from sklearn import datasets, linear_model",2
"from sklearn.cross_validation import KFold, ShuffleSplit, LeaveOneOut",2
"from sklearn.cross_validation import FitFailedWarning, KFold",2
"        from sklearn.base import clone",2
"from sklearn.tree import export_graphviz",2
"from sklearn.metrics import confusion_matrix,classification_report",2
"from sklearn.covariance import empirical_covariance, EmpiricalCovariance, \",2
"    from sklearn.feature_selection import f_regression",2
from sklearn.decomposition.fastica_ import _gs_decorrelation,2
"from sklearn import preprocessing, cross_validation",2
"from sklearn.utils.validation import check_array, check_consistent_length",2
"    from sklearn import linear_model, cross_validation",2
"from sklearn.tree import DecisionTreeRegressor ",2
"	# 	from sklearn.datasets import load_iris",2
"	from sklearn import cluster, datasets",2
"    from sklearn.feature_selection import f_regression",2
"from sklearn.feature_extraction.text import TfidfTransformer, CountVectorizer, TfidfVectorizer",2
"                from sklearn.svm import SVC",2
"                    from sklearn import neighbors",2
from sklearn.linear_model import LinearRegression as LReg,2
"from sklearn.naive_bayes import MultinomialNB, BernoulliNB, GaussianNB",2
# from sklearn.utils.validation import check_is_fitted,2
# from sklearn.metrics.pairwise import euclidean_distances,2
"from sklearn.preprocessing import normalize, StandardScaler",2
"    if '_pca' in operators_used: pipeline_text += 'from sklearn.decomposition import RandomizedPCA\n'",2
"    from sklearn.decomposition import PCA, KernelPCA",2
"from sklearn.covariance import GraphLassoCV, graph_lasso",2
"from sklearn.metrics.pairwise import pairwise_distances, rbf_kernel",2
"            from sklearn.feature_extraction.text import TfidfVectorizer",2
"  from sklearn.base import BaseEstimator, ClassifierMixin, RegressorMixin",2
"from sklearn.pls import _PLS, PLSCanonical, PLSRegression, CCA, PLSSVD",2
"from sklearn.metrics import roc_curve, auc, log_loss, precision_recall_curve",2
"        from sklearn import gaussian_process",2
"    from sklearn.externals.joblib import hash, Memory",2
"# from sklearn.utils.extmath import row_norms, squared_norm",2
# from sklearn.ensemble import RandomForestRegressor,2
# from sklearn.neighbors import KNeighborsClassifier,2
"    if '_select_fwe' in operators_used: pipeline_text += 'from sklearn.feature_selection import SelectFwe\n'",2
"    if '_select_percentile' in operators_used: pipeline_text += 'from sklearn.feature_selection import SelectPercentile\n'",2
"    >>> from sklearn.base import BaseEstimator",2
"	from sklearn.grid_search import GridSearchCV",2
"from sklearn.utils.testing import ignore_warnings, assert_warns_message",2
from sklearn.metrics.pairwise import PAIRED_DISTANCES,2
#from sklearn.metrics import accuracy_score as accuracy,2
"        >>> from sklearn.feature_selection import SelectKBest",2
"    from sklearn import metrics",2
#    from sklearn import cross_validation,2
"from sklearn.metrics import accuracy_score,classification_report",2
"    from sklearn.pls import PLSRegression",2
"	from sklearn import preprocessing, ensemble",2
# from sklearn import manifold,2
"from sklearn.covariance import EllipticEnvelope, EllipticEnvelop",2
"        from sklearn.utils.extmath import randomized_svd",2
"            from sklearn.svm import SVC, NuSVC",2
"from sklearn.cluster import KMeans,DBSCAN",2
"from sklearn.cross_validation import KFold, PredefinedSplit",2
from sklearn.feature_extraction.image import (,2
"    if '_variance_threshold' in operators_used: pipeline_text += 'from sklearn.feature_selection import VarianceThreshold\n'",2
from sklearn.manifold.locally_linear import (,2
"    if '_rfe' in operators_used: pipeline_text += 'from sklearn.feature_selection import RFE\n'",2
"    if '_standard_scaler' in operators_used: pipeline_text += 'from sklearn.preprocessing import StandardScaler\n'",2
"from sklearn.preprocessing import PolynomialFeatures, Binarizer",2
"    if '_knnc' in operators_used: pipeline_text += 'from sklearn.neighbors import KNeighborsClassifier\n'",2
"from sklearn import cross_validation, datasets, linear_model",2
# from sklearn.externals import joblib,2
from sklearn.linear_model import LinearRegression as LR,2
"from sklearn import pipeline, grid_search",2
#from sklearn.cross_validation import cross_val_score,2
"from sklearn.metrics import accuracy_score, f1_score, hamming_loss, \",2
from sklearn.hmm import GMMHMM,2
from sklearn.utils.testing import assert_raises_regex,2
"from sklearn.utils import gen_even_slices, shuffle",2
from sklearn.linear_model import LinearRegression as mlr,2
"    from sklearn.metrics import accuracy_score, mean_squared_error",2
"		from sklearn import decomposition",2
"from sklearn.naive_bayes import MultinomialNB, GaussianNB, BernoulliNB",2
"from sklearn import ensemble, tree",2
# from sklearn.cluster.k_means_ import _mini_batch_step,2
"from sklearn.manifold import Isomap, LocallyLinearEmbedding",2
"from sklearn.ensemble import GradientBoostingRegressor, RandomForestRegressor, ExtraTreesRegressor",2
"    from sklearn.preprocessing import normalize",2
"from sklearn.grid_search import GridSearchCV, RandomizedSearchCV, ParameterSampler, ParameterGrid",2
from sklearn_pmml.convert import *,2
from sklearn.linear_model.ridge import _solve_cholesky,2
"    from sklearn.mixture import sample_gaussian",2
"from sklearn.base import BaseEstimator, RegressorMixin, TransformerMixin",2
"	>>> from sklearn.datasets import load_boston",2
"            from sklearn.linear_model import Lasso",2
from sklearn_evaluation.Logger import Logger,2
"            from sklearn.ensemble import AdaBoostClassifier",2
"from sklearn.base import TransformerMixin, BaseEstimator",2
"	from sklearn.preprocessing import StandardScaler",2
"    from sklearn.metrics import accuracy_score",2
from sklearn.metrics.cluster import completeness_score,2
"from sklearn.linear_model import RidgeClassifier",2
# from sklearn.linear_model import LogisticRegression,2
"    # from sklearn.svm import SVC",2
"    from sklearn.svm.base import _get_class_weight",2
"    from sklearn.metrics import f1_score as sklearn_f1_score",2
"from sklearn.naive_bayes import MultinomialNB,GaussianNB",2
from sklearn_theano.feature_extraction import OverfeatClassifier,2
"from sklearn.externals.joblib import Parallel, delayed, Memory, dump",2
"from sklearn.cluster.bicluster import SpectralCoclustering, SpectralBiclustering",2
"                from sklearn.metrics import classification_report",2
"            # from sklearn.neighbors.kde import KernelDensity",2
"    from sklearn.metrics import precision_recall_curve",2
"from sklearn.linear_model.base import center_data, sparse_center_data",2
"from sklearn.utils import check_random_state, check_array, check_X_y",2
"from sklearn.cross_validation import ShuffleSplit, KFold",2
"    if '_binarizer' in operators_used: pipeline_text += 'from sklearn.preprocessing import Binarizer\n'",2
"from sklearn import ensemble   ",2
"	from sklearn.cross_validation import StratifiedKFold",2
"from sklearn import (manifold, datasets, decomposition, ensemble, lda, random_projection)",2
"from sklearn import (cross_validation, svm,",2
"from sklearn.base import BaseEstimator, TransformerMixin",2
"        from sklearn import mixture",2
"    from sklearn.neural_network import MLPClassifier",2
"from sklearn.neighbors import kneighbors_graph",2
"            from sklearn.naive_bayes import GaussianNB",2
"    from sklearn.neighbors.nearest_centroid import NearestCentroid",2
from sklearn.svm.libsvm import decision_function,2
"from sklearn.cross_validation import StratifiedShuffleSplit, StratifiedKFold",2
"from sklearn.neighbors.base import NeighborsBase, RadiusNeighborsMixin, \",2
"        from sklearn.metrics import make_scorer",2
"from sklearn.grid_search import RandomizedSearchCV",2
"from sklearn.pipeline import Pipeline, FeatureUnion, make_pipeline, make_union",2
"from sklearn.feature_extraction import (FeatureHasher,",2
from sklearn.datasets import make_friedman2,2
from sklearn.gaussian_process import correlation_models as correlation,2
from sklearn.svm.sparse import SVR,2
"from sklearn.neighbors import KernelDensity",2
from sklearn.feature_extraction import _hashing,2
from sklearn.ensemble import RandomForestClassifier as randomforest,2
"from sklearn.metrics import auc, roc_curve, matthews_corrcoef",2
# from sklearn.svm import SVR,2
from sklearn.utils.graph import connected_components,2
from sklearn.utils import DataDimensionalityWarning,2
from sklearn.cluster.k_means_ import _mini_batch_step,2
"from sklearn.preprocessing import binarize, normalize, scale",2
from sklearn.grid_search  import GridSearchCV,2
"from sklearn.cross_validation import StratifiedShuffleSplit, ShuffleSplit",2
"from sklearn.metrics import accuracy_score, precision_score",2
"from sklearn_pmml.convert.features import Feature, NumericFeature, CategoricalFeature, RealNumericFeature",2
"from sklearn.metrics import roc_auc_score, f1_score, precision_recall_curve",2
"from sklearn.preprocessing import LabelEncoder, scale, MinMaxScaler",2
"from sklearn.datasets.samples_generator import make_blobs",2
from sklearn.externals.joblib import load,2
"from sklearn_pmml.convert.utils import estimator_to_converter, find_converter",2
"                from sklearn.linear_model import LinearRegression",2
"from sklearn import svm, metrics, cross_validation",2
"    from sklearn.linear_model import Lasso, Ridge, ElasticNet, LinearRegression, LassoLars, BayesianRidge, ElasticNetCV, SGDRegressor",2
"	from sklearn import svm as SVM",2
"from sklearn.linear_model import LassoLarsCV, LogisticRegression",2
from sklearn.metrics import SCORERS,2
"from sklearn.metrics import hamming_loss, accuracy_score",2
"from sklearn.utils.testing import assert_raise_message, assert_equal",2
from sklearn.utils.mocking import CheckingClassifier,2
"from sklearn.preprocessing import OneHotEncoder, Imputer, StandardScaler",2
"from sklearn.metrics import precision_score, recall_score, confusion_matrix",2
"from sklearn.preprocessing import LabelBinarizer,label_binarize",2
# from sklearn.utils.testing import assert_array_almost_equal,2
"from sklearn.metrics import make_scorer, log_loss",2
from sklearn.neighbors import NeighborsClassifier,2
"from sklearn.datasets import load_iris, make_classification",2
"		from sklearn.metrics import confusion_matrix, classification_report",2
from sklearn.utils import compute_class_weight,2
# from sklearn.metrics import roc_curve,2
"from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier, GradientBoostingClassifier, AdaBoostClassifier",2
"from sklearn.linear_model import SGDRegressor, SGDClassifier",2
"from sklearn import base, cross_validation, metrics",2
from sklearn.datasets import make_sparse_spd_matrix,2
"    from sklearn.utils.extmath import pinvh",2
#from sklearn.cross_validation import KFold,2
"                    from sklearn.cross_validation import StratifiedKFold",2
"from sklearn.decomposition import PCA, RandomizedPCA, TruncatedSVD",2
"from sklearn.decomposition import TruncatedSVD, PCA",2
from sklearn.metrics.cluster import adjusted_mutual_info_score,2
from sklearn.externals.six import b,2
"from sklearn.metrics import f1_score, make_scorer",2
"from sklearn import cross_validation, metrics, datasets",2
"  from sklearn import preprocessing",2
"from sklearn import cross_validation, ensemble, linear_model",2
"    from sklearn.decomposition import PCA    ",2
"    from sklearn import cross_validation ",2
"from sklearn.metrics import confusion_matrix, accuracy_score, recall_score",2
"                from sklearn.metrics import roc_auc_score",2
from sklearn.neural_network import MLPRegressor,2
"        from sklearn.exceptions import NotFittedError",2
"from sklearn.metrics.pairwise import polynomial_kernel, rbf_kernel",2
# # from sklearn import datasets,2
from sklearn.ensemble import IsolationForest,2
"        from sklearn.pipeline import Pipeline",2
from sklearn.grid_search import RandomizedSearchCV as RS,2
"    from sklearn.metrics import average_precision_score",2
"    from sklearn import preprocessing ; ",2
"from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score",2
# from sklearn.utils import as_float_array,2
from sklearn.linear_model import orthogonal_mp,2
from sklearn.metrics import median_absolute_error,2
"    from sklearn.datasets import make_circles",2
from sklearn.linear_model.coordinate_descent import _alpha_grid,2
from sklearn.feature_selection.univariate_selection import _clean_nans,2
from sklearn.cluster import spectral_clustering as spectral,2
from sklearn.metrics import brier_score_loss #Compute the Brier score.,2
"    #          from sklearn.cluster import KMeans",2
from sklearn import externals,2
"from sklearn.ensemble import GradientBoostingRegressor, ExtraTreesRegressor",2
"from sklearn.metrics import zero_one_score, adjusted_rand_score",2
"  from sklearn.cluster import MiniBatchKMeans,  KMeans",2
"from sklearn.ensemble import GradientBoostingClassifier, AdaBoostClassifier",2
"from sklearn.linear_model import ElasticNet, Lasso, Ridge",2
"    >>> from sklearn.decomposition import FastICA",2
"from sklearn.decomposition import LatentDirichletAllocation",2
# from sklearn.preprocessing import balance_weights,2
"            from sklearn.decomposition import KernelPCA",2
"	from sklearn import metrics",2
"from sklearn import neighbors, manifold",2
# from sklearn.utils import check_random_state,2
"from sklearn.linear_model import BayesianRidge, LinearRegression",2
"from sklearn.cross_validation import KFold, LeaveOneOut, ShuffleSplit",2
"        from sklearn.svm import SVR",2
"    #from sklearn.cluster import KMeans",2
"from sklearn.base import  BaseEstimator, TransformerMixin",2
"            from sklearn.utils.extmath import randomized_svd as fast_svd",2
from sklearn.isotonic import IsotonicRegression as IR,2
"    from sklearn.cluster import k_means",2
from sklearn.decomposition import dict_learning_online,2
"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, RandomForestRegressor",2
"from sklearn import svm, grid_search, datasets",2
"from sklearn.cross_validation import StratifiedKFold, permutation_test_score",2
from sklearn.utils.mocking import MockDataFrame,2
"from sklearn.linear_model import Lasso, LassoLars",2
from sklearn.preprocessing._weights import balance_weights,2
"from sklearn.cross_validation import KFold, LeaveOneOut, ShuffleSplit",2
from sklearn.mixture import DPGMM,2
"from sklearn.utils import (array2d, as_float_array, atleast2d_or_csr,",2
"from sklearn.decomposition import PCA as sklearnPCA ,KernelPCA,FactorAnalysis,IncrementalPCA,FastICA",2
from sklearn.datasets import make_friedman3,2
# from sklearn.naive_bayes import MultinomialNB,2
"from sklearn.tree import DecisionTreeRegressor,ExtraTreeRegressor",2
from sklearn.ensemble.forest import BaseForest,2
from sklearn.tree import \,2
from sklearn.ensemble import GradientBoostingRegressor as GBR,2
"		from sklearn.preprocessing import LabelBinarizer",2
"from sklearn.manifold import Isomap",2
# from sklearn.utils.extmath import row_norms,2
"from sklearn.tree._tree import Tree, TREE_LEAF",2
"			from sklearn.externals import joblib",2
"from sklearn import tree, ensemble #decision tree & random forest",2
"#from sklearn import neighbors",2
#from sklearn.preprocessing import LabelBinarizer,2
"from sklearn.utils import check_consistent_length, check_array",2
"            from sklearn import neighbors",2
"    from sklearn.feature_selection import chi2",2
"	from sklearn.linear_model import LogisticRegression",2
# from sklearn.cross_validation import cross_val_score,2
"from sklearn import tree,ensemble",2
from sklearn import preprocessing as preproc,2
"from sklearn.datasets import load_boston, load_iris",2
"      >>> from sklearn.neighbors import LSHForest",2
"# from sklearn import cluster, decomposition, ensemble, neighbors, neural_network, qda",2
"    >>> from sklearn.svm.sparse import SVR",2
#         from sklearn.gaussian_process.gaussian_process import GaussianProcess,2
"from sklearn.cross_validation import KFold, LeaveOneLabelOut, StratifiedKFold",2
"from sklearn.metrics import get_scorer, zero_one_loss",2
from sklearn import feature_selection as fs,2
"    from sklearn import ensemble",2
from sklearn_pmml.convert.gbrt import GradientBoostingConverter,2
"from sklearn.linear_model import RidgeCV, Ridge",2
#from sklearn.metrics.pairwise import pairwise_distances,2
"    >>> from sklearn.decomposition import ProjectedGradientNMF",2
"from sklearn.multiclass import OneVsOneClassifier, OneVsRestClassifier,\",2
"from sklearn.datasets import make_classification, dump_svmlight_file",2
"from sklearn.cross_validation import ShuffleSplit  ",2
from sklearn.utils.estimator_checks import NotAnArray,2
from sklearn.preprocessing import RobustScaler,2
"	from sklearn.tree import DecisionTreeClassifier",2
from sklearn.pipeline import FeatureUnion as FeatureUnion_,2
"from sklearn.utils import safe_sqr, check_array",2
from sklearn.random_projection import GaussianRandomProjection,2
"from sklearn.metrics import precision_recall_curve, auc, roc_auc_score",2
"        from sklearn.cross_validation import ShuffleSplit, cross_val_score",2
from sklearn.linear_model import Perceptron as skPerceptron,2
"                                i.e. from sklearn.linear_model import LinearRegression, LogisticRegression",2
"from sklearn import tree, linear_model, neighbors",2
"from sklearn.metrics import roc_curve, roc_auc_score, precision_recall_curve",2
from sklearn.decomposition import MiniBatchSparsePCA,2
"            from sklearn import svm",2
"from sklearn import svm,linear_model",2
"from sklearn.ensemble import AdaBoostClassifier, AdaBoostRegressor",2
"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, BaggingClassifier",2
"	>>> from sklearn.ensemble import RandomForestClassifier",2
"from sklearn.linear_model import LogisticRegression, PassiveAggressiveClassifier",2
"from sklearn.cross_validation import train_test_split,cross_val_score",2
from sklearn.ensemble.weight_boosting import ClassifierMixin,2
from sklearn.preprocessing import LabelEncoder as LE,2
"from sklearn.feature_selection import SelectKBest",2
# from sklearn.ensemble import BaggingClassifier,2
from sklearn.svm import LinearSVC as LSVC,2
"from sklearn.ensemble import AdaBoostClassifier, GradientBoostingRegressor",2
from sklearn.ensemble         import RandomForestRegressor,2
"from sklearn.linear_model.coordinate_descent import Lasso, ElasticNet, \",2
from sklearn_evaluation.metrics import precision_at,2
from sklearn_pmml.convert.utils import *,2
from sklearn import utils as skutils,2
"from sklearn.metrics import precision_recall_curve, auc, roc_curve",2
from sklearn import __version__ as sklearn_ver,2
from sklearn.manifold.t_sne import _joint_probabilities,2
from sklearn.decomposition import RandomizedPCA as PCA,2
"from sklearn.cluster import AgglomerativeClustering, KMeans",2
from sklearn.preprocessing import StandardScaler # to normalize,2
"from sklearn_pmml.convert.test.jpmml_test import JPMMLClassificationTest, JPMMLTest, TARGET_NAME",2
"            from sklearn.ensemble import RandomForestRegressor",2
"	from sklearn.neighbors import NearestCentroid",2
"    from sklearn.tree._tree import _realloc_test",2
"		from sklearn.utils import check_random_state",2
"from sklearn.linear_model import Ridge",2
"from sklearn.feature_extraction.text import CountVectorizer,TfidfVectorizer",2
"from sklearn.feature_selection import RFE, RFECV, SelectKBest",2
from sklearn.ensemble import (,2
"from sklearn.feature_selection import VarianceThreshold, SelectKBest",2
"    from sklearn.linear_model import LogisticRegression",2
from sklearn_pmml.convert.tree import *,2
"from sklearn.decomposition import PCA, KernelPCA, FastICA",2
from sklearn.linear_model import OrthogonalMatchingPursuitCV,2
"from sklearn.metrics import roc_curve,auc",2
"        from sklearn.tree import DecisionTreeRegressor as DecisionTreeRegressorSklearn",2
"    >>> from sklearn.svm.sparse import SVC",2
# from sklearn.decomposition import FastICA,2
"    >>> from sklearn.cross_validation import StratifiedKFold",2
"    from sklearn import grid_search",2
"            from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier",2
"    from sklearn.metrics import matthews_corrcoef",2
"from sklearn.linear_model import LogisticRegression, RandomizedLogisticRegression",2
from sklearn.covariance import LedoitWolf,2
# from sklearn.metrics import accuracy_score,2
"from sklearn.linear_model import MultiTaskLasso, Lasso",2
"from sklearn.metrics import r2_score",2
"from sklearn.cross_validation import cross_val_score,cross_val_predict",2
from sklearn.metrics.pairwise import check_paired_arrays,2
from sklearn.feature_extraction.hashing import FeatureHasher,2
"from sklearn.base import BaseEstimator, TransformerMixin, RegressorMixin",2
from sklearn.cluster import KMeans as km,2
from sklearn.metrics.pairwise import _parallel_pairwise,2
"    >>> from sklearn.svm.sparse import NuSVC",2
from sklearn.linear_model import logistic,2
"from sklearn.metrics.scorer import (check_scoring, _PredictScorer,",2
#   from sklearn.svm import SVR,2
"        >>> from sklearn.datasets import load_iris",2
"from sklearn.metrics import confusion_matrix,classification_report;",2
"from sklearn.metrics import accuracy_score,confusion_matrix",2
"from sklearn import metrics, cross_validation, linear_model, ensemble",2
"	>>> from sklearn.datasets import load_iris",2
"from sklearn.decomposition import FastICA,PCA",2
from sklearn.metrics.cluster import mutual_info_score,2
"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, ExtraTreesClassifier ",2
>>> from sklearn.ensemble import RandomForestClassifier,2
# from sklearn.utils.testing import assert_warns,2
"	from sklearn.cluster import KMeans",2
"	from sklearn import ensemble as f16",2
# from sklearn.utils import check_array,2
# from sklearn.utils.testing import assert_less,2
"                >>> from sklearn import test",2
"from sklearn import preprocessing, cross_validation, svm",2
"    #from sklearn.naive_bayes import MultinomialNB",2
"from sklearn.metrics import euclidean_distances",2
"        from sklearn.linear_model import Lasso",2
from sklearn.feature_extraction import text as sktext,2
"from sklearn import cluster, preprocessing",2
"from sklearn.linear_model import ElasticNetCV, LassoCV, RidgeCV",2
"		from sklearn import ensemble as f16",2
"    from sklearn import __version__ as sklearnVersion",2
from sklearn.grid_search import GridSearchCV as _GridSearchCV,2
"from sklearn.utils.testing import assert_array_equal, assert_equal",2
"from sklearn.metrics import roc_curve, average_precision_score, auc",2
"from sklearn.pipeline import make_pipeline, Pipeline",2
"        >>> from sklearn.ensemble import ExtraTreesClassifier",2
#     from sklearn.pipeline import Pipeline,2
from sklearn_evaluation import ClassifierEvaluator,2
"from sklearn.linear_model import (ElasticNet, Lasso, LinearRegression,",2
"from sklearn.metrics import SCORERS, roc_curve",2
"    #from sklearn.preprocessing import MinMaxScaler",2
"from sklearn.ensemble import (AdaBoostClassifier, AdaBoostRegressor,",2
"from sklearn.ensemble import ExtraTreesClassifier, AdaBoostClassifier",2
"                    from sklearn import preprocessing",2
"from sklearn.cluster import KMeans, AgglomerativeClustering",2
"from sklearn.utils.validation import _num_samples, check_arrays",2
"from sklearn.metrics import classification_report, accuracy_score, confusion_matrix",2
"from sklearn.cross_validation import LeaveOneOut, StratifiedKFold",2
"    from sklearn.cross_decomposition import PLSRegression as pls",2
"from sklearn.covariance import EllipticEnvelope, MinCovDet",2
from sklearn.cross_validation import cross_val_score as cvs,2
"from sklearn.cluster import MiniBatchKMeans ",2
"from sklearn.svm import LinearSVC, SVR",2
from sklearn.metrics.base import _average_binary_score,2
"    from sklearn.linear_model import LassoLars",2
"    #from sklearn.preprocessing import Imputer",2
"from sklearn.ensemble import AdaBoostClassifier ",2
"from sklearn.metrics import (precision_score, recall_score, auc,",2
from sklearn.datasets         import make_moons,1
"from sklearn.feature_extraction.text import HashingVectorizer, TfidfVectorizer",1
from sklearn.gaussian_process import correlation_models,1
"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier",1
from sklearn.linear_model import PassiveAggressiveClassifier as PAC,1
"    # from sklearn import preprocessing",1
"    from sklearn.datasets import make_blobs # generate gaussian mixture",1
"    from sklearn.metrics import precision_score",1
"from sklearn import cross_validation, linear_model  # for the LASSO",1
"    from sklearn.utils         import shuffle",1
"    >>> from sklearn.discriminant_analysis import LinearDiscriminantAnalysis",1
"from sklearn.feature_selection import SelectPercentile, SelectKBest",1
# from sklearn.metrics import classification_report,1
"from sklearn import datasets,svm",1
"    from sklearn import naive_bayes",1
"from sklearn.naive_bayes import (BernoulliNB, ",1
from sklearn.utils.extmath import _batch_mean_variance_update,1
"from sklearn.feature_extraction.text import CountVectorizer, VectorizerMixin",1
"from sklearn.cross_validation import KFold, StratifiedKFold, FitFailedWarning",1
"from sklearn.metrics import precision_score, recall_score, precision_recall_curve, auc",1
" from sklearn.neighbors import NearestNeighbors",1
"from sklearn import svm, multiclass, neighbors",1
"from sklearn.preprocessing import MaxAbsScaler,StandardScaler",1
"from sklearn.datasets import load_digits, fetch_mldata",1
from sklearn.cluster import MiniBatchKMeans as kmeans,1
"                from sklearn.feature_selection import f_classif",1
"from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer, ENGLISH_STOP_WORDS",1
"from sklearn.metrics import adjusted_rand_score,v_measure_score",1
"from sklearn.preprocessing import MinMaxScaler, LabelBinarizer",1
#from sklearn.neural_network import BernoulliRBM,1
#from sklearn.lda import LDA,1
"from sklearn.utils import check_random_state, column_or_1d",1
#from sklearn.linear_model import RandomizedLogisticRegression,1
"from sklearn.metrics import confusion_matrix, roc_curve, auc",1
from sklearn.ensemble import gradient_boosting,1
"	from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer",1
"from sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier, export_graphviz",1
"from sklearn.cross_validation import StratifiedKFold, ShuffleSplit, StratifiedShuffleSplit",1
from sklearn_extensions.non_negative_garotte.non_negative_garotte import NonNegativeGarrote,1
"from sklearn.ensemble.weight_boosting import BaseWeightBoosting, ClassifierMixin, RegressorMixin",1
"	# # from sklearn.cluster import DBSCAN",1
from sklearn.tree import (,1
"from sklearn import manifold, datasets, decomposition",1
"from sklearn.preprocessing import MinMaxScaler, label_binarize",1
"		from sklearn.neighbors import NearestNeighbors",1
from sklearn.svm import (,1
"#from sklearn.cross_validation import permutation_test_score, Bootstrap",1
"from sklearn.svm import SVC,SVR",1
"from sklearn.utils import check_array, check_X_y",1
#from sklearn.metrics.pairwise import euclidean_distances as distance,1
"#from sklearn.ensemble import ExtraTreesClassifier",1
from sklearn_recommender import ConvexFM,1
"from sklearn.gaussian_process import regression_models",1
"from sklearn import cluster, covariance",1
"from sklearn.metrics import *",1
from sklearn import svm # Outlier detection model,1
"from sklearn import linear_model, cross_validation, preprocessing",1
"        from sklearn.metrics import precision_recall_fscore_support as prfs",1
"from sklearn import  preprocessing",1
"    # from sklearn.metrics import roc_auc_score, roc_curve, accuracy_score, precision_score, recall_score",1
"from sklearn.covariance import (graph_lasso, GraphLasso, GraphLassoCV,",1
"                from sklearn.externals.joblib import Parallel, delayed",1
"from sklearn import cluster, neighbors",1
"from sklearn.metrics import auc, roc_curve, average_precision_score, log_loss, mean_squared_error",1
"        from sklearn.utils.validation import check_random_state",1
"from sklearn.cluster import MeanShift,estimate_bandwidth",1
"from sklearn.linear_model import LinearRegression, LassoCV",1
from sklearn.metrics.metrics import roc_auc_score,1
"  from sklearn import datasets",1
from sklearn.metrics import homogeneity_score #Homogeneity metric of a cluster labeling given a ground truth,1
from sklearn.cluster import AffinityPropagation as AP,1
"from sklearn.metrics import accuracy_score, confusion_matrix, classification_report",1
"from sklearn.metrics import confusion_matrix, classification_report, auc, roc_curve",1
from sklearn.metrics import median_absolute_error #Median absolute error regression loss,1
"        # from sklearn.decomposition.sparse_pca import SparsePCA",1
from sklearn.naive_bayes             import MultinomialNB,1
from sklearn.manifold import TSNE #t-distributed Stochastic Neighbor Embedding.,1
from sklearn.metrics import normalized_mutual_info_score #Normalized Mutual Information between two clusterings,1
from sklearn.linear_model import lasso_stability_path #Stabiliy path based on randomized Lasso estimates,1
"from sklearn.preprocessing import normalize, scale, PolynomialFeatures, Imputer",1
"from sklearn.utils import check_array, issparse, check_random_state",1
"    from sklearn.ensemble import AdaBoostClassifier",1
from sklearn.metrics import roc_curve as rc,1
"from sklearn.linear_model import LogisticRegression #Logistic Regression aka logit, MaxEnt) classifier.",1
"from sklearn import tree, linear_model, neighbors, cross_validation",1
"    from sklearn.manifold import TSNE, MDS",1
from sklearn.metrics import pairwise_distances #Compute the distance matrix from a vector array X and optional Y.,1
"from sklearn.cluster.k_means_ import _squared_norms, _k_init, MiniBatchKMeans",1
"        >>> from sklearn.preprocessing import label_binarize",1
from sklearn.linear_model.base import center_data,1
from sklearn.metrics import pairwise_distances_argmin #Compute minimum distances between one point and a set of points.,1
from sklearn.cluster import SpectralClustering as sk_SpectralClustering,1
"    from sklearn import cross_validation, grid_search",1
from sklearn.metrics import pairwise_distances_argmin_min #Compute minimum distances between one point and a set of points.,1
from sklearn.naive_bayes import GaussianNB #Gaussian Naive Bayes (GaussianNB),1
"from sklearn.metrics import confusion_matrix, accuracy_score, log_loss",1
#from sklearn_theano.feature_extraction import GoogLeNetClassifier,1
"from sklearn import linear_model, cross_validation, metrics, svm",1
from sklearn.ensemble.forest import _parallel_predict_regression,1
"from sklearn.preprocessing import PolynomialFeatures, Binarizer, OneHotEncoder",1
from sklearn.neighbors import NearestNeighbors as SKNN,1
"from sklearn.utils.validation import check_array, FLOAT_DTYPES",1
"	from sklearn.preprocessing import *",1
"	from sklearn.metrics import roc_curve",1
"from sklearn import metrics, cluster",1
from sklearn.decomposition import NMF #Non-Negative Matrix Factorization NMF),1
from sklearn.covariance import graph_lasso #l1-penalized covariance estimator,1
from sklearn.feature_extraction import CountVectorizer,1
"from sklearn.covariance import LedoitWolf, OAS",1
"from sklearn.svm import LinearSVC, SVC",1
"	from sklearn.linear_model import ElasticNet",1
from sklearn_theano.feature_extraction import fetch_overfeat_weights_and_biases,1
"from sklearn.preprocessing import normalize, StandardScaler",1
"            from sklearn.utils.extmath import cartesian",1
"from sklearn import cross_validation ; ",1
"from sklearn.linear_model import SGDClassifier ##Tuned: Precision: 0.36853	Recall: 0.35950, BEST!",1
"        from sklearn.metrics import hamming_loss",1
"from sklearn.linear_model import LinearRegression, ElasticNet",1
"from sklearn.tree import DecisionTreeClassifier ##Default: Precision: 0.14830	Recall: 0.05450",1
"from sklearn.cross_validation import StratifiedKFold,cross_val_score,StratifiedShuffleSplit,cross_val_predict",1
"from sklearn import linear_model, decomposition, kernel_ridge, neighbors",1
from sklearn.utils.testing import install_mldata_mock,1
"    from sklearn import linear_model, metrics",1
from sklearn.decomposition import DictionaryLearning #Dictionary learning,1
"from sklearn.utils.testing import assert_warns, assert_raise_message",1
"from sklearn.cluster import KMeans, Birch",1
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis #Linear Discriminant Analysis,1
from sklearn_evaluation.metrics import __threshold_at_percent as threshold_at_percent,1
"    from sklearn.cluster import WardAgglomeration",1
from sklearn.metrics                 import make_scorer,1
"from sklearn.externals.joblib import Parallel,delayed",1
"from sklearn.metrics import precision_score, make_scorer",1
from sklearn.linear_model import ElasticNetCV #Elastic Net model with iterative fitting along a regularization path,1
from sklearn.metrics.scorer import _deprecate_loss_and_score_funcs,1
from sklearn.multiclass import predict_ovo,1
"from sklearn.ensemble import RandomForestClassifier	",1
"        from sklearn.ensemble.forest import RandomForestRegressor",1
#from sklearn.linear_model import Lasso # ElasticNet,1
"from sklearn.metrics import roc_auc_score, log_loss, accuracy_score",1
from sklearn.ensemble.gradient_boosting import LossFunction,1
"from sklearn.metrics import (auc, classification_report,",1
## from sklearn.preprocessing import LabelBinarizer,1
"from sklearn.metrics import r2_score,auric",1
# from sklearn.feature_extraction.image import extract_patches_2d,1
"from sklearn.ensemble import ExtraTreesRegressor#, RandomForestRegressor",1
from sklearn.metrics import zero_one,1
from sklearn import metrics;,1
from sklearn.datasets.twenty_newsgroups import strip_newsgroup_quoting,1
"from sklearn.cluster import DBSCAN",1
"from sklearn import cross_validation, preprocessing ; #normalizing data, creating kfold validation",1
"from sklearn.svm import LinearSVC, SVC, NuSVC",1
"        from sklearn.ensemble import RandomTreesEmbedding",1
"        from sklearn.svm import NuSVC",1
"from sklearn_extensions.extreme_learning_machines.elm import ELMClassifier, ELMRegressor, GenELMClassifier, GenELMRegressor",1
"from sklearn.kernel_ridge import KernelRidge",1
from sklearn_evaluation.report import parse_tags,1
"from sklearn.preprocessing import StandardScaler, Scaler",1
"from sklearn.metrics import f1_score,accuracy_score,precision_recall_fscore_support,classification_report",1
"from sklearn.feature_extraction.text import TfidfTransformer,TfidfVectorizer,CountVectorizer",1
from sklearn_recommender import DLRecommender,1
# from sklearn.utils.fixes import unique,1
"    from sklearn import datasets, linear_model, metrics, svm",1
"        # from sklearn.metrics.pairwise import cosine_similarity",1
from sklearn import gaussian_process as slgp,1
"    from sklearn.datasets import make_blobs",1
"from sklearn.linear_model import (orthogonal_mp, orthogonal_mp_gram,",1
"    from sklearn.metrics import make_scorer",1
"from sklearn.utils import array2d, check_random_state, check_arrays, safe_asarray",1
"from sklearn.metrics import accuracy_score, precision_score, f1_score, \",1
"from sklearn.tree import (DecisionTreeClassifier, DecisionTreeRegressor,",1
"    from sklearn.covariance import EmpiricalCovariance",1
"from sklearn import metrics,cross_validation",1
"from sklearn import svm, grid_search, metrics, linear_model, ensemble",1
"    from sklearn import cross_validation, metrics",1
"from sklearn.cross_validation import (KFold,",1
#from sklearn.linear_model import BayesianRegression,1
"        from sklearn.feature_selection import RFE",1
"from sklearn import feature_extraction, preprocessing, svm",1
"    from sklearn.cross_validation import permutation_test_score",1
"from sklearn.cluster import SpectralClustering",1
"from sklearn.metrics import log_loss, accuracy_score",1
"from sklearn.cluster import Birch, MiniBatchKMeans",1
#from sklearn.cluster import DBSCAN,1
">>> from sklearn.naive_bayes import MultinomialNB",1
from sklearn.ensemble import RandomForestClassifier as RanomForest,1
"from sklearn.pipeline import Pipeline, FeatureUnion",1
"from sklearn_pmml.convert.model import Schema, ModelMode, ClassifierConverter",1
">>> from sklearn.feature_selection import SelectKBest, chi2",1
"from sklearn.manifold import Isomap, LocallyLinearEmbedding, TSNE, MDS",1
from sklearn import metrics as skmet,1
"from sklearn.metrics import roc_auc_score as auc",1
from sklearn import learning_curve,1
from sklearn.metrics import f1_score as f1,1
from sklearn.datasets           import make_moons,1
from sklearn.tree import DecisionTreeClassifier as scikitDTC,1
"# from sklearn.cross_validation import cross_val_score, StratifiedShuffleSplit",1
"from sklearn.metrics import classification_report,f1_score",1
# from sklearn.metrics import make_scorer,1
"from sklearn.linear_model import BayesianRidge, LassoCV, LinearRegression",1
"from sklearn import  neighbors, linear_model",1
"from sklearn.linear_model import RandomizedLasso, LassoCV",1
"import nltk, nltk.data, pickle, reimport email as emailProcessorimport time, imaplibfrom dateutil import parserimport datetimeimport numpy as np#import nerimport bsddb, stringfrom nltk.stem import WordNetLemmatizerfrom sklearn import decompositionimport matplotlib.pyplot as pltimport subprocess, sys, randomfrom unidecode import unidecodefrom topia.termextract import extractfrom calais import Calais""""""toGephi takes as input an adjacency matrix (graph), a list of node names (wordList) in the same order as theinput graph, and a file name (fName). It creates a file that contains the input graph in a format that can be read byGephi""""""def toGephi(graph, wordList, fName):    def fix(word):        temp = word.split()        temp = [word[0].upper()+word[1:] for word in temp]        return """".join(temp)    wordList = [fix(word) for word in wordList]    print ""first"", wordList[0], ""last"", wordList[-1]    gephiString = reduce(lambda d, x: d+"";""+x, wordList, """")    print gephiString    for i in xrange(0, len(wordList)):        gephiString += ""\n""+wordList[i]+reduce(lambda d, x: d+"";""+str(x), graph[i,:].T.tolist(), """")    print gephiString    open(fName, ""w"").write(gephiString)""""""print ""testing gephi translator""graph = np.zeros((5, 5))for i in xrange(0, 5): for j in xrange(0, 5):     graph[i,j] = i-jwords = [str(i) for i in xrange(1, 6)]print graphprint wordstoGephi(graph, words, ""test.txt"")""""""""""""ArticleReader deals with maintaining an up-to-date database of news articles (which are sourced from rss feedsand aggregated in the email account newsprojectvidur@gmail.com which has the password newsanalytics) and creating the databaseof processed articles, and the co-occurrence graph.Example:To update the article database we would run,articleReader = ArticleReader()articleReader.updateArticleDB()""""""class ArticleReader():    def __init__(self):        """"""A set containing all the email uids already present in the database of news articles""""""        self.inStoredDumpsDB = pickle.load(open(""inStoredDumpsDB"", ""rb""))        """"""A set containing all the news article urls previously visited""""""        self.visitedURLS = pickle.load(open(""visitedURLS"", ""rb""))        """"""A set containing all the email uids already present in the database of PROCESSED news articles""""""        self.inProcessedArticlesDB = set()#pickle.load(open('inProcessedArticlesDB', ""rb""))    """"""""prepareEmailConnections is run through updateArticleDB and it sets up the connection to gmail so that the article    links can be recovered from the emails from the rss aggregator blogtrottr""""""    def _prepareEmailConnections(self):        from goose import Goose        self.goose = Goose()#{'browser_user_agent': 'Mozilla'})        self.mail = imaplib.IMAP4_SSL('imap.gmail.com')        self.mail.login('newsprojectvidur@gmail.com', 'newsanalytics')        self.mail.list()        self.mail.select(""reuters"")        self.linkPattern = re.compile(r""(http://.+?\.html|http://.+?\.htm|http://.+?\.aspx|http://.+?-sa|http://.+?\.cms)"", re.DOTALL)        self.htmlFix = re.compile(r""(http://.+?2Ehtml|http://.+?2Ehtm|http://.+?2Easpx|http://.+?2Ecms)"", re.DOTALL)        self.table = string.maketrans("""","""")    """"""updateArticleDB is called to download all articles that have been emailed but have not yet been put into the database""""""    def updateArticleDB(self):        """"""Preparing Connections""""""        self._prepareEmailConnections()        self.unreadable = """"        """"""Creating Update to DB""""""        result, data = self.mail.uid('search', None, ""ALL"")        emailUIDStoVisit = sorted(set(data[0].split()).difference(self.inStoredDumpsDB), key = lambda x: int(x))        result, data = self.mail.uid('fetch', reduce(lambda stringa, uid: stringa+"",""+uid, emailUIDStoVisit), '(RFC822)')        emails = filter(lambda x: type(x) is tuple, data)        """"""Making sure that google's response assigns uids the way I assume they are assigned""""""        test = [x[0].split()[2] for x in emails[:20]]        assert test==emailUIDStoVisit[:20], ""%r %r"" %(test, emailUIDStoVisit[:20])        todo = [(emailUIDStoVisit[i], emails[i][1]) for i in xrange(0, len(emailUIDStoVisit))]        random.shuffle(todo)        print ""unread emails: "",len(emailUIDStoVisit)        toDatabase = map(self._storeEmailedArticle, zip(range(len(emailUIDStoVisit), 0, -1), todo))        """"""Adding it to the DB""""""        self._addToDB(toDatabase, ""articleDumps.db"")        """"""Updating Log Files""""""        self._updateSets()        open(""unreadableURLS"", ""a"").write(self.unreadable)    """"""The databases are written to in a single step so as to prevent them from being corrupted. This is done through    _addToDB which takes a dictionary (addToDB) and adds its contents to the berkley db OVERWRITING ANY OVERLAPS!""""""    def _addToDB(self, addToDB, dbName):        db = bsddb.btopen(dbName, 'c')        for key, value in addToDB:            if key!=None:                db[key] = value        db.sync()        db.close()        print ""successfuly updated "", dbName    def _extractLink(self, text):        lines = text.replace(""=\r\n"", """").split(""\r\n"")        date = filter(lambda phrase: phrase[:6]==""Date: "", lines)        if len(date)==1:            date = parser.parse(date[0][6:])        else:            print ""date trouble!"", text            date = datetime.datetime.now()        links = filter(lambda phrase: phrase[:4]==""http"", lines)        return links, date    def _cleanLink(self, link):        newLink = """"        wait = 0        for i in xrange(0, len(link)):            if wait>0:                wait -= 1                continue            if link[i]==""%"" or link[i]==""="" and i<len(link)-2:                try:                    newLink+=link[i+1:i+3].decode(""hex"")                    wait = 2                except:                    newLink+=link[i]            else:                newLink+=link[i]        return newLink    def _logLink(self, link):        self.unreadable += ""\n""+link    def _storeEmailedArticle(self, curPosEmailStr):        curPos, uidEmailStr = curPosEmailStr        uid, emailStr = uidEmailStr        print ""remaining: "", curPos        self.inStoredDumpsDB.add(uid)        links, date = self.extractLink(emailStr)        if len(links)<2:            print ""Not a news article"", links            return (None, None)        link = links[0]        if ""news.google.com"" in link:            link = re.findall(""http.*"", link[4:])            assert len(link)==1            link = link[0]        if ""="" in link or ""%"" in link:            link = self._cleanLink(link)        if link in self.visitedURLS:            print ""already seen "", link            return (None, None)        self.visitedURLS.add(link)        try:            extract = self.goose.extract(url=link)        except:            print ""Goose extractor crashed on page "", link            print ""Unexpected error:"", sys.exc_info()[0]            self._logLink(link)            return (None, None)        time.sleep(random.randint(1, 6))        text = extract.cleaned_text        if text=="""" or text==None:            print ""failed to parse url "", link            self._logLink(link)        title = extract.title        value = pickle.dumps((text, link, date, title))        return (uid, value)    """"""Called to process all the articles in the database of downloaded articles that have not yet been processed i.e.    do not have their uids in self.inProcessedArticlesDB""""""    def updateProcessedDb(self):        API_KEY = ""vwk375uecnazrcrpu8n4y3yf""        self.calaisObj = Calais(API_KEY, submitter=""python-calais demo"")        self.articleDumps = bsddb.btopen('articleDumps.db', 'r')        self.processedArticles = bsddb.btopen(""openCalis.db"", 'c')        toDo = set(self.articleDumps.keys()).difference(self.inProcessedArticlesDB)        data = reduce(lambda data, curPosUid: self._termExtractor(curPosUid, data), zip(range(len(toDo), 0, -1), toDo), {})        toDatabase = [(key, pickle.dumps(value)) for key, value in data.iteritems()]        self._addToDB(toDatabase, ""openCalis.db"")        self._updateSets()    """"""Uses open Calis on the text of the news articles to recover tagged entities""""""    def _openCalis(self, text):        def clean(entity):            del entity['_typeReference']            del entity['instances']            return entity        response = False        while not response:            try:                response = self.calaisObj.analyze(text)            except ValueError:                print ""Calais Server Busy""                time.sleep(120)                response = False        if response:            try:                return map(clean, response.entities)            except:                print ""calis failed!""                print text                return None        else:            return None    """"""Processed the given uid and adds the result to a dictionary which the processed articles    database is then updated with""""""    def _termExtractor(self, curPosUid, data):        curPos, uid = curPosUid        print ""remaining: "", curPos        self.inProcessedArticlesDB.add(uid)        try:            text, link, date, title = pickle.loads(self.articleDumps[uid])        except ValueError:            text, link, date = pickle.loads(self.articleDumps[uid])        text = unidecode(text)#.encode(""ascii"", errors = ""ignore"")        entities = self._openCalis(text)#self.returnEntities(text)        if entities:            print map(lambda e: e['name'], entities)            key = pickle.dumps(date)            if key in data:                value = data[key]                value.append(entities)                data[key] = value            elif self.processedArticles.has_key(key):                value = pickle.loads(self.processedArticles[key])                value.append(entities)                data[key] = value            else:                data[key] = [entities]        return data    """"""Creates the adjacency matrix (or co-occurence graph) of the entities occuring in the news articles""""""    def createGraph(self):        self.processedArticles = bsddb.btopen(""openCalis.db"", 'r')        wordCounts = self._countWords()        articlesN = len(self.processedArticles)#len(self.processedArticles.keys())        print ""Number of times being considered = "", articlesN        indexToWord = [word for word, count in wordCounts.iteritems() if len(word.strip())>2 and count>50 and count<articlesN/50]        allowed = set(indexToWord)        print ""Number of words being considered for the graph = "", len(indexToWord)        wordIndices = dict(zip(indexToWord, xrange(0, len(indexToWord))))        graph = np.zeros((len(indexToWord), len(indexToWord)))        for value in self.processedArticles.itervalues():            listOfLists = pickle.loads(value)            for aList in listOfLists:                for i in xrange(0, len(aList)):                    for j in xrange(i+1, len(aList)):                        if aList[i] in allowed and aList[j] in allowed:                            graph[wordIndices[aList[i]], wordIndices[aList[j]]]+= 1.0#/(wordCounts[aList[i]]+wordCounts[aList[j]])        graph = graph + graph.T        #graph = graph/[[wordCounts[indexToWord[i]]] for i in xrange(0, len(indexToWord))]        np.save(""graph.data"", graph)        pickle.dump(indexToWord, open(""words.data"",""wb""))        toGephi(graph, indexToWord, ""graph.csv"")#         t = 0.6#         L = laplacian(graph)#         heatFlow = expm(-1*float(t)*L)#         np.save(""heatFlowGraph"", heatFlow)    def _countWords(self):        wordCounts = {}        for value in self.processedArticles.itervalues():            listOfLists = pickle.loads(value)            for aList in listOfLists:                for entity in aList:                    key = (entity['name'], entity['_type'])                    wordCounts[key] = wordCounts.get(key, 0)+1        return wordCounts    """"""Updates the sets keeping track of which emails, articles and links have already been processed""""""    def _updateSets(self):        FinProcessedArticlesDB = open(""inProcessedArticlesDB"", ""wb"")        pickle.dump(self.inProcessedArticlesDB, FinProcessedArticlesDB)        FinProcessedArticlesDB.close()        FinStoredDumpsDB = open(""inStoredDumpsDB"", ""wb"")        pickle.dump(self.inStoredDumpsDB, FinStoredDumpsDB)        FinStoredDumpsDB.close()        FvisitedURLS = open(""visitedURLS"",""wb"")        pickle.dump(self.visitedURLS, FvisitedURLS)        FvisitedURLS.close()        try:            self.articleDumps.close()        except:            pass        try:            self.processedArticles.close()        except:            pass        print ""successfully closed""articleReader = ArticleReader()articleReader.updateArticleDB()",1
"from sklearn.externals.six.moves import xrange",1
#     from sklearn.ensemble import BaggingClassifier,1
"    from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier, VotingClassifier",1
"from sklearn.feature_extraction.text import TfidfVectorizer, HashingVectorizer, TfidfTransformer",1
from sklearn.datasets.samples_generator import make_circles,1
"from sklearn import preprocessing, svm",1
"from sklearn.datasets import make_friedman1, make_friedman2, make_friedman3 ",1
"                    from sklearn.externals import joblib",1
"                # from sklearn import metrics",1
"                from sklearn.externals import joblib",1
from sklearn.ensemble import UnSupervisedRandomForestClassifier,1
"    from sklearn.cluster import k_means, MiniBatchKMeans",1
"	from sklearn.manifold import Isomap",1
"from sklearn.metrics import roc_curve, roc_auc_score, auc",1
"		from sklearn.svm import LinearSVC",1
from sklearn.preprocessing.data import Normalizer,1
from sklearn.preprocessing.data import add_dummy_feature,1
from sklearn.svm import SVR as svm,1
"from sklearn.utils.random import check_random_state, choice",1
"    from sklearn.metrics.pairwise import euclidean_distances",1
#    from sklearn.preprocessing import StandardScaler,1
"    from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier",1
"from sklearn.cross_validation import KFold, _BaseKFold",1
from sklearn.decomposition import IncrementalPCA as IncrementalPCA_sk,1
"                    from sklearn.dummy import DummyClassifier",1
"                    from sklearn.metrics import confusion_matrix",1
"from sklearn.feature_extraction.text import TfidfVectorizer, TfidfTransformer",1
"from sklearn.cluster import KMeans,MiniBatchKMeans, DBSCAN",1
"from sklearn.linear_model import Ridge, RidgeCV, LinearRegression",1
"from sklearn.preprocessing import RobustScaler, StandardScaler, Imputer, MinMaxScaler",1
from sklearn.metrics.scorer import _ThresholdScorer,1
"from sklearn.metrics import roc_curve, roc_auc_score, f1_score",1
"#from sklearn.svm import SVC",1
"from sklearn.metrics import silhouette_score, adjusted_rand_score, normalized_mutual_info_score",1
"from sklearn import svm, grid_search, cross_validation",1
"from sklearn import cross_validation, datasets",1
"from sklearn.ensemble import ExtraTreesClassifier, ExtraTreesRegressor, \",1
from sklearn.svm  import SVC,1
#from sklearn.utils.extmath import logsumexp,1
#from sklearn.cluster.bicluster import SpectralCoclustering,1
#from sklearn.cluster import MiniBatchKMeans,1
"from sklearn.linear_model import SGDClassifier, LinearRegression, SGDRegressor, ElasticNet",1
"from sklearn import preprocessing,svm",1
"from sklearn import preprocessing, cross_validation, metrics",1
"from sklearn.cross_validation import LeaveOneOut,StratifiedKFold,KFold",1
"from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer,\",1
"from sklearn.linear_model import Lasso, LinearRegression",1
"from sklearn.metrics import f1_score, precision_recall_fscore_support, roc_curve",1
from sklearn.neighbors import BallTree as ScikitBallTree,1
from sklearn.utils.sparsetools import connected_components,1
"from sklearn.metrics import confusion_matrix, precision_recall_curve, auc",1
"from sklearn.metrics import precision_score,recall_score,confusion_matrix",1
"    # from sklearn.grid_search import RandomizedSearchCV",1
"            from sklearn.pipeline import Pipeline",1
"from sklearn_extensions.extreme_learning_machines.random_layer import RBFRandomLayer, MLPRandomLayer",1
"            from sklearn.cross_validation import StratifiedKFold, cross_val_score",1
"from sklearn.datasets import load_iris, load_diabetes",1
"from sklearn import neighbors, datasets, linear_model, ensemble, svm",1
"from sklearn.cluster import DBSCAN, AgglomerativeClustering",1
"from sklearn.preprocessing import PolynomialFeatures  ",1
"    from sklearn.metrics import confusion_matrix as cm",1
"from sklearn.svm import LinearSVR ",1
"from sklearn.metrics import r2_score,explained_variance_score,mean_absolute_error",1
"from sklearn.grid_search import GridSearchCV,RandomizedSearchCV",1
"from sklearn.isotonic import check_increasing, isotonic_regression,\",1
from sklearn.datasets import fetch_california_housing,1
## SVMで試してみfrom sklearn import svm,1
"    #from sklearn.grid_search import GridSearchCV",1
"from sklearn import svm,metrics,cross_validation",1
"from sklearn import ensemble, svm,datasets",1
#     from sklearn.metrics import pairwise,1
from sklearn.cross_validation import _BaseKFold,1
#from sklearn.hmm import MultinomialHMM,1
"            from sklearn.gaussian_process import GaussianProcess",1
"from sklearn.datasets import load_boston, load_breast_cancer, load_iris, make_moons, make_gaussian_quantiles",1
"from sklearn_recommender import DLRecommender, ConvexFM",1
"from sklearn import metrics, cross_validation, svm",1
# from sklearn.ensemble import GradientBoostingClassifier,1
"from sklearn.linear_model import LogisticRegression, SGDClassifier, RandomizedLogisticRegression",1
"from sklearn import svm, neighbors, naive_bayes, tree",1
"    from sklearn.datasets import (",1
"from sklearn.cross_validation import cross_val_score, cross_val_predict",1
"from sklearn.feature_selection import RFE, SelectKBest, f_regression",1
"from sklearn import linear_model, tree",1
from sklearn.learning_curve import learning_curve as lc,1
from sklearn.datasets import load_sample_images,1
from sklearn import neighbors                       # provides K-Nearest Neighbors Regressor class,1
"from sklearn import svm  # SVC, NuSVC, LinearSVC, SVR",1
"#from sklearn import cross_validation",1
"    from sklearn.metrics.base import UndefinedMetricWarning",1
#from sklearn.manifold.spectral_embedding_ import SpectralEmbedding as SE0,1
"    from sklearn.neighbors import BallTree, DistanceMetric",1
"from sklearn.manifold import Isomap, MDS",1
"from sklearn.metrics import roc_curve, auc, f1_score",1
"from sklearn.cluster import MeanShift,DBSCAN",1
"from sklearn.metrics import accuracy_score, zero_one_loss, mean_squared_error",1
"from sklearn.svm import SVR,NuSVR",1
"from sklearn.feature_extraction.text import HashingVectorizer, TfidfTransformer",1
from sklearn.cluster.k_means_ import KMeans,1
"from sklearn import  pipeline, metrics, grid_search #decomposition,",1
"from sklearn.cross_validation import train_test_split, cross_val_predict, cross_val_score",1
from sklearn.ensemble.forest import ForestRegressor,1
from sklearn.ensemble import BaggingClassifier as SK_BaggingClassifier,1
"from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer  ",1
"	from sklearn.metrics import roc_curve, auc",1
from sklearn.preprocessing import add_dummy_feature,1
"from sklearn import decomposition, cluster, feature_selection",1
# from sklearn.utils.murmurhash import murmurhash3_bytes_s32,1
"from sklearn.metrics import average_precision_score, label_ranking_average_precision_score, make_scorer",1
"from sklearn import preprocessing, cross_validation, grid_search",1
"from sklearn.manifold import TSNE, MDS, SpectralEmbedding, Isomap",1
from sklearn import linear_model #used for logistic regression,1
"from sklearn import tree ",1
"#from sklearn.metrics import accuracy_score, precision_score,recall_score, f1_score, mean_absolute_error,mean_squared_error",1
"from sklearn.grid_search import ParameterGrid, _check_param_grid, BaseSearchCV",1
from sklearn.pipeline import Pipeline #Pipeline of transforms with a final estimator.,1
"    from sklearn.metrics import classification_report, precision_recall_curve, roc_curve",1
"from sklearn.metrics import f1_score, accuracy_score, mean_absolute_error, mean_squared_error",1
# >>> from sklearn.metrics import pairwise_distances_argmin_min,1
from sklearn.covariance import OAS #Oracle Approximating Shrinkage Estimator,1
from sklearn.cross_validation import ShuffleSplit #Random permutation cross-validation iterator.,1
from sklearn.linear_model import Perceptron #Read more in the User Guide.,1
from sklearn.linear_model import RandomizedLasso #Randomized Lasso.,1
from sklearn.metrics import mean_absolute_error #Mean absolute error regression loss,1
from sklearn.metrics.pairwise import polynomial_kernel #Compute the polynomial kernel between X and Y:,1
from sklearn.neighbors import KNeighborsClassifier #Classifier implementing the k-nearest neighbors vote.,1
from sklearn.neighbors import KernelDensity #Kernel Density Estimation,1
"    >>> from sklearn.cross_validation import LabelKFold",1
from sklearn.preprocessing import LabelBinarizer #Binarize labels in a one-vs-all fashion,1
"from sklearn.svm import l1_min_c #Return the lowest bound for C such that for C in l1_min_C, infinity) the model is guaranteed not to be empty.",1
from sklearn.ensemble import AdaBoostClassifier as scikitAB,1
"from sklearn.externals.six import StringIO ",1
"from sklearn.externals import joblib, six",1
from sklearn import preprocessing as ppr,1
"from sklearn.externals.six.moves import xrange, cPickle as pickle",1
"from sklearn.naive_bayes import BernoulliNB,GaussianNB",1
"from sklearn.utils.sparsefuncs import assign_rows_csr, mean_variance_axis0",1
"from sklearn.cross_validation import KFold, StratifiedKFold, Bootstrap",1
"  from sklearn.preprocessing import Normalizer",1
"from sklearn.preprocessing import MinMaxScaler, StandardScaler, LabelEncoder",1
"from sklearn.feature_selection import f_regression, f_classif",1
"    from sklearn.dummy import DummyRegressor",1
"from sklearn import svm, mixture",1
"from sklearn.cross_validation import (StratifiedShuffleSplit, StratifiedKFold,",1
"            from sklearn.preprocessing import LabelEncoder",1
from sklearn.calibration import _SigmoidCalibration,1
"    from sklearn.grid_search import GridSearchCV    ",1
"from sklearn import cross_validation    ",1
from sklearn.externals.six.moves.urllib.request import urlopen,1
"        from sklearn.externals.six import StringIO",1
# from sklearn.metrics import recall_score,1
"from sklearn.ensemble.gradient_boosting import GradientBoostingClassifier",1
"from sklearn.preprocessing import MinMaxScaler, StandardScaler, LabelEncoder, \",1
"from sklearn.metrics import accuracy_score, f1_score, confusion_matrix",1
"from sklearn.metrics import roc_auc_score, f1_score, accuracy_score, mean_squared_error, r2_score",1
"from sklearn.utils.testing import _assert_less, _assert_greater",1
"#     from sklearn.linear_model import LogisticRegression",1
"from sklearn.metrics import log_loss, accuracy_score  # NOQA",1
"from sklearn.metrics import classification_report,recall_score,accuracy_score,confusion_matrix,roc_curve,roc_auc_score",1
"    # from sklearn.cluster import KMeans",1
"from sklearn.decomposition import FactorAnalysis, KernelPCA, FastICA, PCA",1
"from sklearn.ensemble import (RandomForestClassifier, ExtraTreesClassifier, GradientBoostingClassifier)",1
"from sklearn.linear_model import LinearRegression, LogisticRegression ",1
"from sklearn.ensemble.base import BaseEnsemble, _partition_estimators",1
"        from sklearn.neighbors import kneighbors_graph",1
"from sklearn.linear_model import LogisticRegression, Perceptron, SGDClassifier, OrthogonalMatchingPursuit, RandomizedLogisticRegression",1
"    from sklearn.linear_model import SGDClassifier as SkSGDClassifier",1
"from sklearn.linear_model.base import BaseEstimator, LinearClassifierMixin",1
"    from sklearn.cluster import (MeanShift, MiniBatchKMeans,",1
"from sklearn.pipeline import make_union, make_pipeline",1
"from sklearn.cluster import KMeans, DBSCAN, MeanShift, Ward",1
"from sklearn.datasets.samples_generator import make_classification,\",1
"from sklearn.cluster import DBSCAN, AffinityPropagation, KMeans",1
from sklearn.metrics.scorer import get_scorer,1
"        # from sklearn.decomposition.truncated_svd import TruncatedSVD",1
from sklearn.manifold._utils import _binary_search_perplexity,1
"    >>> from sklearn import datasets, metrics",1
"from sklearn.base import BaseEstimator, ClassifierMixin, TransformerMixin, ClusterMixin",1
from sklearn.neighbors import LocalOutlierFactor,1
from sklearn.svm import SVC as svm,1
"    from sklearn import svm, tree",1
from sklearn.lda import LDA # nothing to do with Latent Dirichlet Analysis,1
from sklearn_evaluation.plot import grid_search,1
"from sklearn.linear_model import LinearRegression, ElasticNet, Lasso, Ridge",1
"from sklearn.externals.six import iteritems, itervalues, string_types",1
"from sklearn.ensemble import ExtraTreesRegressor",1
from sklearn_pmml.convert import CategoricalFeature,1
# from sklearn.utils.validation import FLOAT_DTYPES,1
"        from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier",1
"from sklearn.neighbors import NearestNeighbors, BallTree, KDTree",1
"from sklearn.cross_validation import check_cv, train_test_split, StratifiedShuffleSplit",1
"from sklearn.metrics             import precision_score,recall_score,confusion_matrix",1
"#from sklearn.metrics             import precision_score,recall_score,confusion_matrix",1
from sklearn.neighbors import RadiusNeighborsClassifier,1
from sklearn.decomposition import NMF        # to add features based on the latent representation,1
"                from sklearn import cross_validation",1
# from sklearn.metrics.pairwise import pairwise_kernels as kernel,1
"from sklearn.metrics import accuracy_score, confusion_matrix, mean_absolute_error",1
from sklearn.utils.extmath import make_nonnegative,1
from sklearn.metrics.pairwise import euclidean_distances as euclid_dist,1
"from sklearn.metrics import classification_report, recall_score",1
from sklearn import datasets as skdatasets,1
from sklearn.feature_extraction.hashing import _iteritems,1
"from sklearn.metrics import precision_recall_curve, average_precision_score, adjusted_mutual_info_score, adjusted_rand_score",1
from sklearn.cluster import Ward as WardSK,1
"    # from sklearn.cluster import DBSCAN",1
from sklearn import decomposition as d,1
"    from sklearn.metrics import mean_squared_error, roc_auc_score",1
"from sklearn import decomposition, pipeline, metrics, grid_search",1
from sklearn_model_eval import plots,1
from sklearn.decomposition           import TruncatedSVD,1
"	from sklearn.metrics import precision_score",1
from sklearn.decomposition import PCA as sklearn_PCA,1
"	from sklearn.neighbors import *",1
"from sklearn import feature_selection",1
"from sklearn.cluster import WardAgglomeration",1
"from sklearn import linear_model, grid_search",1
"from sklearn.ensemble import RandomForestClassifier, partial_dependence",1
from sklearn.metrics import explained_variance_score as evs,1
"from sklearn.tree import DecisionTreeClassifier; ",1
"from sklearn.feature_selection import SelectPercentile, f_classif",1
"from sklearn.cluster import KMeans, MiniBatchKMeans, AgglomerativeClustering",1
from sklearn.feature_extraction.image import PatchExtractor,1
"from sklearn.linear_model import SGDRegressor, Ridge",1
"from sklearn.datasets import dump_svmlight_file, load_svmlight_file",1
"    from sklearn.datasets.samples_generator import (make_classification,",1
"    from sklearn.ensemble import ExtraTreesRegressor, GradientBoostingRegressor",1
"    from sklearn.svm import LinearSVC",1
"    from sklearn.svm import LinearSVC, SVC, SVR",1
"from sklearn.metrics import (accuracy_score, roc_curve, roc_auc_score,",1
"from sklearn.preprocessing import scale,StandardScaler, LabelBinarizer",1
"from sklearn.metrics import pairwise, pairwise_kernels",1
from sklearn.manifold.spectral_embedding_ import _set_diag,1
"    from sklearn.preprocessing import StandardScaler, MinMaxScaler",1
"    from sklearn.svm import SVR",1
"    from sklearn.metrics.scorer import check_scoring",1
"from sklearn.preprocessing import LabelBinarizer",1
"from sklearn.metrics import classification_report, confusion_matrix",1
"    from sklearn import datasets, linear_model",1
"from sklearn.metrics import confusion_matrix, mean_squared_error",1
"from sklearn.ensemble import RandomForestClassifier,AdaBoostClassifier,GradientBoostingClassifier, ExtraTreesClassifier",1
"    from sklearn.hmm import GaussianHMM    ",1
"from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor, GradientBoostingClassifier",1
"from sklearn.decomposition import PCA, ProbabilisticPCA, ProjectedGradientNMF",1
from sklearn.ensemble import AdaBoostClassifier as Boost,1
"        from sklearn.preprocessing import LabelBinarizer",1
"from sklearn.metrics import recall_score, precision_score, accuracy_score, f1_score",1
"from sklearn.cross_validation import _check_cv, check_scoring, is_classifier, _fit_and_score",1
#from sklearn.metrics import zero_one_score,1
"from sklearn import svm, cross_validation, grid_search, metrics",1
"    >>> from sklearn.utils.arpack import eigsh",1
"from sklearn import manifold, datasets, decomposition, ensemble, lda",1
from sklearn import linear_model                    # provides Multiple / Linear Regressor class,1
"from sklearn import cluster as clus  # KMeans, MeanShift, AffinityPropagation, SpectralClustering",1
"#from sklearn.ensemble import GradientBoostingClassifier",1
"from sklearn.metrics import classification_report, explained_variance_score, r2_score",1
from sklearn.multiclass import fit_ovr,1
"			from sklearn.cross_validation import StratifiedShuffleSplit",1
"    from sklearn.metrics import precision_recall_curve, auc",1
"from sklearn.metrics import pairwise_distances_argmin_min",1
from sklearn.cluster import KMeans as KMeansGood,1
"from sklearn import svm, linear_model, ensemble, naive_bayes, neighbors",1
"        from sklearn.manifold import MDS",1
"    #from sklearn.feature_extraction.text import TfidfVectorizer",1
"from sklearn.svm import SVC, libsvm, LinearSVC",1
from sklearn.pls import PLSRegression,1
"    from sklearn.svm import LinearSVC, SVC",1
"from sklearn import svm, preprocessing, naive_bayes, neighbors, ensemble, metrics",1
"from sklearn.cluster                 import KMeans, MiniBatchKMeans",1
from sklearn.multiclass import predict_ecoc,1
from sklearn.multiclass import predict_proba_ovr,1
"from sklearn.feature_selection import SelectKBest, f_classif, chi2",1
from sklearn.manifold import isomap,1
"from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor, ExtraTreesRegressor",1
"from sklearn.svm import LinearSVC, NuSVC",1
from sklearn.externals.six import moves,1
"  from sklearn import tree",1
"            from sklearn.svm import SVC, SVR",1
"        from sklearn.utils.estimator_checks import check_estimator",1
from sklearn.metrics import roc_curve #Compute Receiver operating characteristic ROC),1
"    from sklearn.feature_extraction import image",1
from sklearn.covariance import GraphLasso #Sparse inverse covariance estimation with an l1-penalized estimator.,1
from sklearn.cross_validation import LeavePOut #Leave-P-Out cross validation iterator,1
from sklearn.decomposition import KernelPCA #Kernel Principal component analysis KPCA),1
from sklearn.decomposition import FactorAnalysis #Factor Analysis FA),1
from sklearn.ensemble import RandomForestClassifier #A random forest classifier.,1
from sklearn.ensemble import ExtraTreesRegressor #An extra-trees regressor.,1
from sklearn.gaussian_process import GaussianProcess #The Gaussian Process model class.,1
"from sklearn.linear_model import LassoLarsCV #Cross-validated Lasso, using the LARS algorithm",1
from sklearn.linear_model import lars_path #Compute Least Angle Regression or Lasso path using LARS algorithm [1],1
from sklearn.linear_model import orthogonal_mp_gram #Gram Orthogonal Matching Pursuit OMP),1
"from sklearn.naive_bayes import GaussianNB,  MultinomialNB",1
from sklearn.metrics import explained_variance_score #Explained variance regression score function,1
from sklearn.metrics import mean_squared_error #Mean squared error regression loss,1
from sklearn.metrics import adjusted_rand_score #Rand index adjusted for chance,1
from sklearn.metrics import v_measure_score #V-measure cluster labeling given a ground truth.,1
from sklearn.metrics.pairwise import manhattan_distances #Compute the L1 distances between the vectors in X and Y.,1
from sklearn.metrics.pairwise import pairwise_kernels #Compute the kernel between arrays X and optional array Y.,1
from sklearn.preprocessing import MaxAbsScaler #Scale each feature by its maximum absolute value.,1
from sklearn.preprocessing import Normalizer #Normalize samples individually to unit norm.,1
from sklearn.svm import SVC #C-Support Vector Classification.,1
from sklearn.tree import DecisionTreeClassifier #A decision tree classifier.,1
"# from sklearn import linear_model, naive_bayes, neighbors, svm",1
"from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score, roc_auc_score",1
"from sklearn.linear_model import Lasso, LassoCV",1
#     from sklearn.utils.estimator_checks import check_estimator,1
from sklearn.tree           import DecisionTreeClassifier,1
from sklearn.cluster import KMeans;,1
"from sklearn import gaussian_process#,grid_search,svm",1
"from sklearn.cross_validation import train_test_split, PredefinedSplit",1
"from sklearn.preprocessing import PolynomialFeatures,scale",1
"from sklearn.covariance import GraphLassoCV",1
"from sklearn import manifold, cluster",1
"		from sklearn.ensemble import AdaBoostClassifier",1
"from sklearn.svm import SVC,LinearSVC,SVR",1
from sklearn.ensemble import ExtraTreesClassifier as scikitET,1
from sklearn.externals import joblib # for savling and loading the model,1
"from sklearn.utils.extmath import safe_sparse_dot, squared_norm, fast_dot",1
"    from sklearn.utils import extmath",1
"		from sklearn.cluster import MeanShift as MS",1
"	from sklearn.ensemble import ExtraTreesClassifier",1
"	from sklearn import manifold, metrics",1
"from sklearn.linear_model import LogisticRegression, LogisticRegressionCV, SGDClassifier",1
from sklearn.preprocessing import scale as sklearn_scale,1
"from sklearn.ensemble import GradientBoostingClassifier, RandomForestClassifier, ExtraTreesClassifier",1
"from sklearn.dummy import DummyRegressor, DummyClassifier",1
"from sklearn import preprocessing, cross_validation, svm, metrics, tree, decomposition",1
"	from sklearn.ensemble import RandomForestClassifier as RFC",1
"from sklearn import datasets, preprocessing, cross_validation",1
"from sklearn.metrics import pairwise_distances",1
"    from sklearn.cross_validation import StratifiedKFold as KFold",1
"from sklearn import cross_validation,metrics,grid_search,linear_model",1
"from sklearn.datasets import make_hastie_10_2 ",1
"        # from sklearn.decomposition import PCA",1
"from sklearn.metrics import make_scorer, roc_auc_score",1
#from sklearn.metrics.pairwise import cosine_similarity,1
from sklearn import cross_validation as crossval,1
from sklearn.ensemble.forest import _parallel_apply,1
from sklearn.qda import QDA as sk_QDA,1
"from sklearn.feature_selection import RFE, SelectPercentile, f_classif, SelectKBest, SelectFwe, VarianceThreshold",1
"from sklearn.decomposition import NMF,PCA",1
"from sklearn.cluster import KMeans ",1
"from sklearn import datasets, neighbors, linear_model ",1
"    from sklearn.manifold import TSNE",1
"from sklearn import mixture, cluster, metrics",1
"from sklearn.ensemble import RandomTreesEmbedding, ExtraTreesClassifier",1
from sklearn.crossvalidation import train_test_split,1
"    from sklearn.feature_extraction.image import reconstruct_from_patches_2d",1
"from sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier,RandomForestRegressor",1
"from sklearn import ensemble, feature_extraction, linear_model, preprocessing",1
from sklearn.feature_extraction import DictVectorizer as OldDictVectorizer,1
"from sklearn.cluster import MeanShift, AffinityPropagation, DBSCAN, estimate_bandwidth",1
"from sklearn import cross_validation  # machine learning & evaluation module",1
"from sklearn.cross_validation import cross_val_score,KFold",1
"from sklearn.feature_selection import (chi2,",1
"from sklearn.linear_model import Lasso, Ridge",1
from sklearn.linear_model.logistic import (,1
"from sklearn.pls import PLSCanonical, PLSRegression, CCA",1
from sklearn.base import TransformerMixin as _TransformerMixin,1
"from sklearn.svm import SVC, LinearSVC, SVR, LinearSVR",1
"    >>> from sklearn.cross_decomposition import PLSRegression",1
"#from sklearn import cross_validation, datasets, linear_model",1
"from sklearn.tree import DecisionTreeClassifier,DecisionTreeRegressor, tree, _tree, _utils,export_graphviz,export",1
"from sklearn.naive_bayes import MultinomialNB, BernoulliNB  ",1
"from sklearn import svm, pipeline, decomposition, cross_validation",1
"from sklearn.cluster import DBSCAN, SpectralClustering",1
"from sklearn.metrics import f1_score, precision_recall_fscore_support, classification_report",1
"from sklearn.feature_extraction.text import TfidfTransformer                 ",1
"from sklearn.feature_selection import SelectKBest, SelectPercentile, VarianceThreshold",1
"from sklearn import svm, naive_bayes, ensemble",1
"from sklearn import datasets, svm, metrics",1
"from sklearn_extensions.kernel_sgd.kernel_sgd import GaussianKernel, KernelSGD, HingeLoss",1
"from sklearn.svm import NuSVR",1
"        from sklearn.metrics import mean_absolute_error",1
"                from sklearn.cross_validation import StratifiedKFold,KFold",1
"	from sklearn.datasets import load_svmlight_file",1
"			from sklearn.cross_validation import KFold",1
#from sklearn.preprocessing import MinMaxScaler,1
"from sklearn.linear_model import LinearRegression, LogisticRegression, Ridge, Lasso",1
from sklearn.feature_extraction import image as img_feature_extraction,1
"	from sklearn.neighbors import NearestNeighbors",1
"from sklearn.metrics import silhouette_score as Sil",1
"from sklearn.ensemble import (AdaBoostClassifier, ",1
from sklearn.preprocessing.data import KernelCenterer,1
"from sklearn.metrics import make_scorer, mean_squared_error as error_function",1
from sklearn.linear_model import RidgeClassifierCV,1
"    from sklearn.datasets.samples_generator import make_blobs",1
"        >>> from sklearn.manifold import Isomap",1
"from sklearn.cluster.hierarchical import AgglomerativeClustering, FeatureAgglomeration",1
from sklearn.cluster.k_means_ import MiniBatchKMeans,1
from sklearn.preprocessing import OneHotEncoder as Sparse,1
"from sklearn.metrics import log_loss, roc_auc_score",1
"            from sklearn.decomposition import RandomizedPCA",1
"    >>> from sklearn.neighbors import RadiusNeighborsRegressor",1
"from sklearn.decomposition import RandomizedPCA, SparsePCA, TruncatedSVD, FactorAnalysis",1
"from sklearn.kernel_approximation import SkewedChi2Sampler, RBFSampler, AdditiveChi2Sampler, Nystroem",1
"from sklearn.metrics import accuracy_score, average_precision_score, pairwise",1
"from sklearn.multiclass import _ovr_decision_function, _predict_binary",1
"    from sklearn.datasets.samples_generator import (make_classification, )",1
"    # from sklearn import svm",1
"from sklearn.datasets import load_svmlight_file, fetch_mldata",1
"from sklearn.feature_selection import (VarianceThreshold,",1
from sklearn.ensemble import RandomForestClassifier  as rand_forest,1
"    from sklearn.datasets.samples_generator import make_regression",1
from sklearn_extensions.kernel_regression.kr import KernelRegression,1
"from sklearn import metrics, ensemble",1
from sklearn.cluster import KMeans # FIXME CAPITALIZATION,1
"from sklearn import manifold, datasets, decomposition, ensemble",1
"    from sklearn import manifold, datasets",1
"from sklearn import preprocessing, datasets",1
"from sklearn.linear_model import SGDClassifier, LogisticRegression,\",1
#from sklearn.metrics.metrics import accuracy_score,1
"        from sklearn.cross_validation import StratifiedKFold  # @UnresolvedImport",1
"        from sklearn.cross_validation import KFold  # @UnresolvedImport",1
from sklearn.kernel_ridge import KernelRidge as kr,1
# from sklearn.ensemble import GradientBoostingRegressor as Model,1
from sklearn.ensemble import RandomForestRegressor as Model,1
from sklearn.preprocessing import (,1
from sklearn.cross_decomposition import PLSCanonical,1
"from sklearn import linear_model, naive_bayes",1
"    from sklearn.feature_extraction import FeatureHasher",1
"from sklearn.linear_model import LogisticRegression, Ridge, SGDRegressor,\",1
"from sklearn.utils.extmath import logistic_sigmoid, safe_sparse_dot",1
"from sklearn.neighbors import KNeighborsClassifier   ",1
"from sklearn.utils import check_random_state, check_arrays, column_or_1d",1
#     from sklearn.svm import SVC,1
"	from sklearn.metrics import precision_recall_curve",1
"from sklearn.utils.testing import assert_raises, assert_array_equal,\",1
"from sklearn.feature_selection import SelectKBest, SelectPercentile, chi2",1
from sklearn.externals.six import StringIO;,1
"from sklearn.cluster import MiniBatchKMeans, Ward, MeanShift, SpectralClustering, AffinityPropagation, DBSCAN",1
"from sklearn.linear_model import SGDClassifier, PassiveAggressiveClassifier",1
"from sklearn.cross_validation import ShuffleSplit",1
"from sklearn.metrics import roc_auc_score, roc_curve, precision_recall_curve, average_precision_score",1
"from sklearn.metrics import average_precision_score, precision_recall_curve",1
##from sklearn import hmm,1
"from sklearn.metrics import precision_score, confusion_matrix",1
"from sklearn.ensemble import RandomForestRegressor ",1
"from sklearn.metrics import silhouette_samples, silhouette_score, adjusted_rand_score",1
from sklearn import  metrics as skm,1
"    from sklearn.linear_model import LinearRegression as OLS",1
from sklearn.metrix import confusion_matrix,1
"from sklearn.utils import check_random_state, gen_batches, check_array",1
"		from sklearn.cluster import MiniBatchKMeans as MBK",1
"from sklearn.grid_search import GridSearchCV, IterGrid",1
"from sklearn.datasets.samples_generator import make_blobs ",1
"from sklearn.neighbors import BallTree, DistanceMetric",1
"from sklearn.svm import SVC,LinearSVC,NuSVC",1
# from sklearn.metrics import average_precision_score,1
from sklearn.linear_model import Perceptron as pla,1
# from sklearn.decomposition import TruncatedSVD,1
"    from sklearn.datasets import load_svmlight_file",1
"from sklearn.cluster import MeanShift, ",1
"from sklearn.metrics import mean_squared_error, roc_auc_score, roc_curve, accuracy_score",1
"from sklearn import datasets, neighbors, linear_model, svm",1
"from sklearn.base import (BaseEstimator, ClassifierMixin, TransformerMixin,",1
"		from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier",1
"from sklearn.utils.testing import assert_equal, set_random_state",1
from sklearn.metrics.ranking import auc,1
"    from sklearn.metrics import classification",1
# from sklearn.preprocessing import normalize,1
"from sklearn import ensemble, tree, metrics, cross_validation",1
"    from sklearn_theano.feature_extraction.caffe.vgg import create_theano_expressions",1
"            from sklearn.mixture import GMM",1
"from sklearn.metrics import mean_absolute_error, make_scorer",1
"    from sklearn.metrics.metrics import mean_squared_error",1
"        >>> from sklearn.ensemble import AdaBoostClassifier",1
"    >>> from sklearn.datasets.mldata import fetch_mldata",1
from sklearn.preprocessing import MinMaxScaler as MMS,1
"from sklearn.cross_validation import train_test_split, cross_val_score, KFold",1
"from sklearn.metrics import classification_report,precision_score,recall_score,f1_score",1
from sklearn import grid_search as gs,1
"from sklearn.ensemble import GradientBoostingClassifier,ExtraTreesClassifier",1
"    >>> from sklearn.cross_decomposition import PLSCanonical",1
"#from sklearn import cross_validation as skcv ",1
"from sklearn import cross_validation, datasets, linear_model, grid_search",1
"	# # from sklearn.cluster import AffinityPropagation as AP",1
from sklearn_evaluation.util import _grid_scores_from_dicts,1
"from sklearn.grid_search import GridSearchCV  ",1
"	from sklearn.metrics.pairwise import cosine_similarity",1
"from sklearn import svm, grid_search, cross_validation, preprocessing",1
#from sklearn_Agglomerative import *,1
from sklearn import svm  # NOTE: needs version 0.13+ for svm iter limits,1
"from sklearn import linear_model, preprocessing, svm, neighbors",1
"from sklearn import preprocessing  ",1
from sklearn.preprocessing import StandardScaler as SS,1
"                        from sklearn.cross_validation import LeaveOneLabelOut",1
"from sklearn.preprocessing import RobustScaler, StandardScaler",1
"from sklearn.datasets import make_moons, make_classification",1
from sklearn.metrics.pairwise import additive_chi2_kernel,1
#                from sklearn import mixture,1
##from sklearn.decomposition import RandomizedPCA,1
from sklearn.cluster import AgglomerativeClustering #Agglomerative Clustering,1
"from sklearn.feature_selection import SelectKBest,chi2",1
"        from sklearn import linear_model as linear_model",1
"#from sklearn.preprocessing import normalize",1
from sklearn.datasets import make_sparse_uncorrelated,1
"from sklearn.metrics import accuracy_score, auc_score, average_precision_score, f1_score, hinge_loss, matthews_corrcoef, precision_score, recall_score, zero_one_loss",1
"from sklearn import svm, metrics, cross_validation, grid_search",1
from sklearn.preprocessing import robust_scale,1
"from sklearn.metrics.cluster import homogeneity_score, completeness_score",1
"from sklearn.metrics import pairwise_distances, confusion_matrix",1
"from sklearn.linear_model.logistic import LogisticRegression",1
# >>> from sklearn.cluster import KMeans,1
from sklearn.linear_model.cd_fast import enet_coordinate_descent,1
from sklearn.cluster import KMeans #K-Means clustering,1
from sklearn.cross_validation import LabelKFold #K-fold iterator variant with non-overlapping labels.,1
from sklearn.decomposition import RandomizedPCA #Principal component analysis PCA) using randomized SVD,1
from sklearn.decomposition import LatentDirichletAllocation #Latent Dirichlet Allocation with online variational Bayes algorithm,1
from sklearn.linear_model import LarsCV #Cross-validated Least Angle Regression model,1
from sklearn.metrics import average_precision_score #Compute average precision AP) from prediction scores,1
from sklearn.neighbors import RadiusNeighborsClassifier #Classifier implementing a vote among neighbors within a given radius,1
from sklearn.preprocessing import MultiLabelBinarizer #Transform between iterable of iterables and a multilabel format,1
from sklearn.svm import OneClassSVM #Unsupervised Outlier Detection.,1
from sklearn.naive_bayes import GaussianNB as scikitGNB,1
"                    from sklearn.metrics.scorer import _deprecate_loss_and_score_funcs",1
"from sklearn.dummy import DummyClassifier",1
"from sklearn.metrics import r2_score, roc_auc_score, roc_curve",1
"            from sklearn import linear_model ",1
from sklearn.utils.testing import \,1
"            from sklearn.decomposition import PCA",1
"from sklearn import (metrics, cross_validation, linear_model, preprocessing)",1
"    from sklearn import neural_network",1
"from sklearn.svm import SVR,NuSVR",1
"from sklearn import cross_validation, svm, grid_search, \",1
from sklearn.pipeline import *,1
"from sklearn.linear_model import Ridge, BayesianRidge",1
"	from sklearn.svm import *",1
"    from sklearn.datasets import make_friedman2",1
"from sklearn.preprocessing import MinMaxScaler, Normalizer, StandardScaler",1
"from sklearn import neural_network, linear_model",1
"    >>> from sklearn.linear_model.logistic import LogisticRegression",1
"from sklearn.cross_validation import KFold,cross_val_score",1
"from sklearn.feature_selection import f_classif",1
"from sklearn.linear_model import Lasso",1
#from sklearn.neighbors import KNeighborsClassifier,1
"    from sklearn.externals.joblib import Parallel, delayed, cpu_count",1
"#from sklearn.feature_extraction.text import CountVectorizer ",1
"            from sklearn.cross_validation import KFold",1
from sklearn.metrics.pairwise import cosine_similarity as cos_sim,1
from sklearn.datasets import load_lfw_pairs,1
"  from sklearn.metrics import classification_report, confusion_matrix",1
"from sklearn.feature_selection import SelectPercentile, chi2, f_classif",1
"        #from sklearn.linear_model import LogisticRegression as LR",1
from sklearn.cluster import spectral_clustering as SC,1
"from sklearn.neighbors import kneighbors_graph ",1
"                from sklearn.metrics import accuracy_score",1
from sklearn.datasets import load_iris # iris classification,1
"from sklearn_extensions.fuzzy_kmeans.kmeans import KMeans, KMedians, FuzzyKMeans",1
"from sklearn.tree._tree import DTYPE, DOUBLE",1
"from sklearn.linear_model import SGDClassifier, RidgeClassifier, Perceptron, PassiveAggressiveClassifier",1
"        # from sklearn.naive_bayes import MultinomialNB",1
from sklearn.svm  import LinearSVC,1
"    from sklearn.svm import LinearSVC, NuSVC",1
"from sklearn_evaluation.metrics import (precision_at, labels_at_percent,",1
"from sklearn.base import BaseEstimator, MetaEstimatorMixin, is_classifier, clone",1
"from sklearn.preprocessing import Imputer, MinMaxScaler",1
from sklearn.datasets.base import get_data_home,1
"from sklearn import svm, datasets, metrics, cross_validation",1
from sklearn.cross_validation import _fit_and_score,1
from sklearn_evaluation.metrics import __threshold_at as threshold_at,1
"	from sklearn.ensemble import *",1
"from sklearn import preprocessing, tree",1
from sklearn.preprocessing.data import _transform_selected,1
"    from sklearn.svm import SVC as _SVC",1
"    from sklearn.naive_bayes import GaussianNB  # noqa",1
"    from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier  # noqa",1
"from sklearn.utils import check_random_state, as_float_array, check_array",1
#from sklearn.utils import atleast2d_or_csr,1
"from sklearn.utils.extmath import (fast_logdet, safe_sparse_dot, randomized_svd)#,",1
from sklearn.kernel_approximation import Nystroem as _Nystroem,1
"from sklearn.utils import check_arrays, check_random_state",1
"from sklearn.metrics import accuracy_score  ",1
"            from sklearn.gaussian_process import GaussianProcess",1
from sklearn.gaussian_process.gaussian_process import l1_cross_distances,1
from sklearn.svm.classes import LinearSVC,1
from sklearn.metrics.metrics import hamming_loss,1
"from sklearn import metrics, base, neighbors",1
"            from sklearn.svm import SVC, SVR, LinearSVC",1
"from sklearn.ensemble.weight_boosting import BaseWeightBoosting, ClassifierMixin, RegressorMixin, DecisionTreeRegressor",1
#from sklearn.ensemble import GradientBoostingRegressor,1
from sklearn.decomposition import PCA as SKPCA,1
"                      'scikit-learn'    : 'from sklearn.feature_extraction  import DictVectorizer' }",1
from sklearn.utils.fixes import expit             # logistic function,1
"    from sklearn import svm",1
"    from sklearn.metrics import classification_report ",1
"from sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier",1
"                    from sklearn import metrics",1
from sklearn.metrics import confusion_matrix as sklearn_confusion_matrix,1
"from sklearn.svm import SVC, l1_min_c",1
"from sklearn.feature_selection import RFECV, SelectKBest",1
"    from sklearn.mixture import GMM",1
"from sklearn.base import BaseEstimator, _pprint",1
"            #from sklearn.svm import LinearSVC",1
"from sklearn.cluster import k_means, mean_shift",1
"from sklearn.linear_model import ElasticNet, Lasso, LinearRegression, \",1
"  from sklearn.feature_extraction.text import TfidfTransformer",1
"    from sklearn.preprocessing import (FunctionTransformer as",1
from sklearn.manifold import *,1
# from sklearn.neighbors import NearestCentroid,1
from sklearn.svm import LinearSVC as SVC,1
"from sklearn.linear_model import LogisticRegression ",1
"from sklearn.cluster.k_means_ import MiniBatchKMeans, KMeans",1
"    from sklearn.datasets import load_files",1
"	from sklearn.metrics import make_scorer, jaccard_similarity_score",1
"    from sklearn.metrics      import r2_score",1
"	from sklearn.preprocessing import PolynomialFeatures",1
"from sklearn import svm, feature_extraction",1
"    from sklearn.utils.arpack import eigsh",1
"from sklearn.decomposition import PCA,NMF",1
"from sklearn.metrics import precision_recall_curve,precision_score,recall_score, roc_auc_score,roc_curve",1
#from sklearn.neighbors.nearest_centroid import NearestCentroid,1
from sklearn.model_selection import GridSearchCV,1
"from sklearn.ensemble import GradientBoostingClassifier,RandomForestClassifier,AdaBoostClassifier",1
"from sklearn.cross_validation import ShuffleSplit, StratifiedShuffleSplit, StratifiedKFold",1
"from sklearn.linear_model import LogisticRegression, RidgeClassifier",1
"from sklearn.metrics import explained_variance_score, mean_squared_error",1
from sklearn.mixture import log_multivariate_normal_density,1
"            from sklearn.cluster import AffinityPropagation",1
"        from sklearn.decomposition import PCA as skPCA",1
"from sklearn.linear_model import SGDClassifier, LogisticRegression, Perceptron, RidgeClassifier",1
"from sklearn.naive_bayes import GaussianNB ",1
"from sklearn.metrics import (classification_report, accuracy_score,",1
"        from sklearn.linear_model import ARDRegression",1
"        from sklearn.linear_model import BayesianRidge",1
"from sklearn.base import ClassifierMixin, BaseEstimator, clone",1
from sklearn.mixture.gmm import _log_multivariate_normal_density_full,1
#from sklearn.linear_model import SGDRegressor,1
"		from sklearn import svm as SVM",1
"    from sklearn.model_selection._validation import _fit_and_score",1
"from sklearn import svm,neighbors,cross_validation,ensemble;",1
from sklearn.datasets import make_s_curve,1
"from sklearn.base import TransformerMixin, BaseEstimator, RegressorMixin",1
"    from sklearn.ensemble.gradient_boosting import GradientBoostingRegressor",1
from sklearn.mixture import GMM as SKGMM,1
"from sklearn import ensemble, linear_model, tree",1
from sklearn import mixture as mix  # GMM,1
"            from sklearn.datasets import load_iris",1
"#from sklearn import tree",1
"#from sklearn.ensemble import AdaBoostClassifier",1
"from sklearn.qda import QDA",1
# # from sklearn.ensemble import RandomForestRegressor,1
"from sklearn.preprocessing import LabelEncoder, LabelBinarizer, StandardScaler,\",1
"from sklearn.cross_validation import check_cv, _safe_split",1
"from sklearn.metrics import precision_score, f1_score, recall_score",1
"from sklearn.metrics.scorer import _BaseScorer",1
from sklearn.utils.multiclass import check_classification_targets,1
"		from sklearn import  ensemble, preprocessing",1
"from sklearn import feature_extraction, preprocessing",1
# from sklearn import LinearRegression # we're going to use multi variate linear regression,1
"from sklearn.utils import atleast2d_or_csr, check_random_state, column_or_1d",1
"from sklearn.utils.fixes import bincount, unique",1
"  from sklearn.decomposition import PCA  # Late import; sklearn is optional",1
"            from sklearn.ensemble import RandomForestRegressor as RFR",1
"from sklearn import manifold, decomposition  # , datasets",1
"    from sklearn.metrics.pairwise import pairwise_distances as pwdist",1
from sklearn2pmml import sklearn2pmml,1
from sklearn.linear_model import LogisticRegression as scikitLR,1
from sklearn.svm import SVC as scikitSVC,1
"from sklearn.preprocessing import Scaler, Normalizer, Binarizer",1
"from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer",1
"from sklearn import svm, linear_model, naive_bayes, tree, grid_search, metrics, preprocessing, cross_validation",1
from sklearn.feature_extraction.text import TfidfVectorizer as tfidf,1
from sklearn.svm import SVC as SVC,1
"    from sklearn.ensemble import RandomForestClassifier, RandomForestRegressor",1
"from sklearn.covariance import graph_lasso, GraphLasso, GraphLassoCV, \",1
from sklearn.naive_bayes  import GaussianNB,1
"    from sklearn.feature_selection import RFE",1
from sklearn.neighbors.graph import kneighbors_graph,1
"    from sklearn.datasets.samples_generator import make_swiss_roll",1
"from sklearn.metrics import f1_score, confusion_matrix, roc_auc_score",1
# from sklearn.utils import check_consistent_length  # Not in 0.15.1,1
"from sklearn.manifold import isomap",1
"from sklearn.linear_model import Perceptron, SGDClassifier",1
"from sklearn import metrics, preprocessing, cross_validation",1
"from sklearn import manifold, datasets, decomposition, lda",1
from sklearn.metrics import v_measure_score,1
"    from sklearn.externals import joblib #joblib is sklearn's pickle",1
"from sklearn.decomposition import SparsePCA, MiniBatchSparsePCA",1
"from sklearn.covariance import LedoitWolf, OAS, ShrunkCovariance, \",1
from sklearn.linear_model import Lars #Least Angle Regression model a from k from a.,1
"	from sklearn.cross_validation import cross_val_score",1
"from sklearn.base import clone, ClassifierMixin, BaseEstimator",1
"from sklearn.tree import DecisionTreeRegressor,DecisionTreeClassifier",1
from sklearn.cluster import AffinityPropagation #Perform Affinity Propagation Clustering of data.,1
from sklearn.cluster import Birch #Implements the Birch clustering algorithm.,1
from sklearn.cluster import DBSCAN #Perform DBSCAN clustering from vector array or distance matrix.,1
from sklearn.decomposition import MiniBatchSparsePCA #Mini-batch Sparse Principal Components Analysis,1
from sklearn.feature_selection import f_regression #Univariate linear regression tests.,1
from sklearn.grid_search import GridSearchCV #Exhaustive search over specified parameter values for an estimator.,1
from sklearn.linear_model import BayesianRidge #Bayesian ridge regression,1
from sklearn.linear_model import ElasticNet #Linear regression with combined L1 and L2 priors as regularizer.,1
"    from sklearn import svm, datasets",1
from sklearn.linear_model import MultiTaskLassoCV #Multi-task L1/L2 Lasso with built-in cross-validation.,1
from sklearn.linear_model import RandomizedLogisticRegression #Randomized Logistic Regression,1
"from sklearn.linear_model import SGDClassifier #Linear classifiers SVM, logistic regression, a from o from ) with SGD training.",1
from sklearn.manifold import SpectralEmbedding #Spectral embedding for non-linear dimensionality reduction.,1
from sklearn.metrics import confusion_matrix #Compute confusion matrix to evaluate the accuracy of a classification,1
from sklearn.metrics import hamming_loss #Compute the average Hamming loss.,1
from sklearn.metrics.pairwise import rbf_kernel #Compute the rbf gaussian) kernel between X and Y:,1
from sklearn.neighbors import NearestNeighbors #Unsupervised learner for implementing neighbor searches.,1
from sklearn.preprocessing import FunctionTransformer #Constructs a transformer from an arbitrary callable.,1
"from sklearn.tree import export_graphviz #Export a decision tree in DOT format from ",1
"    #ifrom sklearn.datasets import make_gaussian_quantiles",1
from sklearn.ensemble.forest import _generate_sample_indices,1
"#from sklearn.feature_selection import RFECV ; ",1
"  #from sklearn.ensemble import RandomForestRegressor",1
"from sklearn import linear_model, mixture",1
from sklearn_theano.feature_extraction.overfeat import get_overfeat_class_label,1
"from sklearn.preprocessing import PolynomialFeatures, Imputer",1
"    from sklearn.naive_bayes import BernoulliNB, MultinomialNB, GaussianNB",1
"    from sklearn.feature_extraction.text import CountVectorizer, HashingVectorizer, TfidfVectorizer",1
from sklearn_helper import RandomForestHelper,1
"from sklearn.metrics.classification import accuracy_score, classification_report",1
"from sklearn.metrics import confusion_matrix,f1_score",1
"            from sklearn.cross_validation import StratifiedKFold",1
from sklearn.utils import warnings,1
from sklearn.neighbors import KNeighborsClassifier as knn,1
"        from sklearn.grid_search import ParameterGrid",1
from sklearn.svm.bounds import l1_min_c,1
"            from sklearn.cross_validation import StratifiedKFold",1
"from sklearn.preprocessing import StandardScaler, LabelEncoder, \",1
"from sklearn import cross_validation, metrics, preprocessing",1
"from sklearn.cross_validation import cross_val_score, LeaveOneOut",1
from sklearn_theano.base import CaffePool,1
"    from sklearn.linear_model import (",1
"from sklearn.base  import BaseEstimator, ClassifierMixin",1
"from sklearn.preprocessing import OneHotEncoder,MaxAbsScaler,StandardScaler,MinMaxScaler",1
"from sklearn.linear_model import PassiveAggressiveClassifier, SGDClassifier",1
#    from sklearn.mixture import GMM,1
"#from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score, precision_recall_curve",1
"from sklearn.feature_selection import SelectFromModel",1
# from sklearn.metrics import r2_score,1
"from sklearn.metrics import roc_auc_score, f1_score, log_loss, make_scorer",1
from sklearn.ensemble.forest import _parallel_predict_proba,1
"from sklearn.utils.validation import check_X_y, check_array",1
"        from sklearn.preprocessing import RobustScaler",1
from sklearn.datasets.base import get_data_home as _get_data_home,1
"            from sklearn.cluster import KMeans, MiniBatchKMeans",1
"    #from sklearn.ensemble import RandomForestClassifier",1
from sklearn_estimator_suite import ClassificationSuite,1
"from sklearn import pipeline, svm",1
from sklearn.feature_extraction.stop_words import ENGLISH_STOP_WORDS as stop_words,1
"from sklearn.linear_model import LogisticRegression, LogisticRegressionCV",1
"from sklearn.svm import LinearSVR, SVR, SVC, LinearSVC",1
"from sklearn.metrics import silhouette_score, adjusted_mutual_info_score",1
"    from sklearn.feature_extraction.text import TfidfTransformer",1
"    from sklearn.ensemble import GradientBoostingClassifier as GBC",1
"from sklearn_evaluation.metrics import (precision_at, labels_at,",1
"    from sklearn import datasets",1
"from sklearn.grid_search import ParameterGrid, _check_param_grid",1
"from sklearn.datasets import make_moons, make_gaussian_quantiles",1
"from sklearn import ensemble ",1
#from sklearn.utils.testing import assert_array_almost_equal,1
"from sklearn.neighbors import KNeighborsClassifier, RadiusNeighborsClassifier",1
"from sklearn import datasets as ds ",1
"from sklearn import linear_model, svm, utils",1
from sklearn import neighbors as nn,1
"    from sklearn.metrics.pairwise import rbf_kernel, polynomial_kernel",1
from sklearn.base import clone as _clone_estimator,1
"from sklearn import linear_model, neighbors, svm",1
"    from sklearn import cross_validation as cv",1
"    from sklearn.svm import LinearSVR",1
from sklearn.feature_selection import SelectFdr,1
from sklearn.feature_selection import SelectFpr,1
"from sklearn.metrics import classification_report, f1_score, accuracy_score, confusion_matrix",1
"from sklearn import manifold, svm, preprocessing",1
"    from sklearn.linear_model import Ridge, RidgeCV",1
"from sklearn import linear_model as lm  # LogisticRegression, SGDClassifier",1
"from sklearn import neighbors as ngb  # KNeighborsClassifier, KNeighborsRegressor",1
"#from sklearn.multiclass import OutputCodeClassifier",1
from sklearn.ensemble import gradient_boosting as gb,1
"    from sklearn.metrics import matthews_corrcoef",1
"from sklearn.lda import LDA",1
from sklearn.ensemble import RandomForestClassifier # random forest,1
# from sklearn.mixture import GMM,1
from sklearn.neighbors import KNeighborsRegressor as  kreg,1
"from sklearn.preprocessing import StandardScaler, MaxAbsScaler",1
"from sklearn.preprocessing import Normalizer, Imputer",1
"    from sklearn.covariance import EllipticEnvelope",1
"from sklearn.multiclass import _fit_binary, check_is_fitted",1
"from sklearn.linear_model import RidgeCV, LassoCV",1
"from sklearn.metrics.ranking import auc, roc_curve",1
"    from sklearn.metrics import mutual_info_score",1
#from sklearn.datasets import load_digits,1
"from sklearn.linear_model import LinearRegression, Ridge, LogisticRegression",1
"from sklearn.manifold import MDS, TSNE",1
"from sklearnLazyflowClassifier import SklearnLazyflowClassifier, SklearnLazyflowClassifierFactory",1
from sklearn.model_selection import cross_val_score,1
# from sklearn.metrics import explained_variance_score as score,1
"from sklearn.tree.tree import DecisionTreeClassifier, DecisionTreeRegressor",1
"from sklearn.svm import SVC    # ""Support Vector Classifier""",1
"			from sklearn.cross_validation import ShuffleSplit",1
from sklearn.cluster import AffinityPropagation ### installation: pip install scikit-learn,1
"from sklearn import feature_extraction, pipeline",1
# from sklearn.manifold import *,1
"from sklearn import neighbors, preprocessing",1
"from sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor, GradientBoostingRegressor, AdaBoostRegressor",1
"      from sklearn.decomposition import TruncatedSVD",1
from sklearn.externals.six.moves import cPickle,1
"from sklearn import grid_search, decomposition, svm, manifold",1
from sklearn.preprocessing.data import normalize,1
from sklearn.preprocessing.data import scale,1
from sklearn.preprocessing.data import PolynomialFeatures,1
"from sklearn.metrics import classification_report, precision_recall_curve, average_precision_score",1
"from sklearn.ensemble.gradient_boosting import GradientBoostingClassifier, GradientBoostingRegressor",1
"	# from sklearn.cross_validation import train_test_split",1
from sklearn.linear_model import LassoLarsIC #Lasso model fit with Lars using BIC or AIC for model selection,1
"	from sklearn.ensemble import RandomForestClassifier	",1
"	from sklearn.cluster import DBSCAN, AffinityPropagation as AP, MeanShift as MS",1
"# from sklearn.svm import SVC, LinearSVC",1
"from sklearn import manifold, preprocessing",1
#         from sklearn.metrics import mean_squared_error,1
"    from sklearn.grid_search import BaseSearchCV",1
from sklearn import naive_bayes # import GaussianNB,1
#from sklearn.cluster import KMeans # Disa - Not necessary for OCP,1
from sklearn.datasets import load_linnerud,1
from sklearn.decomposition.factor_analysis import FactorAnalysis,1
"from sklearn.base import TransformerMixin, BaseEstimator, clone",1
from sklearn.cross_validation import StratifiedKFold #Stratified K-Folds cross validation iterator,1
from sklearn.ensemble import GradientBoostingRegressor #Gradient Boosting for regression.,1
from sklearn_classifier import SklearnClassifier,1
from sklearn.linear_model import MultiTaskElasticNetCV #Multi-task L1/L2 ElasticNet with built-in cross-validation.,1
from sklearn.linear_model import orthogonal_mp #Orthogonal Matching Pursuit OMP),1
from sklearn.metrics import precision_recall_curve #Compute precision-recall pairs for different probability thresholds,1
from sklearn.metrics import completeness_score #Completeness metric of a cluster labeling given a ground truth,1
from sklearn.metrics import silhouette_samples #Compute the Silhouette Coefficient for each sample.,1
from sklearn.metrics.pairwise import kernel_metrics #Valid metrics for pairwise_kernels,1
from sklearn.neighbors import LSHForest #Performs approximate nearest neighbor search using LSH forest.,1
from sklearn.svm import LinearSVC #Linear Support Vector Classification.,1
from sklearn.tree import ExtraTreeClassifier #An extremely randomized tree classifier.,1
"from sklearn.cluster import MeanShift, estimate_bandwidth, DBSCAN",1
from sklearn.neighbors import KNeighborsClassifier as scikitKNN,1
"from sklearn.ensemble import RandomForestRegressor, RandomForestClassifier ;",1
"from sklearn.cluster import KMeans, AffinityPropagation, DBSCAN, AgglomerativeClustering, MeanShift, MiniBatchKMeans, estimate_bandwidth",1
"    from sklearn.datasets import fetch_olivetti_faces",1
"from sklearn.covariance import graph_lasso, empirical_covariance",1
"from sklearn.externals.joblib import load",1
"from sklearn.utils import safe_asarray, atleast2d_or_csr, check_arrays",1
"		from sklearn.linear_model import Perceptron",1
"from sklearn.linear_model import LinearRegression, RidgeCV, LassoCV",1
"from sklearn import svm, neighbors, tree",1
"    from sklearn.preprocessing import LabelEncoder",1
from sklearn.ensemble       import AdaBoostClassifier,1
from sklearn_pmml.convert.utils import pmml_row,1
"from sklearn.externals.joblib.parallel import Parallel, delayed",1
from sklearn import linear_model;,1
"from sklearn.linear_model import SGDClassifier,Perceptron,LogisticRegression,LinearRegression",1
from sklearn_mmadsen import ParameterizedDNNClassifier,1
from sklearn_theano.datasets import fetch_mnist_generated,1
"from sklearn.preprocessing import LabelBinarizer, label_binarize",1
from sklearn.utils.sparsefuncs import count_nonzero,1
"    from sklearn.datasets import make_moons",1
from sklearn.grid_search             import GridSearchCV,1
"from sklearn.preprocessing import LabelBinarizer, MinMaxScaler",1
"from sklearn.preprocessing import LabelEncoder, MinMaxScaler",1
"from sklearn.linear_model import SGDClassifier,LogisticRegression",1
"#from sklearn_pandas import DataFrameMapper, cross_val_score",1
"from sklearn.decomposition import PCA, KernelPCA, TruncatedSVD",1
"from sklearn import cross_validation, datasets, decomposition, svm",1
"from sklearn.metrics import f1_score, make_scorer, fbeta_score, accuracy_score",1
"from sklearn.linear_model import LogisticRegression, BayesianRidge, LinearRegression",1
"    from sklearn.cluster import MeanShift",1
"    from sklearn import cluster, datasets",1
from sklearn.svm import NuSVC #Nu-Support Vector Classification.,1
"from sklearn.preprocessing import scale",1
"    from sklearn.decomposition import NMF",1
"from sklearn.metrics import precision_score ",1
#from sklearn.datasets import load_svmlight_file,1
"from sklearn.cluster import KMeans, MeanShift, DBSCAN, estimate_bandwidth",1
from sklearn.semi_supervised import LabelSpreading as LabelSpreadingSKLearn,1
"    #from sklearn.metrics import confusion_matrix",1
"    from sklearn.naive_bayes import BernoulliNB,GaussianNB",1
"    from sklearn.datasets import dump_svmlight_file",1
"        from sklearn.model_selection import check_cv as sklearn_check_cv",1
"    from sklearn.mixture import DPGMM",1
"	from sklearn.decomposition import TruncatedSVD ",1
from sklearn.cross_decomposition import PLSSVD #Partial Least Square SVD,1
"from sklearn.ensemble import RandomForestClassifier,RandomForestRegressor",1
"from sklearn.metrics import explained_variance_score, r2_score, mean_squared_error",1
"from sklearn.metrics import recall_score, precision_score, f1_score",1
"	from sklearn.decomposition import DictionaryLearning",1
from sklearn.neighbors import KNeighborsClassifier as KNNC,1
"    # from sklearn.externals import joblib #joblib is sklearn's pickle",1
"from sklearn.linear_model import LinearRegression, BayesianRidge",1
"                        from sklearn.cross_validation import LeavePLabelOut",1
from sklearn.ensemble import BaggingRegressor as SK_BaggingRegressor,1
from sklearn.preprocessing import LabelBinarizer  # @UnresolvedImport,1
from sklearn import  grid_search,1
"from sklearn.ensemble import ExtraTreesClassifier ",1
"from sklearn.svm import SVC, SVR, LinearSVC",1
from sklearn.grid_search import RandomizedSearchCV #Randomized search on hyper parameters.,1
"    from sklearn.ensemble import RandomForestClassifier",1
"from sklearn.preprocessing import StandardScaler, scale",1
# from sklearn.preprocessing import scale,1
"    from sklearn.covariance import GraphLassoCV",1
"from sklearn import ensemble, cross_validation, neighbors, kernel_ridge",1
from sklearn.cluster import MiniBatchKMeans #Mini-Batch K-Means clustering,1
from sklearn.cluster import SpectralClustering #Apply clustering to a projection to the normalized laplacian.,1
from sklearn.covariance import EmpiricalCovariance #Maximum likelihood covariance estimator,1
from sklearn.covariance import oas #Estimate covariance with the Oracle Approximating Shrinkage algorithm.,1
from sklearn.cross_validation import LeaveOneOut #Leave-One-Out cross validation iterator.,1
from sklearn.cross_validation import permutation_test_score #Evaluate the significance of a cross-validated score with permutations,1
from sklearn.decomposition import ProjectedGradientNMF #Non-Negative Matrix Factorization NMF),1
from sklearn.decomposition import dict_learning_online #Solves a dictionary learning matrix factorization problem online.,1
"from sklearn.cluster import MeanShift, estimate_bandwidth",1
from sklearn.kernel_ridge import KernelRidge #Kernel ridge regression.,1
from sklearn.linear_model import LassoCV #Lasso linear model with iterative fitting along a regularization path,1
from sklearn.linear_model import LinearRegression #Ordinary least squares Linear Regression.,1
from sklearn.linear_model import OrthogonalMatchingPursuitCV #Cross-validated Orthogonal Matching Pursuit model OMP),1
from sklearn.linear_model import Ridge #Linear least squares with l2 regularization.,1
from sklearn.linear_model import RidgeClassifier #Classifier using Ridge regression.,1
from sklearn.linear_model import lasso_path #Compute Lasso path with coordinate descent,1
from sklearn.metrics import fbeta_score #Compute the F-beta score,1
from sklearn.metrics import matthews_corrcoef #Compute the Matthews correlation coefficient MCC) for binary classes,1
from sklearn.metrics import recall_score #Compute the recall,1
from sklearn.metrics import r2_score #R^2 coefficient of determination) regression score function.,1
from sklearn.metrics import silhouette_score #Compute the mean Silhouette Coefficient of all samples.,1
from sklearn.naive_bayes import MultinomialNB #Naive Bayes classifier for multinomial models,1
"    from sklearn.metrics import zero_one_loss",1
from sklearn.preprocessing    import StandardScaler,1
from sklearn.svm              import SVC,1
"    from sklearn.svm import LinearSVC, SVR",1
"from sklearn.linear_model import SGDRegressor,TheilSenRegressor",1
from sklearn.grid_search import *,1
"from sklearn.utils import check_X_y, safe_sqr",1
"        from sklearn.covariance import EllipticEnvelope",1
"#from sklearn import datasets, neighbors, linear_model",1
"from sklearn.semi_supervised import LabelSpreading, LabelPropagation",1
"from sklearn.tree import DecisionTreeRegressor, DecisionTreeClassifier, _tree",1
"    from sklearn.feature_selection import SelectKBest, SelectPercentile, chi2, f_classif, f_regression, \",1
from sklearn.linear_model import lars_path,1
"from sklearn.feature_selection import SelectPercentile, f_classif, chi2, \",1
"from sklearn import datasets, linear_model, manifold",1
from sklearn.tree import DecisionTreeClassifier as DecisionTree,1
"from sklearn.metrics import * ",1
# from sklearn.metrics.cluster import adjusted_mutual_info_score,1
"from sklearn.metrics import roc_auc_score #(y_true, y_score, average='macro', sample_weight=None)",1
"from sklearn.discriminant_analysis import LinearDiscriminantAnalysis, QuadraticDiscriminantAnalysis",1
"from sklearn.ensemble import AdaBoostClassifier, BaggingClassifier, ExtraTreesClassifier, RandomForestClassifier, VotingClassifier ",1
"from sklearn.metrics import confusion_matrix, classification_report,\",1
"from sklearn.ensemble import BaseEnsemble, RandomTreesEmbedding",1
"        from sklearn.preprocessing import Imputer",1
"from sklearn.metrics import roc_auc_score, precision_score, recall_score",1
"from sklearn.linear_model import LassoLarsCV, RandomizedLasso",1
"from sklearn import cross_validation, neighbors",1
from sklearn.feature_extraction  import DictVectorizer,1
"from sklearn.metrics import make_scorer, SCORERS",1
"from sklearn.decomposition import FastICA, SparsePCA, DictionaryLearning",1
"from sklearn.ensemble import AdaBoostClassifier, GradientBoostingClassifier, RandomForestClassifier, ExtraTreesClassifier, RandomTreesEmbedding",1
"from sklearn.linear_model import Ridge, RidgeCV, Lasso, LassoLars, ElasticNet",1
#from sklearn.linear_model import SGDClassifier,1
"from sklearn.metrics import (precision_score, classification_report,",1
"from sklearn.feature_extraction.text import CountVectorizer, ENGLISH_STOP_WORDS",1
"from sklearn import cross_validation, ensemble, preprocessing, pipeline",1
"            from sklearn.model_selection import train_test_split",1
"    from sklearn import __version__",1
"    from sklearn.externals import joblib    ",1
"from sklearn.linear_model import SGDClassifier, LinearRegression, SGDRegressor",1
"from sklearn.ensemble import BaggingClassifier",1
"from sklearn.feature_selection import SelectFwe, SelectKBest, f_regression, chi2",1
"# from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer",1
from sklearn.naive_bayes import  MultinomialNB,1
"from sklearn.metrics import adjusted_mutual_info_score, adjusted_rand_score, v_measure_score",1
"from sklearn.metrics import silhouette_score, adjusted_mutual_info_score, silhouette_samples",1
"	from sklearn.base import BaseEstimator",1
from sklearn.manifold.t_sne import _gradient_descent,1
from sklearn.manifold.t_sne import TSNE,1
"from sklearn.feature_extraction import image",1
#from sklearn.neighbors import kneighbors_graph,1
#from sklearn.preprocessing import Scaler,1
"from sklearn.svm import SVC, LinearSVC",1
"from sklearn.ensemble.forest import ExtraTreesClassifier, RandomTreesEmbedding, BaseForest",1
# from sklearn.externals.six.moves import xrange,1
"from sklearn.cross_validation import cross_val_score, StratifiedKFold",1
from sklearn import neighbors as nebs,1
"from sklearn.metrics import precision_score, confusion_matrix, classification_report",1
"from sklearn_utils import ks, profit",1
"# from sklearn.utils.testing import assert_equal, assert_true",1
"from sklearn.feature_extraction.image import extract_patches_2d",1
"from sklearn.decomposition import TruncatedSVD, KernelPCA",1
">>> from sklearn.feature_extraction.text import TfidfTransformer",1
"from sklearn import neighbors, datasets, linear_model",1
"from sklearn.metrics import roc_auc_score as AUC, accuracy_score as accuracy, log_loss",1
from sklearn.datasets.svmlight_format import load_svmlight_files,1
"    # from sklearn.linear_model import SGDClassifier",1
"from sklearn.utils.testing import (assert_equal, assert_array_equal,",1
from sklearn_pmml.convert.random_forest import *,1
"from sklearn.model_selection import GridSearchCV, ShuffleSplit, KFold",1
"from sklearn_recommender import DLRecommender, ConvexFM, SoftImputer",1
"  from sklearn import svm, cross_validation",1
from sklearn_theano.feature_extraction import (,1
"from sklearn import cluster, linear_model, naive_bayes, svm",1
"from sklearn import neighbors, linear_model",1
"from sklearn.cluster import KMeans , MiniBatchKMeans",1
"    from sklearn.svm import LinearSVC, NuSVC",1
"from sklearn import mixture    ",1
"                from sklearn.mixture import GMM",1
"	from sklearn.naive_bayes import BernoulliNB",1
"from sklearn.metrics import confusion_matrix, accuracy_score, precision_recall_fscore_support",1
from sklearn.utils.testing import if_safe_multiprocessing_with_blas,1
"from sklearn.feature_selection import chi2, SelectKBest, f_classif",1
"from sklearn.ensemble import GradientBoostingClassifier, GradientBoostingRegressor, RandomForestRegressor, \",1
"from sklearn import tree, neighbors, svm, ensemble",1
"from sklearn import feature_extraction, ensemble",1
"from sklearn.tree import DecisionTreeClassifier , DecisionTreeRegressor",1
"    from sklearn.metrics import accuracy_score, log_loss, mean_squared_error",1
"from sklearn.linear_model import Ridge,MultiTaskLasso",1
from sklearn.externals import joblib as pkl,1
from sklearn import naive_bayes as nb,1
"from sklearn.metrics import roc_curve, auc, precision_recall_curve, average_precision_score",1
"  from sklearn.metrics import *",1
"from sklearn import cross_validation, preprocessing ; #normalizing data, creating kfold validation ",1
"from sklearn.metrics import roc_curve, auc, roc_auc_score, \",1
"from sklearn.metrics.metrics import f1_score, classification_report",1
"		from sklearn.linear_model import LogisticRegression",1
#from sklearn.linear_model import LinearRegression,1
"from sklearn_extensions.fuzzy_kmeans import KMedians, FuzzyKMeans, KMeans",1
"from sklearn.ensemble import BaggingClassifier, BaggingRegressor",1
from sklearn_extensions.kernel_regression import KernelRegression,1
"from sklearn.metrics.pairwise import cosine_distances, cosine_similarity",1
"#from sklearn import svm",1
"#from sklearn.metrics import confusion_matrix",1
# from sklearn.preprocessing import LabelBinarizer,1
# # from sklearn.cross_validation import cross_val_score,1
"from sklearn import cross_validation, linear_model, ensemble, svm",1
"        from sklearn.datasets import dump_svmlight_file  # @UnresolvedImport",1
from sklearn.ensemble import RandomForestClassifier #RF classifier from SKlearn,1
from sklearn.base import clone as sk_clone,1
"from sklearn.datasets import fetch_mldata",1
"  from sklearn import linear_model",1
"from sklearn.feature_selection import SelectKBest, chi2, VarianceThreshold",1
"from sklearn.feature_selection.univariate_selection import (_BaseFilter, _clean_nans)",1
from sklearn.metrics.pairwise import distance_metrics #Valid metrics for pairwise_distances.,1
from sklearn.preprocessing import StandardScaler #Standardize features by removing the mean and scaling to unit variance,1
from sklearn.tree import ExtraTreeRegressor #An extremely randomized tree regressor.,1
#from sklearn.feature_extraction.text import SPANISH_STOP_WORDS,1
"from sklearn.svm import SVR, NuSVR, SVC, OneClassSVM",1
from sklearn.ensemble import  RandomForestClassifier,1
"    >>> from sklearn.cluster import Birch",1
from sklearn.pipeline import make_union,1
"#from sklearn import datasets",1
"# from sklearn.decomposition import PCA",1
from sklearn_pmml.convert import IntegerCategoricalFeature,1
"from sklearn import svm, grid_search, metrics, preprocessing",1
from sklearn.metrics import average_precision_score as ap,1
from sklearn.metrics import zero_one_loss #Zero-one classification loss.,1
"from sklearn.utils.testing import assert_equal, assert_not_equal",1
"from sklearn import svm, cluster, decomposition, mixture",1
"from sklearn import cross_validation, preprocessing, decomposition, feature_selection",1
from sklearn.utils.testing import assert_less_equal,1
"from sklearn import linear_model, metrics, svm",1
"from sklearn.linear_model  import LogisticRegression ",1
"		from sklearn.metrics import precision_score, recall_score",1
"from sklearn.base import BaseEstimator, TransformerMixin, ClassifierMixin, RegressorMixin",1
"from sklearn.cluster import KMeans, AgglomerativeClustering, MiniBatchKMeans, Birch, SpectralClustering",1
#    from sklearn import cluster,1
"from sklearn.grid_search import ParameterGrid, GridSearchCV",1
"from sklearn.datasets import load_digits, load_boston",1
"from sklearn.feature_selection import SelectFpr, chi2",1
from sklearn.neighbors import KernelDensity as KDE,1
"from sklearn.metrics import roc_curve, precision_recall_curve",1
"        # from sklearn.preprocessing import normalize",1
"from sklearn.utils.extmath import safe_sparse_dot, softmax",1
"from sklearn.metrics import confusion_matrix, accuracy_score, roc_auc_score, classification_report, mean_absolute_error",1
"        from sklearn.cross_validation import permutation_test_score",1
"		from sklearn.cluster import AffinityPropagation as AP",1
"		from sklearn import metrics",1
"from sklearn.metrics import precision_recall_curve, roc_auc_score, roc_curve",1
from sklearn.datasets import fetch_mldata as _fetch_mldata,1
from sklearn.metrics import precision_score as pscore,1
"from sklearn.metrics import mean_absolute_error, r2_score, mean_squared_error, zero_one_loss",1
"	from sklearn.decomposition import FactorAnalysis",1
"    from sklearn.linear_model import LinearRegression, LogisticRegression, Ridge, Lasso, ElasticNet",1
"from sklearn.metrics import confusion_matrix, precision_recall_fscore_support, classification_report",1
"from sklearn.metrics import confusion_matrix, mean_squared_error, r2_score, mean_absolute_error",1
"    from sklearn import feature_extraction",1
"from sklearn.cross_validation import StratifiedKFold, KFold, cross_val_score",1
"from sklearn.metrics import log_loss, auc, roc_auc_score",1
from sklearn.cluster import MeanShift #Mean shift clustering using a flat kernel.,1
from sklearn.covariance import MinCovDet #Minimum Covariance Determinant MCD): robust estimator of covariance.,1
from sklearn.cross_validation import LeavePLabelOut #Leave-P-Label_Out cross-validation iterator,1
from sklearn.decomposition import PCA #Principal component analysis PCA),1
from sklearn.decomposition import SparsePCA #Sparse Principal Components Analysis SparsePCA),1
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis #Quadratic Discriminant Analysis,1
from sklearn.manifold import MDS #Multidimensional scaling,1
"from sklearn.metrics import log_loss #Log loss, aka logistic loss or cross-entropy loss.",1
"from sklearn.metrics import precision_recall_fscore_support #Compute precision, recall, F-measure and support for each class",1
"        from sklearn.cluster import Ward    ",1
"# from sklearn import datasets, neighbors, linear_model",1
"    from sklearn.preprocessing import scale",1
"    from sklearn.decomposition import FastICA",1
from sklearn.svm.SVC import SVC,1
from sklearn.cluster import KMeans as sk_KMeans,1
"from sklearn.linear_model import LogisticRegression, RidgeClassifier, Ridge",1
"from sklearn.datasets.mldata import fetch_mldata, mldata_filename",1
"from sklearn.pipeline import Pipeline, make_pipeline",1
from sklearn.multiclass import _ConstantPredictor,1
"	from sklearn.linear_model import Ridge",1
"from sklearn.semi_supervised import LabelPropagation, LabelSpreading",1
from sklearn_evaluation.metrics import __binarize_scores_at as binarize_scores_at,1
from sklearn.ensemble import  (,1
"        from sklearn.linear_model import LinearRegression as LR",1
"    from sklearn.datasets import fetch_mldata",1
"from sklearn.ensemble import RandomForestClassifier ; ",1
"        from sklearn.datasets.samples_generator import make_blobs",1
"from sklearn.grid_search import _check_param_grid, ParameterGrid",1
from sklearn_theano.utils import train_test_split,1
"from sklearn.cross_validation import StratifiedShuffleSplit, train_test_split",1
"from sklearn.metrics.pairwise import euclidean_distances, cosine_similarity",1
from sklearn.linear_model.least_angle import lars_path,1
"from sklearn.ensemble import AdaBoostRegressor, GradientBoostingRegressor, RandomForestRegressor",1
"from sklearn import svm, cross_validation, tree, neighbors, linear_model, datasets",1
"from sklearn.linear_model import PassiveAggressiveRegressor, PassiveAggressiveClassifier, SGDClassifier",1
"    from sklearn.metrics import mean_absolute_error, mean_squared_error, make_scorer",1
"from sklearn.ensemble import RandomForestRegressor, RandomTreesEmbedding",1
from sklearn.ensemble import RandomForestClassifier as rf,1
"    from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer",1
#from sklearn.cluster import dbscan,1
"from sklearn.metrics import euclidean_distances, roc_curve, auc",1
# from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis,1
"from sklearn import svm, cross_validation, grid_search",1
from sklearn.naive_bayes import BaseNB,1
from sklearn.naive_bayes import  BernoulliNB,1
"from sklearn.utils import array2d, column_or_1d, check_arrays",1
"from sklearn.datasets import load_svmlight_file",1
"            from sklearn.cross_validation import StratifiedKFold,KFold",1
from sklearn.metrics.scorer import roc_auc_scorer,1
"from sklearn.manifold.t_sne import _gradient_descent as tsne_gd, _joint_probabilities as tsne_joint_probabilities, _kl_divergence as tsne_kl_divergence",1
from sklearn.feature_selection import chi2 as skchi2,1
"from sklearn.datasets import load_diabetes, load_iris",1
"from sklearn.linear_model import LogisticRegression, RandomizedLasso, LinearRegression",1
"from sklearn import svm,preprocessing,grid_search,cross_validation",1
"from sklearn.decomposition import FastICA, KernelPCA, PCA",1
"from sklearn import svm, naive_bayes",1
"  from sklearn.datasets.svmlight_format import dump_svmlight_file",1
"from sklearn.ensemble import RandomForestClassifier#, GradientBoostingClassifier, BaggingClassifier",1
from sklearn.cross_validation import cross_val_score as cv_score,1
"from sklearn.metrics import log_loss, roc_auc_score, accuracy_score",1
"#from sklearn.base import BaseEstimator, ClassifierMixin",1
"from sklearn.neighbors import KNeighborsClassifier, NearestCentroid",1
"from sklearn.feature_selection import SelectKBest, chi2, f_classif",1
"#from sklearn.feature_selection import SelectPercentile, chi2, SelectFromModel",1
from sklearn_extensions.non_negative_garotte import NonNegativeGarrote,1
from sklearn.datasets.olivetti_faces import *,1
"from sklearn.externals.six import u, b",1
"    from sklearn.preprocessing import label_binarize",1
"from sklearn.linear_model import LinearRegression, TheilSenRegressor",1
"	from sklearn.svm import SVR",1
"			from sklearn.cross_validation import StratifiedKFold",1
"	>>> from sklearn.ensemble import RandomForestRegressor",1
# from sklearn.ensemble import BaggingRegressor as Bagging,1
from sklearn import decomposition as pca,1
"# from sklearn.cluster import KMeans, MiniBatchKMeans",1
"    from sklearn.metrics import roc_auc_score as auc",1
from sklearn.decomposition.nmf import nnls,1
from sklearn.preprocessing.data import Binarizer,1
"from sklearn.metrics import recall_score,precision_score,accuracy_score,f1_score",1
"    from sklearn.metrics import adjusted_mutual_info_score",1
"from sklearn.cross_decomposition import PLSCanonical, PLSRegression, CCA",1
from sklearn.neighbors import radius_neighbors_graph,1
"        from sklearn.svm import LinearSVC",1
"    from sklearn.mixture import GMM  # noqa",1
"from sklearn.utils.validation import check_random_state, column_or_1d",1
from sklearn.decomposition import PCA as _PCA,1
#from sklearn.neural_network import multilayer_perceptron as mlp,1
"from sklearn import decomposition, cluster, preprocessing",1
"    from sklearn.metrics import silhouette_score",1
"from sklearn_pmml.convert import TransformationContext, pmml_row, ModelMode, Schema",1
"from sklearn.metrics import roc_auc_score, roc_curve, confusion_matrix",1
"from sklearn.base import ClassifierMixin, BaseEstimator",1
"from sklearn.cross_validation import StratifiedKFold, KFold, StratifiedShuffleSplit, ShuffleSplit",1
"                        from sklearn.preprocessing import StandardScaler",1
"    from sklearn.linear_model import LogisticRegression, RandomizedLogisticRegression, SGDClassifier, Perceptron, \",1
"from sklearn.linear_model import Lasso, Ridge, ElasticNetCV",1
from sklearn import __version__ as skvers,1
"    >>> from sklearn.preprocessing.data import StandardScaler",1
"from sklearn.cross_validation import train_test_split, StratifiedKFold ,cross_val_score",1
"from sklearn.cross_validation import train_test_split	",1
"from sklearn.feature_selection import RFE, RFECV,SelectFwe, SelectKBest",1
"from sklearn.cross_validation import train_test_split, LeaveOneOut, StratifiedShuffleSplit",1
"from sklearn.cluster import spectral_clustering, SpectralClustering",1
"from sklearn.metrics import zero_one_loss, accuracy_score, confusion_matrix",1
"from sklearn import svm, tree, ensemble, grid_search, cross_validation",1
"from sklearn.feature_selection import SelectKBest,f_classif",1
"from sklearn.grid_search import fit_grid_point, _CVScoreTuple",1
from sklearn.feature_extraction.text import _document_frequency,1
"from sklearn.neighbors import RadiusNeighborsClassifier as RN",1
# from sklearn.linear_model import RANSACRegressor,1
from sklearn.utils.arpack import svds,1
"	>>> from sklearn.tree import DecisionTreeClassifier",1
"from sklearn.preprocessing import LabelEncoder # change to numerical data",1
from sklearn.cluster import KMeans as Km,1
"from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score, make_scorer",1
"from sklearn.utils.testing import assert_false, assert_almost_equal",1
"from sklearn import datasets, preprocessing, metrics, grid_search",1
"from sklearn.feature_extraction.text import TfidfTransformer,TfidfVectorizer",1
"        from sklearn.utils.extmath import logsumexp",1
from sklearn.externals import joblib # for load/dumping classifiers,1
"      from sklearn.datasets import load_iris",1
"from sklearn.preprocessing import Normalizer, MaxAbsScaler, StandardScaler",1
from sklearn.metrics.ranking import _binary_clf_curve,1
"        from sklearn import manifold",1
"from sklearn.grid_search import ParameterSampler, ParameterGrid",1
# from sklearn.base import BaseEstimator,1
"    >>> from sklearn.qda import QDA",1
"from sklearn.manifold import Isomap,LocallyLinearEmbedding",1
from sklearn.cluster import _k_means,1
from sklearn.cross_validation import KFold   #For K-fold cross validation,1
from sklearn.linear_model import LinearRegression as lr,1
# from sklearn.linear_model import Ridge as Model,1
"from sklearn_evaluation.util import (_can_iterate, is_column_vector,",1
"from sklearn.datasets import load_iris, make_friedman1, make_regression",1
"    from sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier",1
"	from sklearn.datasets import make_classification",1
from sklearn.metrics import mean_square_error,1
"from sklearn_pmml.convert.features import Feature, FeatureType",1
"from sklearn.cross_validation import (StratifiedKFold, ",1
"from sklearn.utils import array2d, check_random_state, check_arrays",1
"from sklearn.metrics import auc, confusion_matrix, precision_recall_curve, roc_curve",1
"    from sklearn.feature_selection import RFECV, RFE",1
"        from sklearn.metrics import confusion_matrix",1
"    from sklearn.datasets import samples_generator",1
"        >>> from sklearn.linear_model import ARDRegression",1
from sklearn.preprocessing.label import _inverse_binarize_thresholding,1
"      ""from sklearn.datasets import load_diabetes\n"",",1
"    from sklearn.ensemble.forest import RandomForestClassifier",1
"from sklearn.metrics import accuracy_score, recall_score, precision_score, confusion_matrix",1
"from sklearn import cross_validation   ",1
#from sklearn.svm import SVR as GMM,1
"from sklearn.metrics.scorer import make_scorer, get_scorer",1
from sklearn.metrics import roc_auc_score as auc,1
from sklearn_utils import *,1
from sklearn.grid_search import  GridSearchCV,1
"            from sklearn.cross_validation import LeaveOneOut",1
from sklearn.neighbors import KNeighborsClassifier as KNeighbors,1
"from sklearn import ensemble, linear_model, preprocessing, svm, multiclass",1
"from sklearn.cluster import KMeans, DBSCAN, Birch",1
"                from sklearn.cross_validation import LeaveOneLabelOut",1
"from sklearn_pmml.convert import TransformationContext, pmml_row",1
"from sklearn import linear_model, tree, ensemble",1
"from sklearn import preprocessing, datasets, linear_model",1
"    # from sklearn.cluster import spectral_clustering",1
"from sklearn.metrics import auc, roc_curve, roc_auc_score",1
"    from sklearn.decomposition import FactorAnalysis, NMF, PCA",1
"from sklearn.metrics import accuracy_score, average_precision_score",1
"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, AdaBoostClassifier, RandomTreesEmbedding, BaggingClassifier  ",1
"from sklearn.preprocessing import MinMaxScaler, scale",1
"    #from sklearn.mixture import DPGMM",1
"        from sklearn.ensemble.forest import RandomForestClassifier",1
"from sklearn.ensemble import ExtraTreesRegressor, RandomForestRegressor, GradientBoostingRegressor",1
"from sklearn.cluster import KMeans, MiniBatchKMeans, AffinityPropagation",1
from sklearn.cross_validation import  cross_val_score,1
#>>> from sklearn import linear_model,1
"from sklearn.preprocessing import Imputer # fill in NA data",1
from sklearn.utils.class_weight import compute_class_weight,1
"from sklearn import multiclass",1
"from sklearn.metrics import precision_recall_fscore_support, classification_report, confusion_matrix",1
"    # from sklearn.cluster import MiniBatchKMeans",1
from sklearn.neighbors import KNeighborsRegressor as KNN,1
"from sklearn.preprocessing import StandardScaler, LabelBinarizer, Binarizer",1
"from sklearn.metrics import recall_score, f1_score, roc_curve, accuracy_score",1
"from sklearn import metrics, svm, linear_model, naive_bayes, pipeline, grid_search",1
"from sklearn.svm import LinearSVC, SVC, SVR",1
from sklearn.feature_selection.univariate_selection import \,1
"    from sklearn.svm import NuSVC",1
"from sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier, ExtraTreesClassifier",1
"        # from sklearn.decomposition.nmf import NMF",1
"		from sklearn.cluster import MiniBatchKMeans",1
"    # from sklearn.feature_extraction import DictVectorizer",1
"from sklearn.feature_selection import SelectPercentile,f_classif",1
"from sklearn.datasets import make_blobs, make_classification, make_regression",1
"from sklearn.externals.joblib import Parallel, delayed, dump, Memory",1
"from sklearn import svm, feature_selection",1
"from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier, BaggingRegressor",1
"    from sklearn import datasets, svm, linear_model, neighbors, svm",1
"from sklearn.utils.sparsefuncs import (mean_variance_axis0,",1
"from sklearn.naive_bayes import MultinomialNB #nice",1
"from sklearn.kernel_approximation import Nystroem, RBFSampler",1
from sklearn.utils.testing import assert_allclose,1
"from sklearn.grid_search import GridSearchCV, BaseSearchCV",1
"    #    from sklearn.datasets import make_classification",1
"from sklearn.linear_model import Ridge, LinearRegression",1
"from sklearn.neighbors import KNeighborsClassifier, RadiusNeighborsClassifier, \",1
"    from sklearn.utils.validation import check_array",1
"             'scikit-learn'    : 'from sklearn.feature_extraction  import DictVectorizer'",1
"from sklearn.metrics import accuracy_score, make_scorer, mean_absolute_error, mean_squared_error",1
"from sklearn.decomposition import PCA, ProbabilisticPCA",1
from sklearn.neighbors import  NearestCentroid,1
"from sklearn.ensemble import GradientBoostingClassifier, AdaBoostClassifier, ExtraTreesClassifier, RandomForestClassifier",1
"from sklearn import metrics,preprocessing,cross_validation",1
"from sklearn.utils.extmath import logsumexp, safe_sparse_dot",1
"#    from sklearn.decomposition import MiniBatchDictionaryLearning,SparsePCA,NMF",1
"from sklearn.feature_selection import RFE, RFECV, SelectFdr,f_classif,SelectFwe,SelectPercentile,SelectKBest",1
from sklearn import tree as sk_tree,1
from sklearn    import svm,1
"from sklearn import ensemble, linear_model",1
"from sklearn.ensemble import RandomForestRegressor as RFR, ExtraTreesRegressor as ETR",1
"from sklearn.metrics import (accuracy_score, precision_score, recall_score,",1
"                    from sklearn.feature_extraction.image import extract_patches",1
from sklearn.utils.fixes import qr_economic,1
from sklearn.utils.linear_assignment_ import linear_assignment as hungarian,1
"from sklearn.neighbors import KNeighborsClassifier, RadiusNeighborsClassifier, KernelDensity",1
# from sklearn.cross_decomposition import CCA,1
#from sklearn.utils.validation import check_consistent_length,1
from sklearn.svm.sparse import SVC as SparseSVC,1
"        from sklearn.utils import resample",1
"from sklearn.metrics.metrics import confusion_matrix, precision_recall_curve",1
"    # from sklearn.metrics import roc_auc_score",1
"from sklearn.metrics import mean_squared_error  # , r2_score",1
"from sklearn.metrics import confusion_matrix, precision_recall_fscore_support, precision_score, recall_score, f1_score",1
"from sklearn.metrics import accuracy_score, precision_score, recall_score",1
"    from sklearn.metrics import f1_score, average_precision_score, accuracy_score",1
"    # from sklearn.metrics import jaccard_similarity_score",1
from sklearn.metrics import pairwise_distances_argmin_min,1
from sklearn.gaussian_process.gaussian_process import MACHINE_EPSILON,1
"    from sklearn.utils import indexable",1
"        from sklearn.neighbors import RadiusNeighborsClassifier",1
"from sklearn.feature_extraction.image import reconstruct_from_patches_2d, extract_patches_2d",1
"from sklearn.neighbors import BallTree, NearestNeighbors",1
"		from sklearn import manifold",1
"            from sklearn.cluster import KMeans,MiniBatchKMeans",1
"from sklearn.cross_validation import LeavePLabelOut, KFold, LeaveOneOut, cross_val_score, StratifiedKFold",1
"        #     from sklearn.ensemble import RandomForestClassifier",1
from sklearn.utils.validation import array2d,1
"    # from sklearn.naive_bayes import GaussianNB",1
from sklearn.grid_search import GridSearchCV as gsc,1
"        from sklearn.feature_extraction.text import TfidfVectorizer,CountVectorizer",1
"from sklearn import datasets, svm,cross_validation",1
"  from sklearn import cross_validation",1
from sklearn.mixture import GMM as skGMM,1
from sklearn.covariance import EllipticEnvelope #An object for detecting outliers in a Gaussian distributed dataset.,1
from sklearn.cross_validation import train_test_split #Split arrays or matrices into random train and test subsets,1
from sklearn.decomposition import IncrementalPCA #Incremental principal components analysis IPCA).,1
from sklearn.ensemble import AdaBoostClassifier #An AdaBoost classifier.,1
from sklearn.ensemble import AdaBoostRegressor #An AdaBoost regressor.,1
from sklearn.linear_model import LassoLars #Lasso model fit with Least Angle Regression a from k from a.,1
from sklearn.linear_model import MultiTaskLasso #Multi-task Lasso model trained with L1/L2 mixed-norm as regularizer,1
from sklearn.metrics.pairwise import chi2_kernel #Computes the exponential chi-squared kernel X and Y.,1
from sklearn.mixture import DPGMM #variational Inference for the Infinite Gaussian Mixture Model.,1
from sklearn.naive_bayes import BernoulliNB #Naive Bayes classifier for multivariate Bernoulli models.,1
"	from sklearn.grid_search import GridSearchCV, RandomizedSearchCV",1
"from sklearn.ensemble import RandomForestClassifier, RandomForestRegressor",1
"from sklearn.metrics import roc_curve, auc, accuracy_score, classification_report",1
"from sklearn.linear_model import LinearRegression, Lasso, lars_path",1
"from sklearn import neighbors, datasets, cross_validation",1
"from sklearn import preprocessing, manifold, decomposition",1
"from sklearn.metrics import roc_curve, roc_auc_score, auc, matthews_corrcoef",1
"from sklearn.multiclass import OneVsRestClassifier, _ConstantPredictor",1
"from sklearn.linear_model import RidgeClassifier, Perceptron",1
"from sklearn.pipeline import Pipeline, FeatureUnion, _fit_one_transformer, _fit_transform_one, _transform_one",1
from sklearn.feature_extraction.tests.test_text import ALL_FOOD_DOCS,1
"from sklearn.ensemble.forest import RandomForestRegressor",1
"from sklearn.cluster import MiniBatchKMeans,KMeans",1
"    from sklearn.metrics.pairwise import chi2_kernel, rbf_kernel",1
from sklearn.neighbors import kneighbors_graph #Computes the weighted) graph of k-Neighbors for points in X,1
">>> from sklearn.pipeline import Pipeline",1
"from sklearn.metrics import roc_curve as roc, auc, mean_squared_error",1
"        from sklearn.metrics.score import make_scorer",1
"from sklearn.utils.testing import assert_raises, assert_raise_message",1
from sklearn.utils.extmath import logistic_sigmoid,1
"from sklearn.tree import DecisionTreeClassifier,export_graphviz;",1
"from sklearn.neighbors import NearestCentroid, KNeighborsClassifier",1
"from sklearn.metrics import accuracy_score, auc_score",1
"from sklearn.metrics import confusion_matrix ",1
from sklearn.cross_validation        import ShuffleSplit,1
"from sklearn.ensemble import AdaBoostClassifier ",1
"from sklearn import datasets, cross_validation, linear_model",1
"    from sklearn.metrics import precision_recall_curve, f1_score",1
"from sklearn import cross_validation, linear_model",1
"  from sklearn import cross_validation as c_v",1
from sklearn.ensemble import AdaBoostClassifier #For Classification,1
"from sklearn.feature_selection import RFECV, RFE",1
"# from sklearn.base import BaseEstimator, TransformerMixin",1
from sklearn.feature_extraction.text import strip_accents_unicode as strip_accents,1
from sklearn import linear_model as sklearn_lm,1
"        from sklearn.gaussian_process import GaussianProcess",1
"from sklearn.metrics import accuracy_score, confusion_matrix, roc_curve",1
"from sklearn.utils.testing import (assert_equal, assert_raises, assert_true,",1
"    from sklearn.datasets import make_sparse_spd_matrix, make_spd_matrix",1
"from sklearn.decomposition import RandomizedPCA, PCA",1
"from sklearn.preprocessing import OneHotEncoder, LabelBinarizer",1
"from sklearn.feature_selection import f_classif, chi2, \",1
"from sklearn.metrics import make_scorer, accuracy_score, \",1
"    from sklearn.feature_selection import SelectPercentile, chi2",1
"from sklearn import svm,datasets,neighbors;",1
"from sklearn.neighbors import NearestNeighbors, LSHForest",1
"from sklearn import cross_validation, utils",1
from sklearn.manifold.t_sne import _kl_divergence,1
"    from sklearn.feature_selection import f_classif",1
"from sklearn import (metrics, cross_validation)",1
from sklearn import preprocessing;,1
from sklearn.__check_build import raise_build_error,1
from sklearn.grid_search import _check_param_grid,1
"from sklearn.preprocessing import normalize",1
from sklearn.cross_validation import LabelShuffleSplit,1
"        from sklearn.dummy import DummyClassifier",1
"from sklearn.metrics import (confusion_matrix, precision_recall_fscore_support,",1
from sklearn.neighbors import radius_neighbors_graph #Computes the weighted) graph of Neighbors for points in X,1
from sklearn.cross_decomposition import PLSRegression #PLS regression,1
from sklearn.preprocessing import Binarizer #Binarize data (set feature values to 0 or 1) according to a threshold,1
from sklearn.preprocessing import MinMaxScaler #Transforms features by scaling each feature to a given range.,1
#from sklearn.metrics import confusion_matrix,1
"        from sklearn.utils import shuffle",1
"from sklearn.datasets.samples_generator import make_classification, \",1
"from sklearn.metrics.metrics import precision_score, recall_score, confusion_matrix, classification_report, f1_score",1
"from sklearn.cluster import AffinityPropagation, KMeans",1
"        #from sklearn.linear_model import LogisticRegression as LR",1
#from sklearn.ensemble import RandomForestRegressor,1
from sklearn.linear_model import LassoLarsIC,1
"from sklearn.metrics import auc_score, f1_score",1
"from sklearn.decomposition import PCA,RandomizedPCA ",1
"from sklearn.ensemble import RandomForestClassifier, BaggingClassifier ",1
"from sklearn import gaussian_process ",1
"from sklearn.cluster import KMeans, AffinityPropagation, SpectralClustering",1
"        #~ from sklearn import linear_model",1
"from sklearn.decomposition import RandomizedPCA",1
"from sklearn.tree import DecisionTreeClassifier,DecisionTreeRegressor, export_graphviz",1
"from sklearn.linear_model import *",1
from sklearn.datasets import load_svmlight_file as lsf,1
"from sklearn.metrics import mean_absolute_error	",1
"from sklearn.ensemble import RandomForestRegressor,AdaBoostRegressor,BaggingRegressor",1
"from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, roc_curve, auc",1
"from sklearn.utils.validation import check_X_y, check_array, check_is_fitted",1
from sklearn.neighbors.dist_metrics import METRIC_MAPPING,1
"from sklearn.cross_validation import StratifiedShuffleSplit,StratifiedKFold,ShuffleSplit,LeaveOneOut,LeavePOut",1
"#from sklearn import linear_model",1
"    from sklearn.svm import SVC",1
"      from sklearn.preprocessing import Normalizer",1
"		from sklearn.linear_model import PassiveAggressiveClassifier",1
"    #    from sklearn.feature_extraction import text",1
from sklearn import decomposition as decomp,1
"    from sklearn import tree  # noqa",1
"    from sklearn.lda import LDA  # noqa",1
"    from sklearn.qda import QDA  # noqa",1
"        from sklearn.metrics import r2_score",1
"        from sklearn.metrics import matthews_corrcoef",1
"from sklearn.metrics import accuracy_score, r2_score",1
from sklearn.preprocessing.label import _inverse_binarize_multiclass,1
from sklearn.multiclass import fit_ecoc,1
from sklearn.ensemble import RandomForestRegressor as RandomForest,1
"# from sklearn.preprocessing import PolynomialFeatures, MinMaxScaler",1
"from sklearn_pmml.convert.test.jpmml_test import JPMMLClassificationTest, JPMMLRegressionTest, TARGET_NAME, TARGET",1
"#from sklearn.tree import DecisionTreeClassifier",1
"from sklearn.cross_validation import StratifiedKFold, cross_val_score, train_test_split ",1
"    from sklearn.metrics import median_absolute_error",1
"from sklearn.feature_extraction.text import (TfidfVectorizer, CountVectorizer,",1
"from sklearn import neighbors,preprocessing",1
#from sklearn.preprocessing import PolynomialFeatures,1
"			from sklearn.cross_validation import train_test_split",1
"    >>> from sklearn.svm import LinearSVC",1
"            from sklearn import linear_model",1
#from sklearn.cross_validation import StratifiedKFold,1
"    >>> from sklearn.neighbors import KNeighborsRegressor",1
"from sklearn.metrics import recall_score, precision_score",1
"from sklearn.cross_validation import cross_val_score, train_test_split",1
from sklearn.utils.validation import check_arrays,1
"from sklearn.ensemble import AdaBoostClassifier, RandomForestClassifier, GradientBoostingClassifier",1
"	>>> from sklearn.tree import DecisionTreeRegressor",1
from sklearn.feature_extraction import DictVectorizer #to turn categorial variables into numeric arrays,1
"from sklearn.utils import atleast2d_or_csr, check_arrays, check_random_state, gen_even_slices",1
from sklearn.pipeline import Pipeline               # Estimator pipeline,1
from sklearn.grid_search import GridSearchCV        # Grid Search,1
from sklearn.metrics.metrics import zero_one_loss,1
from sklearn.feature_extraction.text import CountVectorizer as Counter,1
"from sklearn.cross_validation import ShuffleSplit, _validate_shuffle_split",1
"from sklearn.preprocessing import (Binarizer as BinarizerR,",1
from sklearn.feature_extraction.image import extract_patches as _extract_patches,1
"    from sklearn.cluster import (MeanShift, MiniBatchKMeans,",1
from sklearn.ensemble.forest import (,1
"from sklearn.preprocessing import StandardScaler, Imputer",1
"from sklearn.metrics import recall_score, precision_recall_curve",1
"        from sklearn.naive_bayes import BernoulliNB",1
"            from sklearn.feature_selection import SelectKBest",1
"from sklearn.cross_validation import StratifiedKFold,cross_val_score,cross_val_predict",1
"        from sklearn import preprocessing ",1
from sklearn.linear_model import Ridge as ri,1
from sklearn.neighbors.ball_tree import BallTree,1
from sklearn.metrics import accuracy_score #importing accuracy score,1
"from sklearn.decomposition import NMF,IncrementalPCA, FastICA",1
"from sklearn.linear_model import LassoLars, LassoCV, LassoLarsCV, LassoLarsIC,\",1
from sklearn import kernel_approximation,1
"from sklearn import tree, svm, naive_bayes, linear_model",1
from sklearn_theano.feature_extraction.caffe.googlenet import (,1
"from sklearn.metrics import (brier_score_loss, precision_score, recall_score, f1_score)",1
"            from sklearn.preprocessing import Normalizer",1
"from sklearn import metrics,preprocessing",1
from sklearn.cross_validation import train_test_split as split,1
from sklearn.metrics                 import f1_score,1
from sklearn.pipeline                import Pipeline,1
"from sklearn.cluster import spectral_clustering",1
"        from sklearn.cluster import AgglomerativeClustering",1
"from sklearn.preprocessing import scale,OneHotEncoder",1
##    from sklearn.cluster import DBSCAN,1
"from sklearn import preprocessing, svm, metrics, cross_validation",1
"from sklearn import linear_model, lda, svm, preprocessing",1
"    from sklearn.metrics import precision_score, accuracy_score, recall_score,precision_recall_fscore_support",1
"from sklearn.decomposition import MiniBatchDictionaryLearning,PCA,NMF,IncrementalPCA",1
"                    from sklearn.neighbors import KNeighborsClassifier",1
"from sklearn.feature_extraction.text import CountVectorizer  ",1
"        from sklearn.neighbors import KNeighborsRegressor",1
"#from sklearn.metrics import roc_curve, auc",1
"from sklearn.preprocessing import MinMaxScaler, StandardScaler, RobustScaler",1
"    from sklearn.ensemble.partial_dependence import plot_partial_dependence",1
"from sklearn.metrics import confusion_matrix, precision_recall_fscore_support ",1
from sklearn.metrics import recall_score as rscore,1
"from sklearn.utils.testing import assert_raises, assert_raises_regex",1
"from sklearn.utils.testing import (assert_array_almost_equal, assert_equal,",1
"from sklearn.metrics import log_loss,accuracy_score,mean_squared_error",1
from sklearn.feature_selection import VarianceThreshold as VarianceThresholdR,1
from sklearn.exceptions import ConvergenceWarning,1
from sklearn.preprocessing.label import _check_numpy_unicode_bug,1
from sklearn import ensemble as en,1
from sklearn.metrics import \,1
"from sklearn.manifold import Isomap, TSNE",1
"from sklearn.naive_bayes import MultinomialNB, GaussianNB ",1
"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, ExtraTreesClassifier, GradientBoostingClassifier",1
from sklearn.cluster.KMeans import KMeans,1
"                from sklearn.tree import DecisionTreeClassifier",1
"	from sklearn import ensemble, feature_selection, linear_model, naive_bayes, neighbors, svm, tree",1
"from sklearn.datasets import load_iris, make_blobs",1
"from sklearn.cross_validation import train_test_split, StratifiedKFold, cross_val_score",1
"from sklearn.metrics import roc_curve, get_scorer",1
from sklearn.ensemble._gradient_boosting import _random_sample_mask,1
"#from sklearn.preprocessing import StandardScaler",1
"from sklearn.cluster import MeanShift, estimate_bandwidth, DBSCAN, KMeans",1
"from sklearn import datasets, preprocessing, metrics, svm, neighbors",1
"from sklearn import cross_validation, feature_selection, preprocessing, svm",1
"from sklearn.linear_model import LassoCV, LogisticRegression",1
#from sklearn.qda import QDA,1
"from sklearn.feature_selection import SelectKBest, f_regression, f_classif",1
from sklearn import cross_validation as xval,1
"from sklearn.model_selection import StratifiedKFold, StratifiedShuffleSplit",1
from sklearn.ensemble.weight_boosting import DecisionTreeRegressor,1
"from sklearn.base import clone, BaseEstimator, ClassifierMixin, RegressorMixin, MetaEstimatorMixin",1
">>> from sklearn.svm import LinearSVC",1
"    from sklearn.naive_bayes import BernoulliNB",1
"from sklearn.metrics import confusion_matrix, precision_recall_fscore_support, accuracy_score",1
"    from sklearn.datasets import load_boston, load_diabetes",1
from sklearn.pipeline import FeatureUnion #Concatenates results of multiple transformer objects.,1
from sklearn.preprocessing import Imputer #Imputation transformer for completing missing values.,1
from sklearn.preprocessing import KernelCenterer #Center a kernel matrix,1
from sklearn.preprocessing import LabelEncoder #Encode labels with value between 0 and n_classes-1.,1
from sklearn.svm import SVR #Epsilon-Support Vector Regression.,1
"    from sklearn.utils.validation import column_or_1d",1
from sklearn.ensemble import RandomForestClassifier as scikitRF,1
"	#from sklearn.decomposition import PCA",1
from sklearn.linear_model import RandomizedLogisticRegression as RLR,1
"from sklearn.metrics import f1_score, make_scorer, SCORERS",1
"        #     from sklearn.cluster import KMeans",1
"    -> from sklearn.datasets import load_iris",1
"from sklearn.feature_extraction.text import TfidfVectorizer, HashingVectorizer, CountVectorizer, TfidfTransformer",1
from sklearn.neighbors import RadiusNeighborsRegressor #Regression based on neighbors within a fixed radius.,1
from sklearn.metrics      import r2_score,1
"from sklearn.linear_model import lasso_path, RidgeCV, Ridge",1
"from sklearn.cluster import k_means, KMeans",1
"    from sklearn.covariance import EmpiricalCovariance #MinCovDet",1
from sklearn.metrics import classification_report as cr,1
"from sklearn.decomposition import NMF, ProjectedGradientNMF",1
"	# # from sklearn.cluster import MeanShift as MS",1
"from sklearn import preprocessing, decomposition",1
"from sklearn.svm import * # SVC, SVR, NuSVR, LinearSVC",1
"from sklearn.metrics import f1_score, make_scorer, fbeta_score",1
"from sklearn.cross_validation import (cross_val_score, StratifiedKFold)",1
"from sklearn.isotonic import IsotonicRegression",1
"from sklearn.preprocessing import Imputer, scale",1
from sklearn.cluster import FeatureAgglomeration #Agglomerate features.,1
"from sklearn.cross_validation import train_test_split   ",1
"from sklearn import linear_model as sklm ",1
"from sklearn.datasets import make_circles, make_moons, load_iris, load_digits",1
#from sklearn.metrics import make_scorer,1
from sklearn.preprocessing._weights import _balance_weights as balance_weights,1
"    from sklearn.cross_validation import check_cv, _fit_and_score",1
"        from sklearn.datasets import fetch_olivetti_faces",1
"    >>> from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis",1
from sklearn.neural_network.rbm import BernoulliRBM,1
#from sklearn import mixture as skmixture,1
from sklearn import pls,1
"from sklearn.metrics import r2_score, explained_variance_score",1
#from sklearn.manifold import MDS,1
"from sklearn.metrics import accuracy_score, confusion_matrix, roc_curve, auc",1
from sklearn.cross_validation import cross_val_predict #Generate cross-validated estimates for each input data point,1
from sklearn.decomposition import SparseCoder #Sparse coding,1
from sklearn.decomposition import MiniBatchDictionaryLearning #Mini-batch dictionary learning,1
from sklearn.decomposition import dict_learning #Solves a dictionary learning matrix factorization problem.,1
from sklearn.ensemble import ExtraTreesClassifier #An extra-trees classifier.,1
from sklearn.ensemble import BaggingRegressor #A Bagging regressor.,1
from sklearn.ensemble import GradientBoostingClassifier #Gradient Boosting for classification.,1
from sklearn.feature_selection import chi2 #Compute chi-squared stats between each non-negative feature and class.,1
from sklearn.linear_model import OrthogonalMatchingPursuit #Orthogonal Matching Pursuit model OMP),1
from sklearn.manifold import LocallyLinearEmbedding #Locally Linear Embedding,1
from sklearn.manifold import spectral_embedding #Project the sample on the first eigenvectors of the graph Laplacian.,1
"from sklearn.metrics import f1_score #Compute the F1 score, also known as balanced F-score or F-measure",1
from sklearn.metrics import hinge_loss #Average hinge loss non-regularized),1
"from sklearn.metrics import roc_curve as roc, roc_auc_score as roc_auc, auc, mean_squared_error",1
"from sklearn.metrics.pairwise import additive_chi2_kernel, chi2_kernel",1
"    from sklearn.metrics import roc_auc_score",1
"from sklearn.ensemble import ExtraTreesClassifier, GradientBoostingClassifier",1
"    from sklearn.ensemble import RandomForestClassifier ",1
"from sklearn.metrics import roc_auc_score, mean_squared_error",1
from sklearn.neighbors import BallTree as BT,1
from sklearn.utils            import shuffle,1
"        from sklearn.isotonic import IsotonicRegression",1
"#from sklearn.preprocessing import OneHotEncoder, LabelEncoder, StandardScaler #used to convert categories to one of k ",1
"from sklearn.ensemble import RandomForestRegressor,ExtraTreesRegressor",1
"    from sklearn.decomposition import TruncatedSVD, PCA, RandomizedPCA, FastICA, MiniBatchSparsePCA, SparseCoder, \",1
"    from sklearn.multiclass import OneVsRestClassifier, OneVsOneClassifier",1
"    # from sklearn.calibration import CalibratedClassifierCV",1
"from sklearn import cross_validation, grid_search, linear_model, svm, metrics",1
"from sklearn.cluster import DBSCAN ",1
from sklearn.utils.linear_assignment_ import _hungarian,1
"from sklearn import tree, cross_validation",1
"from sklearn.linear_model import LassoLars, orthogonal_mp",1
"from sklearn.metrics import log_loss, roc_curve, auc",1
"from sklearn.manifold import SpectralEmbedding",1
"from sklearn import manifold, random_projection",1
"from sklearn.grid_search import GridSearchCV, RandomizedSearchCV, ParameterSampler",1
from sklearn.cross_validation   import ShuffleSplit,1
from sklearn.naive_bayes import MultinomialNB as NB,1
"from sklearn import linear_model,ensemble",1
from sklearn.tree import DecisionTreeClassifier as treeClf,1
"from sklearn.cluster import DBSCAN, MeanShift, estimate_bandwidth, Birch",1
"	from sklearn.preprocessing import LabelEncoder",1
"from sklearn.metrics import (confusion_matrix, classification_report, precision_recall_fscore_support)",1
"from sklearn import metrics, svm, feature_selection",1
"from sklearn.feature_extraction.text import TfidfVectorizer, TfidfTransformer",1
"from sklearn.metrics import precision_recall_fscore_support, \",1
"from sklearn.preprocessing import LabelEncoder, Imputer",1
"from sklearn.metrics import confusion_matrix, mean_squared_error, accuracy_score",1
"from sklearn.svm import LinearSVC, NuSVC, NuSVR, OneClassSVM, SVC, SVR",1
from sklearn.utils.sparsefuncs import mean_variance_axis,1
"    from sklearn.metrics import precision_recall_curve, f1_score",1
from sklearn import  linear_model,1
"from sklearn.metrics import make_scorer, f1_score",1
"from sklearn.metrics.regression import r2_score, mean_squared_error",1
"        from sklearn.metrics import precision_score",1
from sklearn import decomposition as dc,1
from sklearn.utils.fixes import count_nonzero,1
"from sklearn.metrics import pairwise_distances ",1
from sklearn.cross_validation import  StratifiedShuffleSplit,1
"        #from sklearn.svm import LinearSVC",1
"    from sklearn.metrics import precision_recall_curve, auc",1
"from sklearn.cluster import AffinityPropagation, SpectralClustering",1
"from sklearn import decomposition, preprocessing, cross_validation",1
"	from sklearn.kernel_approximation import AdditiveChi2Sampler",1
from sklearn.feature_extraction import ngrams,1
"	from sklearn.pipeline import make_pipeline",1
"	from sklearn.decomposition import PCA",1
"from sklearn.metrics import accuracy_score, precision_score",1
"#from sklearn import metrics ;  ",1
"from sklearn.externals.joblib import delayed, Parallel",1
from sklearn.feature_extraction.text import TfidfVectorizer as TFIDF,1
"from sklearn.utils import check_array, warn_if_not_float",1
"from sklearn.cluster import KMeans, AffinityPropagation, DBSCAN",1
"from sklearn.linear_model import RandomizedLogisticRegression",1
"from sklearn import svm,metrics, cross_validation",1
"    from sklearn.model_selection import cross_val_score",1
"    from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, ExtraTreesClassifier, \",1
"        from sklearn.manifold import isomap, TSNE, ...",1
"from sklearn.preprocessing import binarize, normalize",1
"from sklearn.metrics import (explained_variance_score, mean_absolute_error , mean_squared_error, median_absolute_error, r2_score )",1
"from sklearn.utils.multiclass import type_of_target, unique_labels",1
from sklearn.base import ChangedBehaviorWarning,1
from sklearn.neighbors import KNeighborsClassifier as KClass,1
from sklearn.utils.extmath import _ravel,1
"from sklearn.cross_validation import StratifiedKFold, cross_val_score, train_test_split",1
from sklearn.externals import joblib # for loading classifier,1
"from sklearn.utils import check_consistent_length, check_array, safe_indexing",1
"from sklearn.linear_model import LassoCV, LassoLarsCV, LassoLarsIC",1
# from sklearn.cluster.k_means_ import euclidean_distances,1
"from sklearn import linear_model as lm",1
"from sklearn import (manifold, datasets, decomposition, ensemble, lda,random_projection)",1
"from sklearn.utils.validation import has_fit_parameter, check_is_fitted",1
"            # from sklearn.metrics import confusion_matrix",1
"    from sklearn.metrics import confusion_matrix ; #evaluating confusion matrix",1
"from sklearn_pmml.convert.model import EstimatorConverter, ClassifierConverter, ModelMode, RegressionConverter, Schema, \",1
"from sklearn_theano.base import Convolution, Relu, LRN, Feedforward, ZeroPad",1
"from sklearn.cluster import MeanShift as MS, estimate_bandwidth",1
"    from sklearn.discriminant_analysis import (",1
"from sklearn.utils.validation import NotFittedError, check_X_y, check_array",1
"from sklearn.mixture.gmm import log_multivariate_normal_density, sample_gaussian",1
"from sklearn.utils.testing import (assert_almost_equal, assert_array_equal,",1
"from sklearn_extensions.extreme_learning_machines.random_layer import RBFRandomLayer, MLPRandomLayer, GRBFRandomLayer, RandomLayer",1
"            from sklearn.cluster.hierarchical import _hc_cut",1
"from sklearn import preprocessing, naive_bayes",1
from sklearn_theano.feature_extraction import OverfeatTransformer as fext,1
"    >>> from sklearn.cross_validation import KFold",1
from sklearn.feature_selection.from_model import _LearntSelectorMixin,1
"from sklearn import neighbors, svm, linear_model",1
"	from sklearn.ensemble import RandomForestRegressor",1
"from sklearn.neighbors import RadiusNeighborsClassifier, KernelDensity",1
"		from sklearn.metrics import confusion_matrix",1
"from sklearn.metrics import accuracy_score, mean_absolute_error, make_scorer",1
#    from sklearn.decomposition import PCA,1
"        from sklearn.metrics import recall_score",1
"from sklearn.linear_model import orthogonal_mp, orthogonal_mp_gram, \",1
"	from sklearn.datasets import load_iris",1
from sklearn.externals.funcsigs import signature,1
"from sklearn.cross_validation import _index_param_value, _safe_split, FitFailedWarning, _score",1
"from sklearn.metrics.cluster.supervised import contingency_matrix, check_clusterings, mutual_info_score, entropy",1
"from sklearn.utils import check_random_state, check_array",1
"from sklearn import cross_validation, naive_bayes, metrics, linear_model",1
#from sklearn import clone,1
"from sklearn.cross_validation import StratifiedShuffleSplit",1
#from sklearn.metrics import euclidean_distances,1
"from sklearn.decomposition import PCA, KernelPCA, RandomizedPCA",1
from sklearn.tree import DecisionTreeClassifier as DTC,1
"from sklearn.utils import check_arrays, safe_mask",1
"    # from sklearn.decomposition import RandomizedPCA",1
from sklearn.preprocessing.label import MultiLabelBinarizer,1
"from sklearn.cluster import MeanShift, DBSCAN",1
from sklearn.multiclass import predict_ovr,1
"from sklearn.cluster import KMeans, DBSCAN, MeanShift, SpectralClustering, Birch",1
"from sklearn.ensemble import RandomForestClassifier, RandomForestRegressor, ExtraTreesClassifier, ExtraTreesRegressor",1
"from sklearn.cross_validation import StratifiedKFold,LeavePLabelOut",1
"from sklearn.ensemble import RandomForestClassifier    ",1
from sklearn.exceptions import UndefinedMetricWarning,1
"from sklearn.linear_model import LinearRegression, RANSACRegressor",1
"from sklearn.preprocessing import scale, LabelEncoder",1
"        from sklearn import base",1
"from sklearn.linear_model import LogisticRegression, BayesianRidge",1
from sklearn.tree import DecisionTreeRegressor as cart,1
"from sklearn.cluster import AffinityPropagation, DBSCAN, AgglomerativeClustering",1
"from sklearn.decomposition import IncrementalPCA, FastICA, NMF",1
"    from sklearn import preprocessing ;",1
# from sklearn.model_selection import GridSearchCV,1
"from sklearn.manifold import MDS, SpectralEmbedding",1
from sklearn.utils.arrayfuncs import min_pos,1
"	from sklearn.neighbors import KernelDensity",1
"	from sklearn.feature_extraction.text import TfidfTransformer",1
"from sklearn.svm import SVR, NuSVR, LinearSVR",1
# from sklearn.datasets import make_multilabel_classification,1
"    from sklearn.preprocessing import MultiLabelBinarizer",1
"from sklearn.metrics import classification_report, f1_score",1
"from sklearn.base import BaseEstimator, is_classifier, clone",1
"from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix",1
"from sklearn.preprocessing import Imputer, StandardScaler",1
from sklearn.tree import UnSupervisedDecisionTreeClassifier,1
"from sklearn.preprocessing.data import StandardScaler, PolynomialFeatures",1
"from sklearn.mixture import GMM ",1
from sklearn.metrics.pairwise import manhattan_distances as manhat_dist,1
"from sklearn import preprocessing, grid_search",1
"    from sklearn.preprocessing import MinMaxScaler as MinMaxScalerR",1
"    from sklearn.preprocessing import StandardScaler as StandardScalerR",1
"from sklearn.datasets import fetch_mldata, fetch_20newsgroups",1
from sklearn import datasets as dt,1
from sklearn.decomposition import nmf,1
"        from sklearn.ensemble import AdaBoostClassifier",1
"from sklearn.cross_validation import train_test_split ",1
"from sklearn.covariance import fast_mcd, MinCovDet",1
"                from sklearn import tree",1
#from sklearn.svm import SVR,1
"from sklearn.datasets import load_boston",1
# from sklearn.grid_search import GridSearchCV,1
"from sklearn.utils import ConvergenceWarning",1
"from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score, precision_recall_curve",1
"from sklearn.cluster import AgglomerativeClustering",1
# from sklearn.datasets.base import Bunch,1
"from sklearn.covariance import GraphLasso, GraphLassoCV",1
"                from sklearn.gaussian_process import GaussianProcess",1
from sklearn.metrics import mean_square_error as mse,1
"        from sklearn.ensemble import RandomForestClassifier",1
# from sklearn.feature_extraction.image import grid_to_graph,1
"from sklearn.linear_model import LinearRegression, Lasso, ElasticNet, SGDRegressor, Ridge",1
"    # from sklearn.svm import SVR",1
from sklearn.cluster import SpectralClustering as sc,1
"# # from sklearn import datasets, svm, metrics",1
"    from sklearn.cross_validation import (cross_val_score,",1
from sklearn_evaluation import table,1
from sklearn.ensemble import RandomForestClassifier as RFClassifier,1
"        from sklearn.cluster import AffinityPropagation",1
from sklearn.preprocessing import PolynomialFeatures as PF,1
"from sklearn.linear_model import SGDClassifier,Perceptron,LogisticRegression,LinearRegression, Ridge, Lasso, LassoCV, ElasticNet",1
# from sklearn.decomposition import KernelPCA,1
"# #     from sklearn.metrics import precision_score, make_scorer",1
"# 	# # from sklearn.cluster import MeanShift as MS",1
from sklearn.utils.linear_assignment_ import linear_assignment,1
"from sklearn.ensemble import ExtraTreesClassifier,RandomForestClassifier",1
# from sklearn.tree import DecisionTreeRegressor #RandomForestClassifier #Classifier,1
from sklearn.utils.fixes import safe_copy,1
"        from sklearn.metrics import confusion_matrix,",1
from sklearn.utils.murmurhash import murmurhash3_32,1
"    #from sklearn.ensemble import AdaBoostClassifier",1
from sklearn.grid_search import IterGrid,1
"        # from sklearn import linear_model",1
from sklearn.metrics.ranking import roc_auc_score as auc_sklearn,1
"from sklearn.datasets.samples_generator import make_classification, make_blobs",1
"from sklearn.linear_model import Lasso, ElasticNet, Lars, OrthogonalMatchingPursuit, BayesianRidge, \",1
"from sklearn.base import TransformerMixin, BaseEstimator, ClassifierMixin",1
"    from sklearn.metrics import roc_curve as skroc",1
# from sklearn.utils.testing import all_estimators,1
"from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier, GradientBoostingClassifier",1
"#from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier",1
"    from sklearn.neighbors import NearestNeighbors",1
"#from sklearn import cross_validation, datasets, svm",1
"                from sklearn.cross_validation import KFold",1
from sklearn.svm.classes import NuSVR,1
from sklearn.linear_model.ransac import _dynamic_max_trials,1
"    >>> from sklearn.exceptions import NotFittedError",1
"from sklearn.datasets import fetch_mldata, load_iris, load_digits",1
"        from sklearn.cluster import k_means_",1
"from sklearn.feature_extraction import text, DictVectorizer",1
"from sklearn.linear_model.base import center_data, sparse_center_data, _rescale_data",1
from sklearn.manifold.spectral_embedding_ import _graph_is_connected,1
"    from sklearn.utils.fixes import bincount",1
"from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer, VectorizerMixin",1
"from sklearn.metrics import classification_report, r2_score",1
from sklearn.utils import issparse,1
"    from sklearn.metrics import make_scorer, mean_squared_error",1
from sklearn.decomposition.PCA import PCA,1
"from sklearn.preprocessing.label import LabelBinarizer, MultiLabelBinarizer",1
"from sklearn.ensemble import ExtraTreesClassifier, RandomForestClassifier, AdaBoostClassifier",1
from sklearn import svm                             # provides Support Vector Regressor class,1
#from sklearn.feature_selection import SelectFromModel,1
"from sklearn.metrics.metrics import precision_score, recall_score, confusion_matrix, classification_report, accuracy_score",1
from sklearn_theano.feature_extraction.caffe.googlenet import create_theano_expressions,1
from sklearn_theano.feature_extraction.caffe.googlenet_class_labels import _class_names,1
from sklearn.datasets.california_housing import fetch_california_housing,1
"from sklearn.cross_validation import cross_val_score,LeaveOneOut,\",1
from sklearn.metrics import accuracy_score as accus,1
"# from sklearn.feature_extraction.text import TfidfTransformer",1
"from sklearn.metrics import confusion_matrix, precision_recall_fscore_support, classification_report, f1_score",1
"from sklearn.svm import SVC, NuSVC, LinearSVC",1
from sklearn import cross_validation as skcv,1
from sklearn.linear_model import LinearRegression as skLinearRegression,1
"from sklearn.gaussian_process.kernels import Matern, ConstantKernel",1
from sklearn.metrics.pairwise import rbf_kernel as sklearn_rbf_kernel,1
"from sklearn.cross_validation import permutation_test_score, Bootstrap",1
>>> from sklearn import cross_validation,1
#from sklearn.tree import DecisionTreeClassifier,1
"    from sklearn.utils.multiclass import unique_labels",1
"from sklearn.metrics import adjusted_mutual_info_score, normalized_mutual_info_score",1
"    # from sklearn.datasets import dump_svmlight_file",1
from sklearn.tree import DecisionTreeRegressor #A decision tree regressor.,1
"from sklearn.metrics import homogeneity_score, completeness_score",1
"    from sklearn.tree import DecisionTreeClassifier, export_graphviz",1
"from sklearn.pipeline import Pipeline  ",1
"    from sklearn import cross_validation as cval",1
"	from sklearn.decomposition import NMF",1
"from sklearn.metrics import confusion_matrix as confmat",1
"from sklearn.linear_model import ElasticNet,Lasso,Ridge",1
"from sklearn.decomposition import LatentDirichletAllocation, NMF",1
"from sklearn.feature_selection.univariate_selection import SelectPercentile",1
#from sklearn.decomposition import RandomizedPCA,1
#from sklearn import linear_model,1
"from sklearn.metrics import log_loss, confusion_matrix",1
"        from sklearn import preprocessing, cross_validation, svm",1
from sklearn.ensemble import VotingClassifier #Soft Voting/Majority Rule classifier for unfitted estimators,1
"from sklearn.mixture import GMM, DPGMM",1
"    from sklearn.model_selection import check_cv",1
"        from sklearn.metrics.pairwise import manhattan_distances",1
"from sklearn.linear_model import LogisticRegressionCV, LogisticRegression",1
"from sklearn.metrics import f1_score, confusion_matrix",1
"from sklearn.metrics import (f1_score, precision_recall_curve, auc, confusion_matrix,",1
"from sklearn.metrics import precision_score, accuracy_score",1
# # from sklearn import mixture,1
#from sklearn.metrics import pairwise_distances_argmin,1
from sklearn.cluster import MiniBatchKMeans as MiniBatchKMeans_sk,1
from sklearn.kernel_approximation import Nystroem as NystroemR,1
"        from sklearn import cluster",1
from sklearn.cross_validation import LeaveOneLabelOut #Leave-One-Label_Out cross-validation iterator,1
"from sklearn.ensemble import AdaBoostRegressor, RandomForestRegressor",1
from sklearn.feature_selection import RFE #Feature ranking with recursive feature elimination.,1
from sklearn.feature_selection import RFECV #Feature ranking with recursive feature elimination and cross-validated selection of the best number of features.,1
from sklearn.linear_model import Lasso #Linear Model trained with L1 prior as regularizer aka the Lasso),1
from sklearn.linear_model import RidgeCV #Ridge regression with built-in cross-validation.,1
from sklearn.linear_model import SGDRegressor #Linear model fitted by minimizing a regularized empirical loss with SGD,1
from sklearn.manifold import locally_linear_embedding #Perform a Locally Linear Embedding analysis on the data.,1
from sklearn.metrics import auc #Compute Area Under the Curve AUC) using the trapezoidal rule,1
from sklearn.metrics import precision_score #Compute the precision,1
from sklearn.metrics.pairwise import pairwise_distances #Compute the distance matrix from a vector array X and optional Y.,1
#from sklearn_theano.feature_extraction import OverfeatClassifier,1
"from sklearn.cross_decomposition import PLSCanonical #PLSCanonical implements the 2 blocks canonical PLS of the original Wold algorithm [Tenenhaus 1998] p from 204, referred as PLS-C2A in [Wegelin 2000].",1
from sklearn.preprocessing import PolynomialFeatures #Generate polynomial and interaction features.,1
from sklearn.svm import NuSVR #Nu Support Vector Regression.,1
"from sklearn.metrics import precision_recall_fscore_support, precision_score, recall_score, f1_score",1
"from sklearn.ensemble import RandomForestClassifier	# Nearest Neighbor Classifier",1
from sklearn.metrics.pairwise import chi2_kernel as chi2_dist,1
"  from sklearn.feature_extraction.text import CountVectorizer",1
"from sklearn import preprocessing, linear_model, svm, grid_search",1
"from sklearn.utils import resample, shuffle",1
"from sklearn.linear_model import LinearRegression, Ridge ",1
"from sklearn.ensemble import (RandomForestClassifier, GradientBoostingClassifier, AdaBoostClassifier)",1
"from sklearn.decomposition import KernelPCA ",1
"            from sklearn.metrics.regression import r2_score",1
"                from sklearn.feature_selection import f_regression",1
from sklearn_pandas import cross_val_score,1
"from sklearn.externals.six import StringIO  # doctest: +SKIP",1
"    from sklearn.cross_val import StratifiedKFold",1
"from sklearn.feature_extraction.text import TfidfVectorizer ",1
from sklearn.svm.classes import SVR,1
"	from sklearn import linear_model, multiclass, pipeline",1
from sklearn.externals.joblib.parallel import multiprocessing,1
from sklearn.metrics  import mean_square_error,1
"from sklearn.linear_model import LinearRegression, Lasso, LassoCV, RandomizedLasso",1
"from sklearn.metrics import classification_report, confusion_matrix, f1_score",1
"            from sklearn.utils.arpack import eigsh, eigs",1
from sklearn.cross_validation import StratifiedShuffleSplit as SSS,1
"from sklearn.covariance import empirical_covariance, MinCovDet, \",1
"	from sklearn.metrics import accuracy_score",1
from sklearn.multiclass import OneVsRestClassifier as OVRC,1
"    from sklearn.metrics import zero_one",1
"from sklearn.base import clone, BaseEstimator, ClassifierMixin",1
"from sklearn.utils import check_array, as_float_array",1
"    from sklearn.cross_validation import KFold, train_test_split",1
"    from sklearn.datasets import make_friedman3",1
"    from sklearn.feature_selection.rfe import RFECV as RFECV_source",1
"    from sklearn import grid_search, datasets",1
"from sklearn.metrics import precision_score, recall_score, f1_score, roc_curve, auc, \",1
"    from sklearn.metrics import roc_auc_score, classification_report, make_scorer, f1_score, precision_score, \",1
"    from sklearn.base import BaseEstimator, TransformerMixin, clone",1
"from sklearn.decomposition import TruncatedSVD, FastICA",1
from sklearn.metrics import confusion_matrix as sk_confusion_matrix,1
"from sklearn.feature_selection import chi2, SelectKBest",1
"from sklearn.manifold.t_sne import (_joint_probabilities,",1
"from sklearn.feature_selection import SelectPercentile, SelectKBest, f_classif, chi2",1
"	# from sklearn.pipeline import Pipeline, make_pipeline",1
"from sklearn.ensemble import RandomForestRegressor #, RandomForestClassifier",1
"from sklearn.multiclass import OneVsRestClassifier, OneVsOneClassifier",1
"from sklearn import linear_model, naive_bayes, neighbors, svm",1
"from sklearn.datasets import fetch_20newsgroups_vectorized, fetch_20newsgroups",1
from sklearn.mixture.gmm import log_multivariate_normal_density,1
"        from sklearn.decomposition import PCA, KernelPCA",1
"from sklearn.linear_model import lasso_path, enet_path",1
"from sklearn.externals.six import string_types, with_metaclass",1
from sklearn import  metrics,1
"                from sklearn.cross_validation import ShuffleSplit",1
"from sklearn.linear_model import Lasso, Ridge, BayesianRidge",1
"from sklearn.base  import BaseEstimator, ClassifierMixin, TransformerMixin",1
from sklearn.cluster      import MiniBatchKMeans as MiniBatchKMeansSklearn,1
"from sklearn.base import BaseEstimator, BiclusterMixin",1
"from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score",1
"from sklearn.naive_bayes import GaussianNB ##Default(Tuned): Precision: 0.29453	Recall: 0.43650",1
"from sklearn import datasets, grid_search",1
"from sklearn.linear_model import Ridge, SGDRegressor",1
from sklearn.feature_selection import chi2 as metric_chi2,1
"		from sklearn.neighbors import KNeighborsClassifier",1
"  from sklearn.cross_validation import StratifiedKFold",1
"        # from sklearn.metrics import accuracy_score",1
"from sklearn.ensemble import RandomForestClassifier,ExtraTreesClassifier,GradientBoostingClassifier",1
"from sklearn.multiclass import OneVsOneClassifier,OutputCodeClassifier,OneVsRestClassifier",1
"from sklearn.utils.testing import assert_warns_message, assert_no_warnings",1
"    from sklearn.linear_model import LinearRegression, LogisticRegression",1
"from sklearn.decomposition import PCA#,FastICA #,TruncatedSVD",1
"from sklearn.metrics import f1_score, precision_score, recall_score, explained_variance_score, r2_score",1
from sklearn.preprocessing import OneHotEncoder as OHE,1
from sklearn_extensions.extreme_learning_machines.elm import GenELMClassifier,1
"from sklearn.ensemble import RandomForestClassifier ##Default: Precision: 0.47575	Recall: 0.20600, Longer time",1
from sklearn.utils.validation import safe_asarray,1
"from sklearn.cross_validation import check_cv, check_arrays, is_classifier, \",1
"from sklearn.metrics import precision_recall_fscore_support, confusion_matrix, precision_score, recall_score",1
"from sklearn import clone, metrics",1
"from sklearn.utils import check_random_state, gen_even_slices",1
"from sklearn_extensions.extreme_learning_machines.random_layer import RandomLayer, MLPRandomLayer",1
from sklearn.naive_bayes import GaussianNB as gnb,1
from sklearn.naive_bayes import BernoulliNB as bnb,1
"from sklearn.mixture import DPGMM, GMM, VBGMM",1
"    from sklearn.ensemble import GradientBoostingClassifier, RandomForestClassifier",1
"from sklearn.utils import check_X_y, check_array, check_consistent_length, check_random_state",1
"from sklearn.mixture import (_distribute_covar_matrix_to_match_cvtype,",1
"from sklearn.metrics import confusion_matrix, precision_recall_fscore_support,matthews_corrcoef, classification_report",1
"from sklearn import datasets, preprocessing, cross_validation, metrics",1
"from sklearn.externals.six import iteritems, string_types",1
"#from sklearn.qda import QDA",1
"from sklearn import cross_validation, datasets, svm, neighbors, linear_model",1
from sklearn.feature_selection.rfe import RFECV,1
"from sklearn.metrics import classification_report, zero_one_loss",1
"from sklearn.ensemble import BaggingClassifier,RandomForestClassifier",1
"from sklearn.cross_validation import train_test_data_split,cross_val_score,KFold",1
"from sklearn.metrics import precision_score, recall_score, accuracy_score, \",1
"from sklearn import decomposition, preprocessing",1
"from sklearn.utils.testing import assert_greater, assert_less, assert_equal, \",1
from sklearn_evaluation.plot import confusion_matrix,1
"from sklearn.decomposition import PCA,FastICA #,TruncatedSVD",1
"from sklearn.metrics.scorer import check_scoring, get_scorer",1
"        from sklearn.preprocessing import PolynomialFeatures",1
from sklearn    import preprocessing,1
"from sklearn.cross_validation import ShuffleSplit, cross_val_predict, cross_val_score",1
"  # from sklearn import cross_validation",1
"                from sklearn.neighbors import KNeighborsClassifier",1
"	from sklearn.pipeline import Pipeline",1
#from sklearn.metrics import silhouette_score,1
from sklearn.feature_extraction.text import TfidfTransformer  # transfer occurrences into tf or tfidf,1
"from sklearn_pmml.convert import Schema, ModelMode",1
"from sklearn.linear_model import LinearRegression, BayesianRidge, LarsCV",1
"from sklearn.multiclass import OneVsRestClassifier,OneVsOneClassifier,\",1
from sklearn.metrics.pairwise import pairwise_distances as pwdist,1
"from sklearn.metrics import (average_precision_score, brier_score_loss,",1
"from sklearn import preprocessing, cross_validation, metrics, decomposition",1
"from sklearn.cluster import DBSCAN, SpectralClustering, MeanShift, estimate_bandwidth, KMeans",1
"        from sklearn.ensemble import GradientBoostingRegressor",1
"        from sklearn.linear_model import ElasticNet",1
"from sklearn import ensemble, svm, tree, naive_bayes",1
"    from sklearn.neighbors import BallTree, NearestNeighbors",1
"from sklearn.cross_validation import train_test_split, KFold, StratifiedShuffleSplit",1
from sklearn.gaussian_process import GaussianProcess as GP,1
from sklearn import tree as sktree,1
"    from sklearn.model_selection._search import BaseSearchCV",1
"from sklearn.feature_selection import SelectFpr, SelectKBest",1
from sklearn.datasets import make_biclusters,1
from sklearn import linear_model as skl_lm,1
"from sklearn.mixture import DPGMM, GMM",1
from sklearn.tree._tree import Tree,1
"from sklearn.cross_validation import KFold, PredefinedSplit",1
from sklearn.covariance import empirical_covariance #Computes the Maximum likelihood covariance estimator,1
from sklearn.covariance import ledoit_wolf #Estimates the shrunk Ledoit-Wolf covariance matrix.,1
from sklearn.cross_validation import LabelShuffleSplit #Shuffle-Labels-Out cross-validation iterator,1
from sklearn.decomposition import fastica #Perform Fast Independent Component Analysis.,1
from sklearn.decomposition import sparse_encode #Sparse coding,1
from sklearn.ensemble import RandomForestRegressor #A random forest regressor.,1
from sklearn.linear_model import ARDRegression #Bayesian ARD regression.,1
from sklearn.linear_model import PassiveAggressiveClassifier #Passive Aggressive Classifier,1
from sklearn.metrics import accuracy_score #Accuracy classification score.,1
from sklearn.metrics import classification_report #Build a text report showing the main classification metrics,1
from sklearn.metrics import jaccard_similarity_score #Jaccard similarity coefficient score,1
from sklearn.metrics import roc_auc_score #Compute Area Under the Curve AUC) from prediction scores,1
from sklearn.utils.validation import NonBLASDotWarning,1
#from sklearn.cross_decomposition import CCA as CCA,1
"from sklearn import svm,datasets;",1
"from sklearn.ensemble import RandomForestRegressor,RandomForestClassifier",1
"    from sklearn import linear_model  ",1
from sklearn.decomposition import NMF as SKNMF,1
"from sklearn.metrics import fbeta_score, confusion_matrix, roc_curve, get_scorer",1
from sklearn.cross_validation import cross_val_score #validation stats from SKlearn,1
"        from sklearn.datasets import make_classification",1
#from sklearn.ensemble import AdaBoostClassifier,1
"from sklearn.base import is_classifier, clone, BaseEstimator",1
"from sklearn.metrics import confusion_matrix, precision_recall_curve, precision_recall_fscore_support, average_precision_score",1
"from sklearn.utils import check_random_state, as_float_array, deprecated",1
"    from sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor, ExtraTreeClassifier",1
from sklearn.metrics import mutual_info_score #Mutual Information between two clusterings,1
"  from sklearn.metrics import accuracy_score, mean_squared_error",1
"from sklearn.datasets import load_iris, load_breast_cancer, load_boston",1
"        from sklearn.feature_extraction import DictVectorizer",1
"    from sklearn import cross_validation, datasets",1
"from sklearn import decomposition, metrics, cross_validation, neighbors",1
"from sklearn.preprocessing import LabelEncoder,OneHotEncoder",1
"from sklearn import svm, cross_validation",1
"from sklearn.metrics import accuracy_score, coverage_error, label_ranking_average_precision_score",1
from sklearn.utils.sparsefuncs_fast import assign_rows_csr,1
"		from sklearn.naive_bayes import GaussianNB",1
#    from sklearn.neighbors import KNeighborsClassifier,1
#    from sklearn.cross_validation import cross_val_score,1
"from sklearn import linear_model, externals",1
from sklearn.manifold import _barnes_hut_tsne,1
from sklearn.preprocessing import MinMaxScaler as Scaler,1
"from sklearn.grid_search import ParameterGrid, ParameterSampler",1
"from sklearn.linear_model import LassoLarsCV",1
from sklearn.neighbors import kd_tree,1
"from sklearn import linear_model, preprocessing, svm, ensemble",1
"    from sklearn.utils.extmath import (safe_sparse_dot, logsumexp, squared_norm)",1
"    from sklearn.ensemble import ExtraTreesClassifier as ET",1
"from sklearn.metrics import pairwise_kernels, pairwise_distances",1
"from sklearn import metrics, cross_validation, linear_model, svm, preprocessing",1
from sklearn.svm import l1_min_c,1
"from sklearn.linear_model import LassoLarsIC  # , Lasso, LassoCV, LassoLarsCV",1
"from sklearn.manifold import MDS, TSNE, SpectralEmbedding",1
"	from sklearn.preprocessing import Imputer",1
"    # from sklearn.preprocessing import scale",1
"from sklearn.cross_validation import KFold, StratifiedKFold, cross_val_score",1
from sklearn.cross_validation import check_random_state,1
"from sklearn.datasets.samples_generator import (make_classification, )",1
from sklearn.decomposition import non_negative_factorization,1
"from sklearn.cross_validation import cross_val_score, Bootstrap",1
"from sklearn import preprocessing, cluster",1
"from sklearn.metrics import confusion_matrix,precision_recall_fscore_support;",1
"from sklearn import svm, neighbors, tree, ensemble, naive_bayes, lda, qda, cluster, linear_model",1
"    from sklearn.ensemble import ExtraTreesClassifier, RandomForestClassifier",1
"  from sklearn.cross_validation import KFold",1
from sklearn.datasets import load_iris;,1
"from sklearn.linear_model import Ridge, LinearRegression, Lars, Lasso",1
"                from sklearn.feature_extraction.image import extract_patches",1
"from sklearn_extensions.kernel_sgd.kernel_sgd import HingeLoss, KernelSGD, GaussianKernel",1
from sklearn.metrics.pairwise import additive_chi2_kernel #Computes the additive chi-squared kernel between observations in X and Y,1
from sklearn.metrics.pairwise import linear_kernel #Compute the linear kernel between X and Y.,1
from sklearn.metrics.pairwise import laplacian_kernel #Compute the laplacian kernel between X and Y.,1
from sklearn.preprocessing import RobustScaler #Scale features using statistics that are robust to outliers.,1
"from sklearn.manifold import TSNE",1
from sklearn.ensemble import GradientBoostingClassifier as GBM,1
"from sklearn.neighbors import BallTree",1
"        from sklearn.cross_validation import check_cv as sklearn_check_cv",1
from sklearn.utils.fixes import signature,1
"from sklearn.tree import * # DecisionTreeClassifier, DecisionTreeRegressor",1
"from sklearn.pipeline import Pipeline                                        ",1
"from sklearn.tree import _tree, export_graphviz",1
"from sklearn.datasets import make_classification, make_regression",1
from sklearn.feature_selection.univariate_selection import SelectPercentile,1
"from sklearn import datasets, svm, neighbors, linear_model, naive_bayes, tree, ensemble",1
"from sklearn import preprocessing as pp",1
"from sklearn.metrics import average_precision_score",1
"        from sklearn.datasets.base import Bunch",1
from sklearn_extensions import *,1
"from sklearn_pmml.convert.model import EstimatorConverter, ModelMode, Schema",1
"from sklearn.linear_model import (LogisticRegression,",1
"from sklearn.metrics.pairwise import rbf_kernel, \",1
"from sklearn.cross_validation import train_test_split, StratifiedKFold, cross_val_score, StratifiedShuffleSplit",1
"from sklearn.ensemble import AdaBoostClassifier, GradientBoostingClassifier",1
"        from sklearn.cross_validation import LeaveOneOut, KFold",1
"from sklearn.metrics.pairwise import rbf_kernel",1
"from sklearn.metrics import confusion_matrix, precision_score, recall_score, f1_score",1
from sklearn.metrics import adjusted_mutual_info_score #Adjusted Mutual Information between two clusterings,1
"from sklearn.feature_extraction.text import HashingVectorizer, TfidfVectorizer",1
"from sklearn.svm.classes import LinearSVC",1
"from sklearn.cross_validation import KFold, LeaveOneLabelOut",1
from sklearn.covariance import GraphLassoCV #Sparse inverse covariance w/ cross-validated choice of the l1 penalty,1
from sklearn.covariance import LedoitWolf #LedoitWolf Estimator,1
from sklearn.covariance import ShrunkCovariance #Covariance estimator with shrinkage,1
from sklearn.cross_validation import KFold #K-Folds cross validation iterator.,1
from sklearn.cross_validation import PredefinedSplit #Predefined split cross validation iterator,1
from sklearn.decomposition import FastICA #FastICA: a fast algorithm for Independent Component Analysis.,1
from sklearn.decomposition import TruncatedSVD #Dimensionality reduction using truncated SVD aka LSA).,1
from sklearn.ensemble import BaggingClassifier #A Bagging classifier.,1
from sklearn.linear_model import PassiveAggressiveRegressor #Passive Aggressive Regressor,1
from sklearn.linear_model import TheilSenRegressor #Theil-Sen Estimator: robust multivariate regression model.,1
from sklearn.manifold import Isomap #Isomap Embedding,1
"from sklearn.preprocessing import StandardScaler,Normalizer",1
from sklearn.metrics import homogeneity_completeness_v_measure #Compute the homogeneity and completeness and V-Measure scores at once,1
"from sklearn.metrics.pairwise import euclidean_distances #Considering the rows of X and Y=X) as vectors, compute the distance matrix between each pair of vectors.",1
from sklearn.mixture import VBGMM #Variational Inference for the Gaussian Mixture Model,1
from sklearn.preprocessing import OneHotEncoder #Encode categorical integer features using a one-hot aka one-of-K scheme.,1
"from sklearn import gaussian_process",1
from sklearn.linear_model import SGDClassifier as scikitSGD,1
from sklearn_model_eval.report import generate_report,1
"from sklearn import tree,preprocessing,grid_search,cross_validation,ensemble",1
from sklearn.naive_bayes import GaussianNB as GNB,1
"		 		# 	from sklearn.preprocessing import normalize",1
from sklearn.mixture.gmm import GMM,1
"from sklearn.neighbors import * # KNeighborsClassifier, KNeighborsRegressor",1
"from sklearn.feature_selection import SelectKBest, chi2                      ",1
"#    from sklearn.cluster import SpectralClustering, spectral_clustering",1
from sklearn.cluster.k_means_ import k_means,1
"#from sklearn.metrics import roc_curve, auc, precision_recall_curve",1
"from sklearn.datasets import load_digits ",1
from sklearn.cross_validation import cross_val_score as k_fold_CV,1
"from sklearn.svm import (SVC,LinearSVC)",1
"from sklearn.feature_extraction.text import TfidfVectorizer, HashingVectorizer",1
"from sklearn import preprocessing as pp ",1
"from sklearn.tree._tree import TREE_UNDEFINED, TREE_LEAF",1
from sklearn import feature_extraction as fe,1
"    from sklearn.datasets.samples_generator import (make_classification, make_regression)",1
"from sklearn.metrics import accuracy_score, precision_score,\",1
"from sklearn.svm import LinearSVC #nice",1
from sklearn.discriminant_analysis import _cov,1
"from sklearn.decomposition import FastICA, NMF, DictionaryLearning",1
"    #from sklearn.ensemble import GradientBoostingClassifier",1
from sklearn.utils.sparsetools import minimum_spanning_tree,1
"from sklearn.covariance import fast_mcd, ledoit_wolf, oas, empirical_covariance",1
"                    from sklearn.tree import DecisionTreeClassifier",1
"#from sklearn.ensemble import RandomForestRegressor,GradientBoostingRegressor",1
"from sklearn.metrics import recall_score, auc_score",1
# from sklearn.metrics.scorer import check_scoring,1
"    from sklearn.preprocessing import StandardScaler, LabelBinarizer",1
"from sklearn.hmm import _BaseHMM, GaussianHMM",1
"from sklearn.linear_model import BayesianRidge, LogisticRegression",1
"        # from sklearn.naive_bayes import BernoulliNB",1
"from sklearn.datasets import load_digits,load_iris,load_diabetes,fetch_covtype ",1
from sklearn.metrics.scorer import make_scorer,1
"    >>> from sklearn.neighbors import radius_neighbors_graph",1
"from sklearn.base import TransformerMixin",1
# from sklearn.svm import SVR as Regressor,1
from sklearn.preprocessing import StandardScaler as ZScore,1
"from sklearn.decomposition import PCA # CA from PCA function",1
"from sklearn.feature_selection import SelectFpr, f_classif",1
"	from sklearn.metrics import recall_score",1
"from sklearn.externals import joblib  ",1
from sklearn.ensemble import GradientBoostingClassifier as Gbc,1
from sklearn.decomposition.nmf import _nls_subproblem,1
from sklearn.manifold.t_sne import trustworthiness,1
"from sklearn.cluster import MiniBatchKMeans, KMeans, Ward, AffinityPropagation, DBSCAN",1
"from sklearn.datasets import make_classification, load_digits, make_blobs",1
from sklearn.neighbors import KNeighborsClassifier  # import class,1
"from sklearn import linear_model, grid_search, cross_validation",1
"from sklearn.metrics import confusion_matrix, zero_one_loss",1
from sklearn.grid_search      import RandomizedSearchCV,1
"from sklearn.metrics          import classification_report, confusion_matrix",1
"from sklearn.preprocessing import scale, LabelEncoder, OneHotEncoder",1
"from sklearn.base import (BaseEstimator, ClassifierMixin, clone)",1
"        from sklearn.utils.extmath import cartesian",1
"    from sklearn.cross_validation import StratifiedKFold, KFold, LabelKFold, LabelShuffleSplit,  StratifiedShuffleSplit, ShuffleSplit, train_test_split, \",1
"    from sklearn.preprocessing import StandardScaler, PolynomialFeatures, OneHotEncoder, RobustScaler",1
"    from sklearn.cross_decomposition import PLSRegression, PLSSVD",1
"from sklearn.preprocessing import Normalizer, StandardScaler",1
"    Taken from sklearn.utils import gen_even_slices",1
"from sklearn.datasets import  make_classification, make_regression",1
"from sklearn.datasets import load_files",1
"from sklearn.cluster import SpectralClustering, Ward, DBSCAN",1
"from sklearn.metrics import accuracy_score as accs",1
"from sklearn.preprocessing import MaxAbsScaler, MinMaxScaler, RobustScaler, StandardScaler",1
"from sklearn.ensemble import AdaBoostClassifier     ",1
"    from sklearn.cross_validation import StratifiedKFold",1
"from sklearn.metrics import mean_squared_error, confusion_matrix, classification_report",1
from sklearn.linear_model import  LinearRegression,1
"        from sklearn.preprocessing.label import LabelEncoder",1
from sklearn_theano.feature_extraction import get_all_overfeat_labels,1
"from sklearn.metrics import precision_score, recall_score, roc_auc_score",1
from sklearn.datasets import load_lfw_people,1
"from sklearn.cluster import Birch, KMeans, AgglomerativeClustering",1
"from sklearn.feature_selection import SelectKBest, f_classif, f_regression",1
"#    from sklearn.decomposition import PCA,NMF",1
from sklearn.utils.extmath import squared_norm,1
from sklearn import datasets #diversas bases de dados pre-carregadas,1
"    from sklearn import linear_model as lm",1
"from sklearn.cross_validation import cross_val_score, StratifiedKFold,\",1
"from sklearn.utils import check_random_state, gen_batches",1
"    # from sklearn.linear_model.ridge import RidgeCV",1
"#from sklearn.metrics import precision_score, accuracy_score, recall_score, f1_score",1
from sklearn.decomposition import KernelPCA as KPCA,1
"from sklearn.utils.extmath import randomized_range_finder, safe_sparse_dot",1
"    from sklearn.datasets import load_boston, load_diabetes, load_iris",1
"    from sklearn.preprocessing import Imputer",1
# from sklearn.decomposition import PCA as sklearnPCA,1
"#from sklearn.externals.six import StringIO  ",1
from sklearn.base import clone as _clone,1
from sklearn.datasets.twenty_newsgroups import strip_newsgroup_footer,1
"from sklearn.cross_validation import (cross_val_score,",1
"from sklearn.linear_model import LinearRegression, SGDClassifier",1
"from sklearn.pipeline import FeatureUnion, Pipeline, make_union, make_pipeline",1
"from sklearn.datasets import make_classification, make_blobs",1
"from sklearn.metric import roc_auc_score,roc_curve",1
from sklearn.externals import joblib #joblib is sklearn's pickle,1
"        from sklearn.mixture import GMM as GMMEval",1
"    from sklearn.tree._utils import _realloc_test",1
"from sklearn.linear_model import LogisticRegression, SGDClassifier,RandomizedLogisticRegression",1
"        from sklearn.grid_search import IterGrid as ParameterGrid",1
"from sklearn.metrics import precision_recall_fscore_support,confusion_matrix",1
"            from sklearn.cluster import MiniBatchKMeans",1
"from sklearn.utils import check_X_y, assert_all_finite, check_array",1
"from sklearn.metrics import normalized_mutual_info_score",1
"from sklearn.datasets import fetch_mldata, dump_svmlight_file",1
from sklearn.gaussian_process import GaussianProcess as GMM,1
from sklearn.ensemble import BaseEnsemble,1
"from sklearn.neighbors import NearestNeighbors as NN",1
"	from sklearn.svm import SVC ",1
from sklearn_theano.datasets import fetch_cifar_fully_connected_generated,1
from sklearn.feature_selection.univariate_selection import f_classif,1
"    from sklearn.cluster import KMeans",1
# from sklearn.metrics import jaccard_similarity_score,1
"from sklearn.cluster import AffinityPropagation, AgglomerativeClustering",1
"    #     from sklearn import manifold",1
"#from sklearn.qda import QDA ",1
"from sklearn.svm import SVC, LinearSVC, NuSVC, SVR, NuSVR, OneClassSVM",1
"from sklearn.cross_validation import BaseShuffleSplit, ShuffleSplit, StratifiedShuffleSplit",1
"from sklearn.linear_model import LogisticRegression,RandomizedLogisticRegression,LogisticRegressionCV",1
"    from sklearn.base import BaseEstimator, RegressorMixin",1
"# 	from sklearn.datasets import load_iris",1
"	from sklearn import datasets, neighbors, linear_model",1
from sklearn.preprocessing           import Normalizer,1
"from sklearn.decomposition import DictionaryLearning,MiniBatchDictionaryLearning",1
"	from sklearn.metrics import classification_report",1
from sklearn.feature_extraction.text import CountVectorizer as SKCountVectorizer,1
from sklearn.feature_extraction.text import TfidfVectorizer as SKTfidfVectorizer,1
from sklearn.metrics.pairwise import euclidean_distances # fast,1
from sklearn.feature_selection import f_classif as chi2,1
"    from sklearn.feature_selection import SelectPercentile",1
"#from sklearn import cluster, datasets",1
"    from sklearn.preprocessing import RobustScaler as RobustScalerR",1
"from sklearn.feature_extraction import text ",1
"from sklearn.metrics import auc_score, zero_one_loss, roc_curve",1
"from sklearn.externals.joblib import Parallel, delayed, load, dump",1
"    >>> from sklearn.neighbors import kneighbors_graph",1
"from sklearn.ensemble import RandomForestClassifier,\",1
"from sklearn.feature_selection import SelectPercentile, chi2",1
"from sklearn.externals.joblib import dump, load",1
"    from sklearn.linear_model import LassoLars ",1
from sklearn import linear_model as sklearn_linear_model,1
"    from sklearn.cross_validation import StratifiedKFold, cross_val_score",1
"    from sklearn.isotonic import IsotonicRegression",1
"    from sklearn.neighbors import KNeighborsClassifier, KNeighborsRegressor",1
"    from sklearn.feature_extraction import DictVectorizer, FeatureHasher",1
"from sklearn.cluster import SpectralClustering, DBSCAN",1
"from sklearn.feature_selection import SelectKBest, SelectPercentile, VarianceThreshold, chi2, f_classif, RFE",1
"        from sklearn.metrics import mean_absolute_error, mean_squared_error",1
"        from sklearn.decomposition import PCA, KernelPCA",1
"from sklearn import tree, neighbors, svm, ensemble, linear_model, svm",1
"from sklearn.preprocessing import LabelBinarizer      ",1
"from sklearn import svm, datasets, feature_selection, cross_validation, linear_model, neighbors",1
"from sklearn.datasets import load_iris, make_friedman1",1
"from sklearn.decomposition import KernelPCA",1
from sklearn.metrics.pairwise import pairwise_distances as sk_pd,1
"from sklearn.metrics import f1_score,precision_score,recall_score, accuracy_score",1
"from sklearn.metrics import make_scorer, r2_score, roc_auc_score",1
"from sklearn.preprocessing import scale #,minmax_scale",1
"from sklearn.covariance import OAS",1
"from sklearn.neighbors import NearestNeighbors, KDTree, BallTree",1
"from sklearn import svm, pipeline, base, metrics",1
from sklearn import ensemble                        # provides a Random Forest Regressor class,1
"from sklearn.multiclass import _fit_ovo_binary, check_consistent_length, np, Parallel, delayed",1
"    from sklearn.utils.multiclass import type_of_target",1
"            from sklearn.preprocessing import minmax_scale",1
"from sklearn.utils.validation import check_arrays, column_or_1d, array2d",1
"        from sklearn.metrics import mean_squared_error, mean_absolute_error",1
from sklearn.utils.graph import graph_shortest_path,1
"from sklearn.preprocessing import MultiLabelBinarizer,Imputer",1
#from sklearn.manifold.mds import *,1
"from sklearn.neighbors import RadiusNeighborsClassifier, NearestCentroid, KNeighborsClassifier",1
"from sklearn.linear_model.sgd_fast import SquaredLoss, SquaredHinge",1
"from sklearn.kernel_approximation import (RBFSampler,",1
"from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet, BayesianRidge, RANSACRegressor",1
"from sklearn.covariance import GraphLassoCV, empirical_covariance",1
"from sklearn.cluster import KMeans #, MiniBatchKMeans",1
"            from sklearn.metrics.classification import accuracy_score",1
"	from sklearn.datasets import make_regression",1
"from sklearn import preprocessing, metrics",1
# from sklearn.cluster import *,1
from sklearn.neighbors.base import NeighborsBase,1
"from sklearn.cluster import AffinityPropagation, KMeans, DBSCAN, \",1
"from sklearn import decomposition, cross_validation, grid_search, linear_model, metrics",1
# from sklearn.cluster import Ward,1
"from sklearn import cross_validation, datasets, svm",1
"from sklearn.metrics import classification_report, precision_score, recall_score",1
"from sklearn.feature_selection import VarianceThreshold, SelectKBest, f_classif",1
"from sklearn.svm import LinearSVR, SVC, LinearSVC",1
"        from sklearn.metrics import explained_variance_score",1
"    from sklearn import preprocessing ",1
"from sklearn import decomposition, ensemble",1
"from sklearn.ensemble import ExtraTreesClassifier, ExtraTreesRegressor",1
"    from sklearn.metrics import r2_score",1
"  from sklearn.metrics.pairwise import linear_kernel",1
"                from sklearn.cross_validation import StratifiedKFold",1
"from sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor",1
"    from sklearn.base import BaseEstimator, ClassifierMixin, RegressorMixin",1
"            from sklearn import preprocessing",1
#from sklearn.cross_validation import ShuffleSplit,1
#    from sklearn.datasets import load_iris,1
"from sklearn.model_selection import ShuffleSplit, KFold, GridSearchCV",1
"	from sklearn.metrics import r2_score",1
#from sklearn.covariance import EllipticEnvelope,1
"	from sklearn.preprocessing import Normalizer",1
#from sklearn import datasets,1
"from sklearn.isotonic import *",1
"from sklearn.tree.tree import DecisionTreeRegressor, DTYPE, DOUBLE",1
"from sklearn.ensemble import (ExtraTreesClassifier,",1
"    from sklearn.datasets import fetch_lfw_people",1
"from sklearn.ensemble import (RandomForestClassifier, ExtraTreesClassifier,",1
from sklearn.cluster import DBSCAN as DB,1
"  from sklearn import metrics",1
#    from sklearn.cluster import KMeans,1
from sklearn.feature_extraction.text import (CountVectorizer,1
"from sklearn import svm, tree, linear_model, ensemble",1
"from sklearn import  pipeline#, metrics, grid_search,decomposition,",1
from sklearn import metrics as met,1
from sklearn_evaluation.metrics import __binarize_scores_at_percent as binarize_scores_at_percent,1
"from sklearn.base import clone ",1
from sklearn.learning_curve import *,1
"from sklearn.naive_bayes import MultinomialNB,BernoulliNB",1
from sklearn.metrics.pairwise import pairwise_distances as pdist,1
from sklearn.datasets.base import clear_data_home,1
"from sklearn.linear_model import RandomizedLasso,RandomizedLogisticRegression",1
"from sklearn.metrics import f1_score, accuracy_score, precision_score, recall_score, classification_report",1
"    from sklearn.pipeline import Pipeline, FeatureUnion",1
"    from sklearn.ensemble import VotingClassifier",1
from sklearn.manifold.t_sne import _joint_probabilities_nn,1
from sklearn.manifold.t_sne import _kl_divergence_bh,1
"from sklearn.linear_model import LogisticRegressionCV #Logistic Regression CV aka logit, MaxEnt) classifier.",1
"	from sklearn.mixture import GMM",1
"    from sklearn.utils.extmath import logsum",1
"    from sklearn.utils.extmath import logsumexp as logsum",1
"from sklearn.metrics import confusion_matrix, classification_report, roc_auc_score, roc_curve, precision_recall_curve",1
from sklearn.datasets import make_spd_matrix,1
"            from sklearn.utils import shuffle",1
"from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier, BaggingClassifier, AdaBoostClassifier",1
from sklearn.covariance import shrunk_covariance #Calculates a covariance matrix shrunk on the diagonal,1
from sklearn.cross_validation import StratifiedShuffleSplit #Stratified ShuffleSplit cross validation iterator,1
from sklearn.cross_validation import cross_val_score #Evaluate a score by cross-validation,1
from sklearn.cross_validation import check_cv #Input checker utility for building a CV in a user friendly way.,1
from sklearn.ensemble import RandomTreesEmbedding #An ensemble of totally random trees.,1
from sklearn.feature_selection import f_classif #Compute the ANOVA F-value for the provided sample.,1
from sklearn.metrics.classification import _check_targets,1
from sklearn.linear_model import MultiTaskElasticNet #Multi-task ElasticNet model trained with L1/L2 mixed-norm as regularizer,1
from sklearn.linear_model import RANSACRegressor #RANSAC RANdom SAmple Consensus) algorithm.,1
from sklearn.linear_model import RidgeClassifierCV #Ridge classifier with built-in cross-validation.,1
from sklearn.mixture import GMM #Gaussian Mixture Model,1
from sklearn.neighbors import KNeighborsRegressor #Regression based on k-nearest neighbors.,1
from sklearn.neighbors import NearestCentroid #Nearest centroid classifier.,1
from sklearn.cross_decomposition import CCA #CCA Canonical Correlation Analysis.,1
from sklearn.svm import LinearSVR #Linear Support Vector Regression.,1
from sklearn.ensemble import GradientBoostingClassifier as scikitGBC,1
"from sklearn import grid_search, preprocessing",1
"#from sklearn.base import TransformerMinin, BaseEstimator",1
"from sklearn.cluster.mean_shift_ import mean_shift, estimate_bandwidth",1
from sklearn import kernel_ridge,1
"    from sklearn.decomposition import PCA, FastICA",1
"from sklearn.metrics import label_ranking_average_precision_score, average_precision_score",1
from sklearn.model_selection import ShuffleSplit,1
from sklearn.metrics.scorer import _ProbaScorer,1
"  from sklearn.utils.linear_assignment_ import linear_assignment",1
"from sklearn.metrics.pairwise import pairwise_distances, paired_distances",1
"        from sklearn.linear_model import SGDClassifier",1
"from sklearn.cross_validation import StratifiedKFold ",1
"# from sklearn.externals.joblib import Parallel, delayed, cpu_count",1
"from sklearn.preprocessing import MinMaxScaler, Normalizer",1
"from sklearn.metrics.pairwise import cosine_similarity ",1
# from sklearn.metrics import r2_score as score,1
"from sklearn.datasets import load_iris, load_boston",1
"	from sklearn import preprocessing, feature_extraction",1
"    from sklearn.datasets import load_svmlight_file  # @UnresolvedImport",1
"	from sklearn.feature_selection import SelectKBest",1
# from sklearn.ensemble import GradientBoostingRegressor as GradBoost,1
"from sklearn.utils.testing import assert_false, assert_raises, assert_true",1
"#from sklearn.svm import SVR",1
"	from sklearn.metrics.pairwise import euclidean_distances",1
"      from sklearn.pipeline import make_pipeline",1
"from sklearn.metrics.pairwise import check_pairwise_arrays, euclidean_distances",1
"from sklearn.externals import joblib ",1
"from sklearn.svm import OneClassSVM, LinearSVC",1
"from sklearn import manifold, neighbors",1
"from sklearn.linear_model import Ridge, Lasso, ElasticNet, Lars, OrthogonalMatchingPursuit, \",1
from sklearn_model_eval.Logger import Logger,1
"            from sklearn.cluster import DBSCAN",1
"from sklearn.metrics import jaccard_similarity_score",1
from sklearn.linear_model import Ridge as _Ridge,1
"        from sklearn.feature_extraction.image import grid_to_graph",1
"2.	from sklearn.base import TransformerMixin",1
"from sklearn import svm, cross_validation, feature_selection",1
from sklearn.cluster import AgglomerativeClustering as hcluster,1
"from sklearn.cross_validation import cross_val_score, KFold, train_test_split",1
"from sklearn.preprocessing import Binarizer, MinMaxScaler",1
"from sklearn import linear_model, cross_validation, svm, metrics, grid_search, preprocessing",1
"from sklearn.externals.six.moves import map, zip, xrange",1
"# from sklearn.metrics import f1_score, classification_report",1
"from sklearn.preprocessing import StandardScaler, OneHotEncoder, LabelEncoder, PolynomialFeatures",1
"    from sklearn import svm, linear_model",1
"from sklearn.linear_model.randomized_l1 import lasso_stability_path, \",1
"from sklearn import linear_model, tree, svm",1
"from sklearn.metrics import (brier_score_loss, precision_score, recall_score,",1
"  from sklearn.preprocessing import scale",1
"from sklearn import base, metrics, linear_model",1
"    from sklearn import datasets, metrics, svm, cross_validation",1
"from sklearn import (svm, preprocessing)",1
"            from sklearn.grid_search import ParameterGrid",1
"from sklearn.feature_selection import SelectPercentile, f_classif, SelectFwe, SelectFdr",1
from sklearn.naive_bayes import MultinomialNB #GaussianNB,1
from sklearn.cross_validation import LeavePOut,1
"                from sklearn.cluster import MiniBatchKMeans",1
from sklearn.grid_search        import GridSearchCV,1
"    from sklearn.utils.validation import check_array, check_random_state",1
"from sklearn import (manifold, decomposition,",1
"from sklearn.datasets.base import load_diabetes, load_boston",1
"from sklearn.datasets import load_digits, load_iris, make_classification, make_gaussian_quantiles",1
"    from sklearn.preprocessing import MaxAbsScaler as MaxAbsScalerR",1
"from sklearn import svm, cross_validation, tree, ensemble",1
"from sklearn import svm, preprocessing, tree, cross_validation",1
"      from sklearn.feature_extraction.text import CountVectorizer",1
"from sklearn.datasets import (fetch_mldata, load_boston, load_iris,",1
from sklearn.cluster._feature_agglomeration import AgglomerationTransform,1
"from sklearn.preprocessing import Normalizer",1
"from sklearn.feature_extraction.text import strip_accents_ascii, strip_accents_unicode",1
"		from sklearn.grid_search import GridSearchCV",1
"		from sklearn.cross_validation import cross_val_score",1
from sklearn.metrics import mean_squared_error as score,1
"from sklearn import ensemble, datasets",1
"from sklearn.linear_model import (LassoCV, LassoLarsCV, LassoLarsIC,",1
"from sklearn.metrics import confusion_matrix, accuracy_score, classification_report, precision_score",1
"from sklearn.ensemble.weight_boosting import ClassifierMixin, BaseWeightBoosting",1
from sklearn.datasets.base import load_digits,1
"from sklearn import cross_validation, metrics",1
"from sklearn.feature_selection import RFECV, RFE",1
"	from sklearn.metrics import roc_auc_score",1
"from sklearn.linear_model import (LogisticRegression, ",1
"    from sklearn.externals import joblib",1
"from sklearn import (svm, ensemble, tree,",1
"    from sklearn.tree import DecisionTreeClassifier",1
"from sklearn.neighbors import KNeighborsClassifier, RadiusNeighborsClassifier, KNeighborsRegressor, \",1
"	# from sklearn.ensemble import RandomForestRegressor",1
"from sklearn.cluster import AffinityPropagation, DBSCAN, KMeans",1
"from sklearn.feature_extraction import (DictVectorizer,)",1
"from sklearn import decomposition, metrics, cross_validation, naive_bayes",1
from sklearn.svm import SVC as skSVC,1
"            from sklearn.decomposition import PCA, RandomizedPCA",1
"from sklearn import neighbors, datasets, linear_model, svm",1
from sklearn.linear_model import LogisticRegression as MaxEnt,1
"    # from sklearn.feature_extraction import image",1
"#from sklearn import linear_model, datasets",1
# from sklearn import grid_search,1
"    from sklearn.naive_bayes import (BernoulliNB, GaussianNB, MultinomialNB)",1
from sklearn.linear_model.perceptron import Perceptron,1
"    from sklearn.feature_extraction.image import extract_patches, _compute_n_patches",1
#from sklearn.preprocessing import Imputer   # get rid of nan,1
"                from sklearn.grid_search import GridSearchCV",1
"from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, GradientBoostingRegressor, \",1
"from sklearn import (svm, neighbors,",1
"  from sklearn.preprocessing import PolynomialFeatures",1
"from sklearn.cross_validation import StratifiedShuffleSplit, cross_val_score, train_test_split",1
"from sklearn.decomposition import PCA,ProbabilisticPCA, RandomizedPCA, KernelPCA, SparsePCA, TruncatedSVD ,NMF",1
"from sklearn.metrics import auc, roc_auc_score, roc_curve",1
from sklearn import preprocessing #to transform the feature labels,1
from sklearn.feature_selection.univariate_selection import chi2,1
"from sklearn.metrics import auc, make_scorer, precision_recall_curve",1
"from sklearn import metrics, svm, ensemble, linear_model, preprocessing",1
"    from sklearn.cluster import DBSCAN",1
"from sklearn import decomposition, feature_selection, svm, linear_model, naive_bayes, tree",1
from sklearn.datasets import load_breast_cancer,1
"from sklearn.cluster import DBSCAN, AffinityPropagation, estimate_bandwidth, MeanShift",1
"from sklearn.base import RegressorMixin ",1
from sklearn.externals import joblib as jl,1
"from sklearn.preprocessing import OneHotEncoder, LabelEncoder, StandardScaler #used to convert categories to one of k ",1
"from sklearn.metrics.pairwise import linear_kernel, polynomial_kernel,\",1
"from sklearn.feature_selection import SelectKBest, VarianceThreshold",1
"from sklearn.utils.testing import (assert_almost_equal,",1
"        #from sklearn.preprocessing import scale",1
"from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier, ExtraTreesClassifier ",1
"from sklearn import datasets, svm, pipeline",1
"from sklearn.covariance import MinCovDet, empirical_covariance, ledoit_wolf",1
"  from sklearn.grid_search import GridSearchCV",1
"# 	# # from sklearn.cluster import AffinityPropagation as AP",1
"# 	# # from sklearn.cluster import DBSCAN",1
"from sklearn.linear_model import LassoLarsCV, LogisticRegressionCV",1
"    # from sklearn.linear_model import SGDRegressor",1
"from sklearn.calibration import CalibratedClassifierCV, calibration_curve",1
"from sklearn.externals.six.moves import xrange, reduce",1
from sklearn.utils.testing import uninstall_mldata_mock,1
# from sklearn.ensemble import ExtraTreesClassifier,1
from sklearn.linear_model.logistic import LogisticRegressionCV,1
"from sklearn.cross_validation import KFold, LeaveOneOut",1
"from sklearn.externals.joblib import Memory",1
"    #from sklearn.ensemble import ExtraTreesClassifier",1
"from sklearn.decomposition._online_lda import (_dirichlet_expectation_1d,",1
"from sklearn.metrics import recall_score, f1_score, roc_curve",1
"from sklearn.linear_model.base import (BaseEstimator, SparseCoefMixin,",1
"# from sklearn.linear_model import LogisticRegression",1
from sklearn.linear_model import ElasticNetCV # NOT IN BOOK,1
from sklearn.neighbors import NearestNeighbors as nn,1
"    #from sklearn.kernel_approximation import RBFSampler",1
"from sklearn.decomposition import PCA, KernelPCA",1
from sklearn.externals.six.moves import xrange as range,1
"from sklearn.preprocessing import StandardScaler, RobustScaler",1
from sklearn.linear_model.stochastic_gradient import SGDRegressor,1
from sklearn.manifold.spectral_embedding_ import SpectralEmbedding,1
"  from sklearn.exceptions import NotFittedError",1
"  from sklearn.tree import DecisionTreeClassifier",1
"    from sklearn.datasets import load_iris",1
# from sklearn.datasets import load_files,1
from sklearn.utils.fixes import expit as logistic_sigmoid,1
"from sklearn.linear_model import  LogisticRegression",1
"from sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier",1
"from sklearn.kernel_approximation import RBFSampler, AdditiveChi2Sampler",1
"from sklearn.cross_validation import KFold, LabelKFold",1
"from sklearn.linear_model import Ridge, LinearRegression as LR",1
"    >>> from sklearn.utils.arpack import eigs",1
"from sklearn.cross_validation import KFold        ",1
from sklearn.feature_extraction.text import Vectorizer,1
"from sklearn.metrics import precision_recall_fscore_support, roc_auc_score, log_loss",1
"#from sklearn.linear_model import SGDClassifier",1
"from sklearn.multiclass import OneVsOneClassifier",1
# # from sklearn.cross_validation import train_test_split,1
"from sklearn.metrics import roc_auc_score, confusion_matrix",1
"    #from sklearn.feature_extraction.text import CountVectorizer",1
"        from sklearn.decomposition import RandomizedPCA as PCA",1
from sklearn.cluster import SpectralClustering as Spectral,1
