match,count
RandomForestClassifier(),386
RandomForestClassifier(n_estimators=100),141
RandomForestClassifier(random_state=0),58
RandomForestClassifier(n_estimators = 100),52
RandomForestClassifier(n_estimators=10),52
"RandomForestClassifier(max_depth=5, n_estimators=10, max_features=1)",50
"RandomForestClassifier(n_estimators=100, n_jobs=-1)",44
RandomForestClassifier(n_estimators=500),25
RandomForestClassifier(n_estimators=1000),19
RandomForestClassifier(n_classifiers),18
RandomForestClassifier(n_estimators=50),18
RandomForestClassifier(n_jobs=-1),17
RandomForestClassifier(n_estimators=20),15
RandomForestClassifier(random_state=1),14
RandomForestClassifier(n_estimators=25),13
RandomForestClassifier(**params),13
RandomForestClassifier(n_estimators=n_estimators),13
RandomForestClassifier(**kwargs),12
RandomForestClassifier(ForestClassifier),12
RandomForestClassifier(n_jobs=2),11
"RandomForestClassifier(n_estimators=1, criterion='entropy', max_depth=1)",11
RandomForestClassifier(n_estimators=30),11
RandomForestClassifier(n_estimators=200),10
"RandomForestClassifier(n_estimators=300, n_jobs=-1)",10
RandomForestClassifier( n_estimators = 100 ),10
"RandomForestClassifier(numTrees=3, maxDepth=2, labelCol=""indexed"", seed=42)",10
"RandomForestClassifier(n_estimators=100, n_jobs=2)",8
"RandomForestClassifier(n_estimators=50, n_jobs=-1)",8
"RandomForestClassifier(n_estimators=100, random_state=0)",8
"RandomForestClassifier(n_estimators=100, random_state=1)",7
"RandomForestClassifier(n_estimators=1000, n_jobs=-1)",7
"RandomForestClassifier(n_estimators=rf_n_estimators, max_features=rf_max_features, random_state=random_state)",7
RandomForestClassifier(n_estimators=300),6
RandomForestClassifier(min_samples_split=100),6
"RandomForestClassifier(n_estimators=10, max_depth=None, min_samples_split=1, random_state=0)",6
RandomForestClassifier(n_estimators=trees),6
"RandomForestClassifier(n_estimators = 100, n_jobs = 12, random_state = 4)",6
RandomForestClassifier(n_estimators=750),6
RandomForestClassifier(random_state=42),5
RandomForestClassifier(object),5
"RandomForestClassifier(min_samples_leaf=20,n_jobs=-1)",5
"RandomForestClassifier(n_estimators=500, max_depth=None, min_samples_split=1, random_state=0)",5
"RandomForestClassifier(n_estimators=1, verbose=verbose)",5
"RandomForestClassifier(n_estimators=50, verbose=2, compute_importances=True, n_jobs=-1)",5
"RandomForestClassifier(n_estimators=100, n_jobs=-1, criterion='gini')",5
"RandomForestClassifier(n_estimators=100, n_jobs=-1, random_state=0)",5
RandomForestClassifier(n_estimators=150),4
RandomForestClassifier(**self.params),4
"RandomForestClassifier(n_estimators=10, n_jobs=1)",4
"RandomForestClassifier(criterion='entropy', n_estimators=10, random_state=1, n_jobs=2)",4
RandomForestClassifier(SklModel),4
"RandomForestClassifier(n_estimators=100,criterion= 'entropy')",4
"RandomForestClassifier(n_estimators = 20, n_jobs = 8)",4
RandomForestClassifier(n_estimators = 10),4
RandomForestClassifier(criterion='entropy'),4
RandomForestClassifier(n_estimators = 50),4
"RandomForestClassifier(random_state=0, n_estimators=100)",4
"RandomForestClassifier(n_estimators=10, max_depth=4)",4
"RandomForestClassifier(labelCol=""indexedLabel"", featuresCol=""indexedFeatures"", numTrees=10)",4
RandomForestClassifier(RandomForest),3
RandomForestClassifier(n_estimators=n),3
RandomForestClassifier(**model_params),3
"RandomForestClassifier(n_estimators=estimators, class_weight=""balanced"", random_state=random_state)",3
"RandomForestClassifier(criterion='gini', random_state=random_state, n_jobs=n_jobs, verbose=verbose, n_estimators=n_estimators, max_features=None)",3
"RandomForestClassifier(max_depth=RFC_depth, n_estimators=RFC_estimators)",3
"RandomForestClassifier(n_estimators=100, max_features=""auto"",random_state=50)",3
RandomForestClassifier(n_estimators = n_estimators),3
"RandomForestClassifier(n_estimators=10, max_features=.5)",3
"RandomForestClassifier(n_estimators=100,random_state=randomseedcounter)",3
RandomForestClassifier(class_weight='balanced'),3
"RandomForestClassifier(*args, **kwargs)",3
"RandomForestClassifier(n_estimators=11, max_depth=7)",3
RandomForestClassifier(n_estimators=n_trees),3
"RandomForestClassifier(n_estimators=500, n_jobs=-1)",3
"RandomForestClassifier(n_estimators=100, criterion='gini')",3
RandomForestClassifier(bootstrap = False),3
RandomForestClassifier(n_estimators = 200),3
"RandomForestClassifier(n_jobs=-1, class_weight='auto', max_depth=5)",3
"RandomForestClassifier( n_estimators = 100, n_jobs = -1, verbose = 1 )",3
"RandomForestClassifier(class_weight={False:1, True:1}, n_jobs=-1, criterion=""entropy"", warm_start=True)",3
"RandomForestClassifier(random_state=0, bootstrap=False)",3
RandomForestClassifier(n_estimators=15),3
"RandomForestClassifier(n_jobs=2, max_depth=max_dep)",3
RandomForestClassifier(50),3
"RandomForestClassifier(n_estimators=1000, bootstrap=False)",3
"RandomForestClassifier(n_estimators=1000, max_depth=25, min_samples_leaf=3, n_jobs=16, random_state=42)",3
RandomForestClassifier(max_depth=3),3
RandomForestClassifier(max_features = 'auto'),3
RandomForestClassifier(n_estimators=400),3
"RandomForestClassifier(labelCol = 'label', featuresCol = 'features')",3
"RandomForestClassifier(n_estimators=100, max_depth=100, min_samples_split=2, min_samples_leaf=1)",3
RandomForestClassifier(100),2
"RandomForestClassifier(min_samples_split=1, bootstrap=False)",2
"RandomForestClassifier(random_state=1, n_estimators=10000, min_samples_split=5, min_samples_leaf=2)",2
"RandomForestClassifier(max_features=None, n_jobs=-1)",2
"RandomForestClassifier(n_estimators=lNbEstimatorsInEnsembles, random_state = 1960)",2
"RandomForestClassifier(n_estimators=10, random_state=33)",2
RandomForestClassifier(10),2
"RandomForestClassifier(n_estimators=20, criterion=""entropy"")",2
RandomForestClassifier(**rf_parameters),2
"RandomForestClassifier(n_estimators=300, n_jobs=-1, random_state=0)",2
RandomForestClassifier(n_estimators=self.n_estimators),2
RandomForestClassifier(n_estimators=5),2
"RandomForestClassifier(n_estimators=n_trees, max_depth=max_depth, min_samples_leaf=3, n_jobs=n_jobs, random_state=42)",2
"RandomForestClassifier(n_estimators=200, min_samples_split=17)",2
"RandomForestClassifier(n_estimators=50, n_jobs=2)",2
"RandomForestClassifier(max_depth=3, n_estimators=n_estimator)",2
"RandomForestClassifier(n_estimators=n_est, class_weight=class_weight)",2
RandomForestClassifier(BaggingClassifier),2
RandomForestClassifier(max_features=int(mtry),2
"RandomForestClassifier(n_estimators=30,max_depth=10,oob_score=True,random_state=0)",2
RandomForestClassifier(n_estimators=250),2
"RandomForestClassifier(n_estimators=100, random_state=42)",2
"RandomForestClassifier(n_estimators=ntrees,min_samples_split=nodes*2, min_samples_leaf=nodes)",2
"RandomForestClassifier(**parse.config_for_function(RandomForestClassifier.__init__, config)",2
"RandomForestClassifier(n_estimators=rf_n_estimators, max_features=best_params[dataset_name][method_name][nr_events]['rf_max_features'], random_state=random_state)",2
"RandomForestClassifier(max_features='auto', n_estimators=100)",2
"RandomForestClassifier(n_estimators=100, verbose=True)",2
RandomForestClassifier(n_estimators=8),2
RandomForestClassifier(random_state=123),2
"RandomForestClassifier(n_estimators=200, min_samples_split=13)",2
"RandomForestClassifier(n_estimators=20, n_jobs=-1)",2
RandomForestClassifier( n_estimators=10),2
"RandomForestClassifier(n_estimators=10, random_state=0)",2
"RandomForestClassifier(n_estimators=150, min_samples_split=2, n_jobs=-1)",2
"RandomForestClassifier(n_estimators, criterion, max_features, max_depth)",2
RandomForestClassifier(random_state=RND_SEED),2
"RandomForestClassifier(n_estimators=1000, min_samples_leaf=msl, n_jobs=1)",2
RandomForestClassifier(max_depth=10),2
RandomForestClassifier(n_estimators = 30),2
"RandomForestClassifier(n_estimators=500, random_state=1000 + l, oob_score=True, n_jobs=1)",2
"RandomForestClassifier(n_jobs=-1, n_estimators=300, verbose=3, random_state=131)",2
"RandomForestClassifier(random_state=1, n_estimators=10, min_samples_split=2, min_samples_leaf=1)",2
"RandomForestClassifier(n_estimators=100, n_jobs=4)",2
"RandomForestClassifier(n_estimators=50,n_jobs=5)",2
"RandomForestClassifier(n_estimators=850, max_depth=None, max_features=int(math.sqrt(n_features)",2
RandomForestClassifier(n_estimators = 150),2
"RandomForestClassifier(n_estimators=40, criterion = 'gini', random_state=1)",2
"RandomForestClassifier(n_jobs=-1, random_state=0)",2
"RandomForestClassifier(n_estimators=num_trees, max_features=features)",2
"RandomForestClassifier(max_depth = 20, n_estimators = 30)",2
RandomForestClassifier(**forest_parms),2
RandomForestClassifier(1000),2
"RandomForestClassifier(n_estimators=1000, max_depth=None, max_features=375, n_jobs=-1)",2
"RandomForestClassifier(n_estimators = 100, bootstrap = True, min_samples_leaf = 10, criterion = 'entropy', max_depth = None)",2
"RandomForestClassifier(n_estimators=10, max_depth=20, n_jobs=1, random_state=912)",2
"RandomForestClassifier(n_estimators=30, max_depth = 10, oob_score=True,  random_state=0)",2
"RandomForestClassifier(n_estimators=6000, max_depth = 4, verbose=1)",2
"RandomForestClassifier(n_Forests=200, n_TreesInForest=500)",2
RandomForestClassifier(n_estimators=120),2
"RandomForestClassifier(n_estimators = 500, oob_score = True, class_weight=""balanced"")",2
RandomForestClassifier(n_jobs=1),2
"RandomForestClassifier(n_estimators = 100, n_jobs = -1)",2
"RandomForestClassifier(n_estimators=150, n_jobs=-1, random_state=0)",2
"RandomForestClassifier(n_estimators=100, random_state=process.seed)",2
RandomForestClassifier(Classifier),2
"RandomForestClassifier(n_estimators=50, verbose=2, compute_importances=True, n_jobs=1)",2
"RandomForestClassifier(n_estimators=n_est, max_features=n_feat,max_depth=9, n_jobs=-1)",2
RandomForestClassifier(n_estimators=3000),2
"RandomForestClassifier(n_estimators=15, max_depth=5, oob_score=True)",2
RandomForestClassifier(random_state=8),2
"RandomForestClassifier(random_state=0, n_estimators=50)",2
"RandomForestClassifier(n_estimators=50, min_samples_split=1, bootstrap=False, n_jobs=4, random_state=0)",2
RandomForestClassifier (featset1),2
"RandomForestClassifier(n_estimators=400, n_jobs=-1)",2
"RandomForestClassifier(n_estimators=options.n,random_state=options.random)",2
"RandomForestClassifier(n_estimators=num_trees, random_state=0)",2
"RandomForestClassifier(n_estimators=100, oob_score=True, n_jobs=2)",2
"RandomForestClassifier(n_estimators=n_estimators[0],max_depth=maxDepth[0],oob_score=True,bootstrap=True)",2
"RandomForestClassifier(n_estimators=200, oob_score=True, bootstrap=True)",2
"RandomForestClassifier(n_estimators=n, max_depth=max_depth)",2
RandomForestClassifier(n_estimators=60),2
"RandomForestClassifier(n_estimators = 50, n_jobs = -1)",2
"RandomForestClassifier(n_jobs=-1, n_estimators=n_est, max_depth=max_d, max_features=max_f)",2
RandomForestClassifier(min_samples_leaf=10),2
"RandomForestClassifier(n_estimators=10,n_jobs=-1)",2
RandomForestClassifier(n_estimators=51),2
RandomForestClassifier(200),2
"RandomForestClassifier(**{'n_estimators' : 7500, 'max_depth' : 200})",2
"RandomForestClassifier(n_estimators=1000, random_state=1, max_depth=5, n_jobs=10)",2
"RandomForestClassifier(labelCol=""indexedLabel"", featuresCol=""indexedFeatures"")",2
"RandomForestClassifier(max_depth=5, n_estimators=10, max_features=1, class_weight = {0: 1, 1:10})",2
"RandomForestClassifier(n_estimators=n_estimators, max_features=max_features)",2
"RandomForestClassifier(n_estimators=25, random_state=84)",2
RandomForestClassifier(n_estimators=101),2
RandomForestClassifier(n_estimators=40),2
"RandomForestClassifier(max_depth = 100, max_leaf_nodes=50, criterion='entropy')",2
RandomForestClassifier(n_estimators = n),2
RandomForestClassifier(n_estimators=C),2
"RandomForestClassifier(random_forest_trees, criterion=""entropy"" ,min_samples_leaf=20)",2
"RandomForestClassifier(n_estimators=250, n_jobs=-1, criterion=""entropy"", random_state=1)",2
RandomForestClassifier(class_weight='auto'),2
"RandomForestClassifier(n_estimators=25, n_jobs=4)",2
"RandomForestClassifier(max_features=None, oob_score=True)",2
"RandomForestClassifier(n_estimators=90, random_state=42)",2
"RandomForestClassifier(n_estimators=20, max_depth=3)",2
"RandomForestClassifier(min_samples_leaf=leaf_size, n_estimators=n_estimators_size, random_state=50)",2
RandomForestClassifier(n_trees),2
"RandomForestClassifier(n_estimators=50, n_jobs=10)",2
RandomForestClassifier(random_state=30),2
"RandomForestClassifier(n_estimators=1, min_samples_leaf=int(np.round(x[i])",2
"RandomForestClassifier(n_estimators=10, random_state=42)",2
RandomForestClassifier(n_tree),2
"RandomForestClassifier(n_estimators = 20, max_features = 'auto')",2
RandomForestClassifier(verbose=True),2
RandomForestClassifier(max_depth=i),2
"RandomForestClassifier(n_estimators=100, random_state=1, warm_start=True,n_jobs=-1)",2
"RandomForestClassifier(n_estimators=10,criterion='gini', min_samples_split=2,max_features=None)",2
"RandomForestClassifier(max_depth = 10, min_samples_split=2, n_estimators = 100, random_state = 1)",1
RandomForestClassifier(n_estimators=tc),1
"RandomForestClassifier(150, random_state=0)",1
RandomForestClassifier(**self.param_dict),1
"RandomForestClassifier(n_estimators = numTrees, n_jobs = 1)",1
RandomForestClassifier(n_estimators = 9),1
RandomForestClassifier(n_estimators=self.randomForestEstimators),1
RandomForestClassifier(RandomForestClassifier),1
"RandomForestClassifier(n_estimators=100, n_jobs=8, random_state=42)",1
"RandomForestClassifier(n_estimators=10, max_depth=int(sum(labels_binary[i])",1
"RandomForestClassifier(n_estimators=1000, max_depth=60, class_weight = {0:0.1, 1:0.9} )",1
RandomForestClassifier( n_estimators=500 ),1
"RandomForestClassifier(n_estimators, criterion='entropy', min_samples_split=20 , compute_importances=True)",1
"RandomForestClassifier(n_estimators=200,  max_depth=8,random_state=0)",1
RandomForestClassifier(**self.best_params),1
"RandomForestClassifier(n_estimators=500, n_jobs = -1)",1
"RandomForestClassifier(numTrees=500, maxDepth=6, maxBins=80, seed=42)",1
"RandomForestClassifier(n_trees, criterion, max_features, max_depth)",1
"RandomForestClassifier(n_estimators=150, max_features=7, max_depth=1)",1
RandomForestClassifier(Orange.core.Classifier),1
"RandomForestClassifier(n_estimators=50, random_state=0)",1
"RandomForestClassifier(n_estimators = 128, class_weight='auto')",1
RandomForestClassifier(t),1
"RandomForestClassifier(n_estimators=10, max_features=5, oob_score=True)",1
"RandomForestClassifier(n_estimators=100, max_depth=5, random_state=0)",1
"RandomForestClassifier(n_estimators=100, max_features='sqrt')",1
"RandomForestClassifier(n_estimators=150, criterion='gini', max_features=100, max_depth=2000)",1
"RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)",1
"RandomForestClassifier(n_estimators=500, min_weight_fraction_leaf=0.1, random_state=42, n_jobs=-1)",1
"RandomForestClassifier(max_depth=20, min_samples_leaf=5, n_estimators=10, oob_score=False, n_jobs=-1, criterion='entropy')",1
RandomForestClassifier(min_samples_split=1),1
"RandomForestClassifier(n_estimators=70, min_samples_leaf=2, criterion=""entropy"", max_depth=10)",1
"RandomForestClassifier(n_estimators=7, min_samples_leaf=4)",1
"RandomForestClassifier(class_weight='balanced', **kwargs)",1
"RandomForestClassifier(n_estimators=500,max_depth=None,min_samples_leaf=1,n_jobs=4,criterion='entropy', max_features=20,oob_score=False)",1
"RandomForestClassifier(n_estimators=20, max_depth=20, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=200,n_jobs=1,verbose=10)",1
"RandomForestClassifier(n_jobs=8, n_estimators=23)",1
"RandomForestClassifier(n_estimators=n_estim, max_depth=depth,n_jobs=jobs, min_samples_split=1,class_weight=""balanced"",random_state=0,verbose=True)",1
"RandomForestClassifier(n_estimators=2000, criterion =""gini"",max_depth=20,min_samples_split=1, random_state=0,n_jobs=3)",1
"RandomForestClassifier(classifiers = classifiers, name=self.name, domain=examples.domain, classVar=examples.domain.classVar, agrLevel = self.agrLevel)",1
"RandomForestClassifier(n_jobs=2, bootstrap=True, n_estimators=250, criterion='gini')",1
"RandomForestClassifier(n_estimators=300,max_depth=16)",1
"RandomForestClassifier('/CountClassification', 'tests/mergerResolvingTestDataset/tracking.ilp')",1
RandomForestClassifier(**estimator_params),1
RandomForestClassifier(n_estimators=i),1
"RandomForestClassifier(n_estimators=trees, max_depth=max_tree_depth)",1
"RandomForestClassifier(n_jobs=4,n_estimators=23)",1
RandomForestClassifier(TSClassifier),1
"RandomForestClassifier(n_estimators=50, class_weight='balanced')",1
"RandomForestClassifier(n_estimators=300, oob_score=True, n_jobs=2)",1
"RandomForestClassifier(criterion='entropy', random_state=random_state, n_jobs=n_jobs, verbose=verbose)",1
"RandomForestClassifier(n_estimators=nr_of_trees, n_jobs=n_jobs)",1
"RandomForestClassifier(n_estimators=22, max_features=min(52, len(result1.columns)",1
"RandomForestClassifier(max_features = 'auto', max_depth=10)",1
"RandomForestClassifier(n_estimators=500, random_state=0)",1
"RandomForestClassifier(n_estimators=80, random_state=87, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=200, random_state=0)",1
"RandomForestClassifier(compute_importances = True, n_jobs = -1, **vars(args)",1
"RandomForestClassifier(n_estimators=128,)",1
"RandomForestClassifier(n_estimators=5, random_state=1, min_samples_leaf=2)",1
"RandomForestClassifier(n_estimators=500,max_depth=None,min_samples_leaf=5,n_jobs=5,criterion='gini', max_features='auto',oob_score=False)",1
"RandomForestClassifier(numTrees=numTrees, maxDepth=4, maxBins=32, labelCol=""label"", seed=42)",1
"RandomForestClassifier(labelCol=""label"", featuresCol=""features"", numTrees=5)",1
"RandomForestClassifier(n_jobs=-1, verbose=1)",1
"RandomForestClassifier(n_estimators=100, max_features=None, n_jobs=-1, random_state=0)",1
"RandomForestClassifier(NUM_TREES, max_depth=TREE_DEPTH, verbose=1, n_jobs=NUM_THREADS)",1
"RandomForestClassifier(n_estimators=50, criterion='entropy')",1
"RandomForestClassifier(max_depth=None, n_jobs=-1, random_state=0)",1
"RandomForestClassifier(150,max_leaf_nodes=80,oob_score=True)",1
RandomForestClassifier(n_estimators=4),1
"RandomForestClassifier(n_estimators = 10, criterion = 'gini', random_state = 0)",1
"RandomForestClassifier(n_jobs=-1,min_samples_split= 3, max_features= 0.4, min_samples_leaf= 2, n_estimators= 200, max_depth= 8)",1
"RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini', max_depth=10, max_features=10, max_leaf_nodes=None, min_impurity_split=1e-07, min_samples_leaf=1, min_samples_split=2, min_weight_fraction_leaf=0.0, n_estimators=50, n_jobs=1, oob_score=False, random_state=1, verbose=0, warm_start=False)",1
"RandomForestClassifier(n_estimators=200,max_depth=None,min_samples_leaf=10,n_jobs=1,criterion='entropy', max_features='auto',oob_score=False)",1
"RandomForestClassifier(n_estimators=2000,max_depth=10,verbose=1)",1
"RandomForestClassifier(n_estimators=100, n_jobs=-1, max_features=""auto"")",1
"RandomForestClassifier(random_state=random_state, n_jobs=n_jobs, verbose = verbose)",1
"RandomForestClassifier(n_estimators=10, max_depth=15, min_samples_split=2, n_jobs=-1, random_state=42)",1
"RandomForestClassifier(n_estimators=100, max_depth=10, n_jobs=-1,random_state=rs)",1
"RandomForestClassifier(n_estimators=specs['n_estimators'], random_state = 409)",1
"RandomForestClassifier(criterion='entropy', random_state=RandomState(__seed__)",1
"RandomForestClassifier(n_estimators=1000, max_depth=10)",1
"RandomForestClassifier(criterion=splitcriteria_param, n_estimators=int(numbtrees_param)",1
"RandomForestClassifier(min_samples_split = 4, criterion = ""entropy"")",1
"RandomForestClassifier(n_estimators=100,n_jobs=2)",1
"RandomForestClassifier(n_estimators=500, criterion='entropy', min_samples_leaf=5, oob_score=True)",1
"RandomForestClassifier(n_estimators=250, n_jobs=-1, max_depth=None)",1
"RandomForestClassifier(n_estimators=100, class_weight=class_wt, n_jobs=-1)",1
RandomForestClassifier(n_estimators = 20),1
"RandomForestClassifier(n_estimators = 30, random_state = 84)",1
"RandomForestClassifier(max_depth=16,n_estimators=150, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=100, n_jobs=n_jobs)",1
"RandomForestClassifier(n_jobs=-1, n_estimators=50, min_samples_split=70, max_features='auto')",1
"RandomForestClassifier(n_jobs=-1, max_depth=10, n_estimators=15)",1
"RandomForestClassifier( n_estimators = 100, n_jobs=2)",1
"RandomForestClassifier(criterion='entropy', n_estimators=50, random_state=1, n_jobs=2)",1
"RandomForestClassifier(n_estimators=500, max_depth=None)",1
"RandomForestClassifier(n_estimators=1000, max_depth=None)",1
"RandomForestClassifier(n_estimators=100, random_state=50)",1
"RandomForestClassifier(n_estimators=10, max_depth= 7, random_state=0)",1
"RandomForestClassifier(n_estimators=1000, max_depth=None,min_samples_split=1, max_features=3)",1
"RandomForestClassifier(n_estimators=150, random_state=42)",1
"RandomForestClassifier(min_samples_split=3, min_samples_leaf=1, bootstrap=False, n_jobs=3)",1
"RandomForestClassifier(n_estimators = 100, n_jobs=-1)",1
RandomForestClassifier(n_estimators = n_trees),1
"RandomForestClassifier(class_weight=""balanced"",random_state=1)",1
"RandomForestClassifier(n_estimators = 5, compute_importances = True)",1
"RandomForestClassifier(n_estimators=10000, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=100, max_features=7)",1
"RandomForestClassifier(n_estimators = 100, n_jobs=2)",1
"RandomForestClassifier(n_estimators=35,max_depth = 13, max_features='auto',n_jobs=2)",1
"RandomForestClassifier(n_estimators=100,random_state=100,max_depth=8,max_features=None,n_jobs=-1)",1
"RandomForestClassifier(warm_start=True, **kwargs)",1
"RandomForestClassifier(n_estimators=10, max_depth=10)",1
"RandomForestClassifier(random_state=0, verbose=1, n_estimators=1000)",1
"RandomForestClassifier(n_estimators=feature, oob_score=True, random_state=7112016)",1
"RandomForestClassifier(n_estimators=1000, max_depth=60, n_jobs=2 )",1
"RandomForestClassifier(n_estimators=80,max_depth = 10)",1
"RandomForestClassifier(n_jobs=4, max_features=""log2"", criterion=""entropy"", n_estimators=10, bootstrap=True)",1
"RandomForestClassifier(min_samples_leaf=2, n_estimators=100)",1
"RandomForestClassifier(n_estimators=1000, n_jobs=3)",1
"RandomForestClassifier(n_estimators=10,n_jobs=1,verbose=10)",1
"RandomForestClassifier(n_estimators = n_estimators, max_features = None)",1
"RandomForestClassifier(n_estimators=50, random_state=4141, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=n_estimators, criterion=criterion, min_samples_split=min_samples_split)",1
"RandomForestClassifier(n_estimators=ntrees, n_jobs=2)",1
"RandomForestClassifier(n_estimators=65, criterion='gini', max_depth=5, max_features=0.5,random_state=600)",1
"RandomForestClassifier(n_estimators=max_random_trees, max_features=total_features, n_jobs=4)",1
RandomForestClassifier(n_estimators=128),1
"RandomForestClassifier(max_features='log2', n_estimators=120, random_state=125)",1
"RandomForestClassifier(n_estimators=100,max_depth=80)",1
"RandomForestClassifier(random_state=234, **kwargs)",1
"RandomForestClassifier(n_estimators=n_trees, max_depth=depth)",1
"RandomForestClassifier(n_estimators=100,max_depth=None,min_samples_leaf=5,n_jobs=2, max_features=Xtrain.shape[1]/3,oob_score=False)",1
"RandomForestClassifier(n_estimators=10000, random_state=0, n_jobs=-1 )",1
"RandomForestClassifier(n_estimators=n_estimators, n_jobs=n_procs)",1
"RandomForestClassifier(n_estimators=100, max_features=1.0/3, n_jobs=10, max_depth=None, min_samples_split=5, random_state=0)",1
RandomForestClassifier(n_estimators= 500),1
"RandomForestClassifier(n_estimators=512, max_depth=8, n_jobs=-1)",1
"RandomForestClassifier(n_jobs=-1, random_state=192)",1
"RandomForestClassifier(n_estimators = estimators, max_features = int(math.sqrt(features)",1
"RandomForestClassifier(SklModel, RandomForestModel)",1
RandomForestClassifier(n_estimators = 250),1
RandomForestClassifier(n_estimators = self.n_trees),1
"RandomForestClassifier(n_jobs=-1, random_state=2016, verbose=1)",1
"RandomForestClassifier(n_estimators=16,  max_depth=3, random_state=102)",1
"RandomForestClassifier(min_samples_leaf=10, min_samples_split=10)",1
"RandomForestClassifier(n_estimators = 1024, criterion = 'entropy', n_jobs = -1)",1
"RandomForestClassifier(SklModel, RandomForest)",1
"RandomForestClassifier(n_estimators=20, n_jobs=self.threadCount)",1
"RandomForestClassifier(max_depth=5, min_samples_split=2)",1
"RandomForestClassifier(n_jobs=self.params['num_jobs'], n_estimators=self.params['num_estimators'])",1
"RandomForestClassifier(n_estimators=300, n_jobs=3)",1
"RandomForestClassifier(n_estimators=10, random_state=1)",1
RandomForestClassifier(random_state=321),1
"RandomForestClassifier(max_features='log2', n_estimators=1000, criterion='gini')",1
"RandomForestClassifier(n_estimators = 150, n_jobs = -1)",1
RandomForestClassifier(n_estimators=RF_ESTIMATORS),1
"RandomForestClassifier(n_estimators=28, criterion='entropy')",1
"RandomForestClassifier(random_state=5, n_jobs=-1, n_estimators=100)",1
"RandomForestClassifier(n_estimators=100, n_jobs=-1, verbose=1)",1
"RandomForestClassifier(n_estimators=100, oob_score=True)",1
"RandomForestClassifier(n_estimators=20*8, n_jobs=8, **params)",1
RandomForestClassifier(random_state=rng),1
"RandomForestClassifier(n_estimators=50, max_depth=700)",1
"RandomForestClassifier(n_estimators = 100, criterion = ""entropy"", n_jobs = -1)",1
"RandomForestClassifier(n_estimators=200, oob_score=True)",1
"RandomForestClassifier(n_estimators=10, criterion='entropy', random_state=0)",1
RandomForestClassifier(**rf_config),1
"RandomForestClassifier(n_jobs=4, n_estimators=20)",1
"RandomForestClassifier(n_estimators=52, max_depth=None)",1
"RandomForestClassifier(n_estimators=50,n_jobs=-1, random_state = 0)",1
"RandomForestClassifier(n_estimators=800, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=100, n_jobs=-1, class_weight='auto', random_state=21)",1
"RandomForestClassifier(random_state=1, n_estimators=500, n_jobs=1, min_samples_leaf=3)",1
"RandomForestClassifier(n_estimators=50,max_depth=2,min_samples_split=7,class_weight='balanced',max_features='auto')",1
"RandomForestClassifier(n_estimators=100, min_samples_split=17)",1
"RandomForestClassifier(max_depth=None, min_samples_split=1, random_state=None)",1
"RandomForestClassifier(n_estimators=500, class_weight=""balanced"")",1
RandomForestClassifier(**clf_params),1
"RandomForestClassifier(n_estimators = 1000, max_depth = None)",1
"RandomForestClassifier(n_estimators=100,random_state=571,max_features=8,max_depth=13,n_jobs=1)",1
"RandomForestClassifier(n_estimators=80, n_jobs=4)",1
RandomForestClassifier(Learner),1
"RandomForestClassifier(random_state=1, criterion = 'gini', n_estimators=500)",1
"RandomForestClassifier(n_estimators=1, max_depth=5, max_features=None, bootstrap=False)",1
RandomForestClassifier(n_estimators = 1000),1
"RandomForestClassifier(n_estimators=1000, oob_score=True, n_jobs=2)",1
RandomForestClassifier(**cls_kwargs),1
"RandomForestClassifier(n_estimators=100, max_depth=3)",1
"RandomForestClassifier(n_estimators=10, n_jobs=8, random_state=42)",1
"RandomForestClassifier(random_state=42, n_jobs=-1)",1
RandomForestClassifier(n_estimators=3),1
RandomForestClassifier(max_depth=C),1
"RandomForestClassifier(random_state=1,n_estimators=10,min_samples_split=2,min_samples_leaf=1)",1
"RandomForestClassifier(10, ""entropy"", None)",1
RandomForestClassifier(n_estimators = 2000),1
"RandomForestClassifier(n_estimators = 3, bootstrap = False, max_features = max_features)",1
"RandomForestClassifier(random_state=1, n_estimators=150, min_samples_split=8, min_samples_leaf=4)",1
"RandomForestClassifier(n_estimators=500, oob_score=True, n_jobs=njobs)",1
RandomForestClassifier(n_estimators = n_classifiers),1
"RandomForestClassifier(n_estimators=94, max_depth=25,min_samples_split=2, random_state=0)",1
"RandomForestClassifier(n_estimators=1000, verbose=2)",1
"RandomForestClassifier(n_estimators=estimator, max_features=features, oob_score=True)",1
RandomForestClassifier(n_estimators=opts.numtrees),1
"RandomForestClassifier(n_estimators=100, n_jobs=1)",1
"RandomForestClassifier(n_jobs=-1, n_estimators=50, min_samples_split=12, max_features='auto')",1
"RandomForestClassifier(n_estimators=1, max_features=tree_features)",1
"RandomForestClassifier(n_estimators=500, verbose=2, n_jobs=1, min_samples_split=30, random_state=1, compute_importances=True)",1
"RandomForestClassifier(random_state=0, n_estimators=80, class_weight='auto')",1
"RandomForestClassifier(n_estimators=200, oob_score=1, n_jobs=-1, random_state=50, max_features=""auto"", min_samples_leaf=5)",1
RandomForestClassifier(**classifier_pram_dic[rf_name]),1
"RandomForestClassifier(n_estimator, verbose=0,criterion=""entropy"")",1
RandomForestClassifier(n_estimators = estimators),1
"RandomForestClassifier(min_samples_leaf=5, random_state=2)",1
RandomForestClassifier(**config_clf),1
RandomForestClassifier(orange.Classifier),1
"RandomForestClassifier(n_jobs = workers, random_state = choosen_random_state, n_estimators = 196)",1
"RandomForestClassifier(rf_model, self.imputer)",1
"RandomForestClassifier(n_estimators=8, random_state=1)",1
RandomForestClassifier(n_estimators = pm.num_trees),1
"RandomForestClassifier(1, ""entropy"", None)",1
"RandomForestClassifier(criterion=c, n_estimators=t, min_samples_split=s)",1
"RandomForestClassifier(n_estimators=1000, max_depth=25)",1
RandomForestClassifier(n_estimators=2000),1
"RandomForestClassifier(n_estimators=nr_estimators_rf, n_jobs=n_cpu_jobs, random_state=random_state, verbose=verbosity)",1
"RandomForestClassifier(max_features=500,n_estimators=100, n_jobs=4)",1
"RandomForestClassifier(n_estimators=n_estimators, class_weight='balanced')",1
"RandomForestClassifier(n_estimators=300,random_state=100,max_depth=15,max_features=None,n_jobs=-1)",1
RandomForestClassifier(n_jobs=num_jobs),1
"RandomForestClassifier(criterion=""entropy"", n_estimators=50, min_samples_split=3, max_depth=6)",1
"RandomForestClassifier(n_estimators=20, compute_importances=True)",1
RandomForestClassifier(max_features='sqrt'),1
RandomForestClassifier(n_estimators = 4),1
"RandomForestClassifier(n_estimators = 700, n_jobs = -1)",1
"RandomForestClassifier(random_state=241, n_estimators=min_log_loss_iter)",1
"RandomForestClassifier(n_estimators = 50, n_jobs=-1, max_features=1., min_samples_leaf = 5, max_depth = 5)",1
"RandomForestClassifier(n_estimators = 100, n_jobs=10)",1
RandomForestClassifier(n=t),1
"RandomForestClassifier(n_estimators=1000, random_state=0)",1
"RandomForestClassifier(n_estimators=100, random_state=randomseedcounter)",1
"RandomForestClassifier(n_estimators=400,max_depth=15,n_jobs=4,verbose=True)",1
"RandomForestClassifier(n_estimators=estimator_param, n_jobs=-1, random_state=0)",1
"RandomForestClassifier(n_estimators=80, n_jobs=1)",1
"RandomForestClassifier(n_estimators = 500, random_state = 2543, max_features = None, n_jobs = -1)",1
RandomForestClassifier( n_estimators = 256 ),1
"RandomForestClassifier(n_estimators=1001,n_jobs=nj)",1
"RandomForestClassifier(n_estimators = self.n_estimators, random_state = RANDOM_STATE, n_jobs = -1)",1
RandomForestClassifier(n_estimators=mp.random_forest_estimators),1
"RandomForestClassifier(n_estimators=1000, oob_score=True, max_depth=5)",1
"RandomForestClassifier(verbose=1, n_estimators=500)",1
"RandomForestClassifier(n_estimators = pm.num_trees, n_jobs = pm.n_jobs)",1
"RandomForestClassifier(bootstrap=False, max_features=0.4, min_samples_leaf=1, min_samples_split=9)",1
RandomForestClassifier(n_estimators=int(len(MetricEntry.metrics),1
"RandomForestClassifier(n_estimators=25,random_state=0)",1
"RandomForestClassifier(n_estimators=self._settings.get('trees', 10)",1
"RandomForestClassifier(n_Forests=100, n_TreesInForest=300)",1
"RandomForestClassifier(n_estimators=100, min_samples_split=2)",1
"RandomForestClassifier(max_features=1, n_estimators=self.n_estimators, min_samples_split=10, criterion='gini', n_jobs=-1)",1
RandomForestClassifier(random_state =88),1
RandomForestClassifier(random_state=self.rng),1
"RandomForestClassifier(n_estimators=10, random_state=123)",1
"RandomForestClassifier(n_estimators=12, random_state = 1960)",1
"RandomForestClassifier(n_estimators = n_estimators, criterion=criterion, max_features = max_features, max_depth = max_depth, bootstrap=bootstrap)",1
"RandomForestClassifier(n_estimators=64,bootstrap=False,min_samples_split=256,max_features=20,n_jobs=16)",1
"RandomForestClassifier(max_features=.33, n_jobs=-1, random_state=rand)",1
"RandomForestClassifier(n_estimators=100, max_features='auto', random_state=42, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=treeCount, random_state=(roc_iterator+1)",1
"RandomForestClassifier(n_estimators=20, max_depth=None,min_samples_split=1, random_state=0)",1
"RandomForestClassifier(n_estimators=200, max_depth=None, min_samples_split=1, random_state=0)",1
"RandomForestClassifier(n_jobs=-1, n_estimators=300, max_features=None)",1
RandomForestClassifier(n_estimators=e),1
"RandomForestClassifier(n_estimators=100, random_state=random_seed)",1
"RandomForestClassifier(numTrees=100,maxDepth=12,maxBins=32,maxMemoryInMB=512,seed=1)",1
"RandomForestClassifier(n_estimators=550,min_samples_split=1)",1
"RandomForestClassifier(n_estimators=100, max_depth=None, min_samples_split=1, random_state=0, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=10000, criterion='entropy')",1
"RandomForestClassifier(n_estimators = n_estimators, bootstrap = bootstrap)",1
"RandomForestClassifier(n_estimators=10, max_depth=1)",1
"RandomForestClassifier(verbose = False, n_jobs = -1)",1
RandomForestClassifier(n_estimators=10000),1
RandomForestClassifier(selectedFeatures=selectedFeatures),1
"RandomForestClassifier(n_estimators=500, max_features=min(49, len(result1.columns)",1
"RandomForestClassifier(n_estimators=self.num_tree, bootstrap=False, max_depth=self.max_depth, n_jobs=3, random_state=self.random_state, verbose=0)",1
"RandomForestClassifier(n_estimators=100,verbose=1 )",1
"RandomForestClassifier(n_jobs=-1, class_weight={1:2})",1
"RandomForestClassifier(n_estimators=numTrees, max_depth=None, min_samples_split=2, random_state=0)",1
"RandomForestClassifier(n_estimators=estimator, max_features=feature, random_state=0)",1
"RandomForestClassifier(min_impurity_split=0.1, n_jobs = -1, max_depth=15)",1
"RandomForestClassifier(min_samples_split=50, min_samples_leaf=200)",1
"RandomForestClassifier(n_estimators=300, n_jobs=4)",1
RandomForestClassifier(random_state=random_seed),1
"RandomForestClassifier(n_estimators=n_estimators, max_depth=None, min_samples_split=1, random_state=0)",1
RandomForestClassifier(verbose=1),1
RandomForestClassifier(max_depth=max_depth),1
"RandomForestClassifier(max_depth=10, n_estimators=10)",1
"RandomForestClassifier(max_depth=5, n_estimators=10, max_features=1, n_jobs=2)",1
"RandomForestClassifier(n_estimators = 10, criterion='gini')",1
RandomForestClassifier(method.Method),1
"RandomForestClassifier(n_estimators=200, max_depth=4)",1
"RandomForestClassifier(n_jobs=-1, n_estimators=200, min_samples_split=12, max_features=None)",1
"RandomForestClassifier(n_estimators=100, random_state=1234, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=rf_n_estimators, max_features=best_params[dataset_name][method_name]['rf_max_features'], random_state=random_state)",1
"RandomForestClassifier(n_estimators=100,max_features=17)",1
"RandomForestClassifier(n_jobs=cpus, max_depth=10, min_samples_split=100)",1
RandomForestClassifier(n_estimators=Ntrees),1
"RandomForestClassifier(n_estimators=self.numTrees, max_features=self.maxFeatures, criterion=self.criterion, max_depth=self.maxDepth, min_samples_split=self.minSplit, random_state=21)",1
"RandomForestClassifier(n_estimators=400,random_state=100,max_depth=10,max_features=None,n_jobs=-1)",1
"RandomForestClassifier(n_estimators=200, criterion='entropy')",1
"RandomForestClassifier(n_estimators=50, max_depth=4)",1
"RandomForestClassifier(n_estimators = 10, n_jobs = -1)",1
"RandomForestClassifier(n_estimators=nr_of_trees, max_depth=depth)",1
"RandomForestClassifier(n_jobs=4,n_estimators=17)",1
RandomForestClassifier(n_jobs=4),1
"RandomForestClassifier(max_depth=hyper_parameter, n_estimators=10, max_features=1)",1
RandomForestClassifier(k=128),1
"RandomForestClassifier(n_estimators=400, max_depth=10, min_samples_leaf=20, n_jobs=12, random_state=42)",1
"RandomForestClassifier(n_estimators=10, max_features=""sqrt"")",1
"RandomForestClassifier(max_depth=5, n_estimators=100, max_features=1)",1
RandomForestClassifier(random_state=2),1
"RandomForestClassifier(n_estimators=250, random_state=0)",1
"RandomForestClassifier(n_estimators=10, n_jobs=-1)",1
"RandomForestClassifier(n_jobs=-1, oob_score=True, max_depth=5)",1
"RandomForestClassifier(n_estimators=300, max_features=0.5, max_depth=4, oob_score=True, n_jobs=-1, random_state=0, class_weight='auto')",1
"RandomForestClassifier(n_estimators=n_estimators, random_state=30)",1
RandomForestClassifier(128),1
"RandomForestClassifier(n_estimators=1000, max_depth=15, min_samples_leaf=20, n_jobs=16, random_state=42)",1
RandomForestClassifier(max_depth=md),1
"RandomForestClassifier(n_estimators=20, n_jobs=2)",1
"RandomForestClassifier(n_estimators = n_est,random_state=93758)",1
"RandomForestClassifier(transitionClassifierPath, transitionClassifierFilename)",1
"RandomForestClassifier(n_estimators=self.__n_TreesInForest, n_jobs=2, verbose=0, class_weight='auto')",1
"RandomForestClassifier(n_jobs=40, n_estimators=200)",1
RandomForestClassifier(random_state = 1),1
RandomForestClassifier(n_estimators=ntrees),1
RandomForestClassifier(**rf_params),1
RandomForestClassifier(n_jobs = -1),1
"RandomForestClassifier(n_estimators=1000, max_depth=5)",1
"RandomForestClassifier(n_estimators=40, max_depth=None,min_samples_split=1, random_state=0)",1
"RandomForestClassifier(n_estimators=n_estimators, criterion=criterion)",1
"RandomForestClassifier(n_estimators=300, min_samples_split=1, max_features=0.5, bootstrap=False, n_jobs=-1, random_state=0)",1
"RandomForestClassifier(n_jobs=self.n_cores, n_estimators= self.ntrees, oob_score=True, bootstrap=True)",1
RandomForestClassifier(**classi_params),1
"RandomForestClassifier(n_estimators=100, random_state=0, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=5*nfeatures,n_jobs=self.nthreads,max_depth=10)",1
"RandomForestClassifier(n_estimators=100, max_depth=4, min_samples_split=2, random_state=0)",1
RandomForestClassifier(n_estimators=model_param['n_estimators']),1
"RandomForestClassifier(n_jobs=-1, n_estimators=400, max_features=None)",1
"RandomForestClassifier(n_estimators=1500, max_depth=2, max_features=4)",1
"RandomForestClassifier(n_estimators=n_estimators, class_weight = 'balanced')",1
"RandomForestClassifier(n_estimators=450,class_weight='balanced',min_samples_split=4)",1
"RandomForestClassifier(n_estimators=500,max_depth=None,min_samples_leaf=1,n_jobs=4,criterion='gini', max_features=20)",1
"RandomForestClassifier( n_estimators = 1000 , oob_score=True , random_state=1)",1
"RandomForestClassifier(n_estimators=150, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=100, n_jobs=3, random_state=random_state)",1
"RandomForestClassifier(n_estimators=100,max_depth=5,max_features=1.0)",1
"RandomForestClassifier(n_estimators=250,max_depth=None,min_samples_leaf=5,n_jobs=1,criterion='entropy', max_features=5,oob_score=False)",1
"RandomForestClassifier(n_estimators=self.config.hid_layer_units_baseline, n_jobs=-1, random_state=42, oob_score=True, verbose=1)",1
RandomForestClassifier(dt.DecisionTreeClassifier),1
RandomForestClassifier(n_estimators),1
"RandomForestClassifier(random_state = self.ran_stat, n_estimators = self.n_trees, n_jobs=self.n_jobs)",1
"RandomForestClassifier(classifiers = classifiers, name=self.name, domain=examples.domain, classVar=examples.domain.classVar)",1
"RandomForestClassifier(max_depth=6, n_estimators=10, max_features=5)",1
"RandomForestClassifier(n_jobs=2, n_estimators = 1000)",1
"RandomForestClassifier(n_estimators=100, max_depth=5, n_jobs=-1)",1
"RandomForestClassifier(max_depth=10, n_estimators=100)",1
RandomForestClassifier(n_estimators=int(SILLY_NUMBER*1.5),1
"RandomForestClassifier(n_estimators = 128, class_weight = 'balanced_subsample')",1
"RandomForestClassifier(min_samples_split = 16, n_estimators = 300)",1
"RandomForestClassifier(n_estimators=1000, n_jobs=-1, compute_importances=True, oob_score=True)",1
"RandomForestClassifier(n_estimators=n_estimators, n_jobs=-1)",1
"RandomForestClassifier(max_features=mtry, n_estimators=ntrees,max_depth=max_depth,min_samples_split=2, random_state=0, n_jobs=-1, bootstrap=False)",1
RandomForestClassifier(max_depth = max_depth),1
"RandomForestClassifier(criterion='entropy', n_estimators=25, max_depth = 10)",1
"RandomForestClassifier(n_estimators=64,max_depth=None,min_samples_split=16, random_state=0)",1
"RandomForestClassifier(n_estimators=100, verbose=2, n_jobs=1, min_samples_split=1, random_state=1, compute_importances=True)",1
"RandomForestClassifier(n_jobs=-1,min_samples_split= 2, max_features= 0.4, min_samples_leaf= 2, n_estimators= 20, max_depth= 8)",1
"RandomForestClassifier(n_estimators=12,n_jobs=2,verbose=2)",1
RandomForestClassifier(Module),1
"RandomForestClassifier(n_estimators=200,  n_jobs=4)",1
"RandomForestClassifier(n_estimators = 200, max_features = k)",1
RandomForestClassifier(Stats),1
"RandomForestClassifier(n_estimators=1, max_features=min(64, len(result2.columns)",1
"RandomForestClassifier(n_jobs = -1, verbose = 2, n_estimators = 7000, random_state=42)",1
"RandomForestClassifier(n_estimators = n, bootstrap = True, oob_score = True)",1
"RandomForestClassifier(n_estimators = 200, max_depth = 100)",1
"RandomForestClassifier(max_depth=None, min_samples_split=1, max_features=7)",1
"RandomForestClassifier(max_depth=50, n_estimators=40, random_state=42, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=50, verbose=2, compute_importances=True, n_jobs=5)",1
"RandomForestClassifier(n_estimators=500, n_jobs = -1, verbose = 1, class_weight = 'auto')",1
"RandomForestClassifier(n_estimators=30, max_depth=5)",1
"RandomForestClassifier(n_estimators=10, bootstrap=False, max_depth=10, n_jobs=3, random_state=None, verbose=0)",1
RandomForestClassifier(**clf_args_),1
"RandomForestClassifier(n_estimators=300, n_jobs=-1, random_state=i)",1
"RandomForestClassifier(n_estimators=30, max_depth=10, oob_score=True, random_state=0)",1
"RandomForestClassifier(n_estimators=400, max_depth=10, max_features='sqrt', bootstrap = True, n_jobs=-1, random_state=0)",1
"RandomForestClassifier(n_estimators=20, oob_score=True, n_jobs=2)",1
"RandomForestClassifier(n_estimators = 500, random_state = 2543)",1
"RandomForestClassifier(n_estimators = 500, max_features = 50, max_depth=None)",1
"RandomForestClassifier(random_state=1, n_estimators=10, n_jobs=1)",1
"RandomForestClassifier(random_state=0, class_weight=param.class_weight)",1
"RandomForestClassifier(criterion='entropy', random_state=RandomState(seed)",1
RandomForestClassifier(classifarg.number_of_trees),1
"RandomForestClassifier(random_state=1, verbose=VERBOSE)",1
"RandomForestClassifier(n_estimators=123, random_state=42)",1
"RandomForestClassifier(n_estimators=n_tree, **kwargs)",1
"RandomForestClassifier(n_estimators = n_estimators, max_depth = max_depth, max_features= max_features, min_samples_split = min_samples_split, n_jobs=n_jobs)",1
"RandomForestClassifier(n_estimators=500,n_jobs=1,verbose=10)",1
"RandomForestClassifier(n_estimators=RF_size, oob_score=True, n_jobs= -1, compute_importances = True, min_samples_split=1)",1
"RandomForestClassifier(n_estimators = n_estimators/2, bootstrap = False)",1
RandomForestClassifier(n_estimators=2),1
"RandomForestClassifier(n_estimators=1500, n_jobs=3)",1
"RandomForestClassifier(n_estimators = 10, max_depth=16, oob_score=True, n_jobs=3)",1
"RandomForestClassifier(n_estimators = 500, random_state = 1104)",1
"RandomForestClassifier(verbose=False,n_jobs=7)",1
"RandomForestClassifier(n_estimators=10000, random_state=0, n_jobs=-1)",1
"RandomForestClassifier(n_estimators = 1000, n_jobs=-1, verbose=2)",1
"RandomForestClassifier(n_estimators=1000, max_features=None, max_depth=100, class_weight=""auto"")",1
RandomForestClassifier(sklearn.ensemble.RandomForestClassifier),1
"RandomForestClassifier(n_estimators=100,n_jobs=-1)",1
"RandomForestClassifier(n_estimators = 1024, criterion='entropy', n_jobs = -1)",1
"RandomForestClassifier(n_estimators=30, compute_importances=True, n_jobs=4, bootstrap=True, random_state=0, max_features=10)",1
"RandomForestClassifier(n_estimators=self.Nestimators, oob_score=True)",1
"RandomForestClassifier(n_estimators=20,max_features=""sqrt"")",1
"RandomForestClassifier(n_estimators=n_estimators, max_features=max_features, random_state=random_state)",1
"RandomForestClassifier(n_estimators=100, min_samples_split=0.02, class_weight='balanced')",1
RandomForestClassifier(n_estimators=5000),1
"RandomForestClassifier(n_estimators=100, max_depth=depth, n_jobs=-1)",1
RandomForestClassifier(random_state=i),1
RandomForestClassifier(StreamingForestClassifier),1
"RandomForestClassifier(n_jobs=-1, n_estimators=n_estimators)",1
"RandomForestClassifier(n_estimators=5, class_weight=""balanced"", oob_score=False)",1
"RandomForestClassifier(n_jobs=-1, n_estimators=800)",1
RandomForestClassifier(n_estimators = 40),1
"RandomForestClassifier(n_estimators=10, n_jobs=7)",1
"RandomForestClassifier(n_estimators=30,random_state=prng)",1
"RandomForestClassifier(n_estimators = 150, min_samples_split = 2, n_jobs = -1)",1
RandomForestClassifier(n_estimators=rf_n_estimators),1
"RandomForestClassifier(n_jobs=5,n_estimators=100)",1
"RandomForestClassifier(n_estimators=1000, random_state=1, class_weight='balanced_subsample')",1
"RandomForestClassifier(n_estimators=n_trees, n_jobs=5, max_depth=None, min_samples_split=1, random_state=0, )",1
"RandomForestClassifier(max_depth=max_depth, min_samples_split=min_sample)",1
RandomForestClassifier(AbstractZnormClassifier),1
"RandomForestClassifier(n_estimators=5, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=NEST, criterion=CRIT)",1
"RandomForestClassifier(n_estimators=250,max_depth=None,min_samples_leaf=1,n_jobs=1,criterion='gini', max_features=100)",1
"RandomForestClassifier(n_estimators=200,max_features=""auto"",max_depth=8,min_samples_split=10,min_samples_leaf=2,n_jobs=2)",1
"RandomForestClassifier(n_estimators=100, max_depth=100, min_samples_split=2, min_samples_leaf=1, n_jobs=4)",1
"RandomForestClassifier(random_state=0, n_estimators=240, class_weight='auto')",1
"RandomForestClassifier(n_estimators=80, max_features='auto')",1
RandomForestClassifier(min_samples_split=len(self.x),1
RandomForestClassifier(**classif_base.get_params(),1
"RandomForestClassifier(n_estimators=10, max_features=30)",1
"RandomForestClassifier(n_estimators=100, n_jobs=10,)",1
"RandomForestClassifier(n_estimators=num_trees, max_features=max_features)",1
RandomForestClassifier(**clf.get('config'),1
"RandomForestClassifier(n_estimators=200, max_depth=10)",1
"RandomForestClassifier(25, criterion=""entropy"")",1
"RandomForestClassifier(n_estimators=100,oob_score = True, max_features = ""auto"",random_state=10,min_samples_split=2, min_samples_leaf=2)",1
"RandomForestClassifier(oob_score=True, n_estimators=500, n_jobs=8, max_depth=25)",1
"RandomForestClassifier(n_estimators=40, max_features=15)",1
"RandomForestClassifier(n_estimators=750, max_depth=15, min_samples_leaf=20, n_jobs=12, random_state=42)",1
"RandomForestClassifier(max_depth=None, random_state=0, min_samples_split=1,max_features=38)",1
RandomForestClassifier(n_estimators=700),1
"RandomForestClassifier(n_jobs=-1, max_depth=max_depth, n_estimators=n_estimators)",1
"RandomForestClassifier(n_estimators=500, criterion='gini', random_state=n, n_jobs=2)",1
"RandomForestClassifier(labelCol=""indexedLabel"", numTrees=3, maxDepth=4)",1
"RandomForestClassifier(max_depth=None, min_samples_split=1, random_state=42)",1
"RandomForestClassifier(n_estimators=1000, n_jobs = -1, verbose = 0, class_weight = 'auto', min_samples_leaf=20)",1
"RandomForestClassifier(n_estimators=100, criterion=""gini"", max_features=None, verbose=0, n_jobs=-1)",1
"RandomForestClassifier(max_depth=5, n_estimators=10)",1
"RandomForestClassifier(n_estimators=2500, n_jobs=15,criterion=""entropy"",max_features='log2',random_state=150,max_depth=600,min_samples_split=163)",1
"RandomForestClassifier(n_estimators=750, max_depth=15, min_samples_leaf=25, n_jobs=12, random_state=42)",1
"RandomForestClassifier(criterion='entropy',n_estimators = 10,random_state = 1,n_jobs = 2)",1
"RandomForestClassifier(criterion='entropy', random_state = 1, n_jobs=2)",1
"RandomForestClassifier(n_estimators=200, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=500, max_features=None)",1
"RandomForestClassifier(random_state = 2, n_jobs = -1)",1
"RandomForestClassifier(n_estimators=500, oob_score=True)",1
"RandomForestClassifier(class_weight='auto',n_jobs=self.processes)",1
"RandomForestClassifier(n_estimators =  250 , max_depth= None,verbose=1)",1
"RandomForestClassifier(oob_score=True, n_jobs=jobs)",1
"RandomForestClassifier(n_estimators=500, n_jobs=njobs)",1
RandomForestClassifier(random_state=5),1
"RandomForestClassifier(n_estimators = 500, n_jobs = 1, max_features=""sqrt"", max_depth=None, min_samples_split=1)",1
"RandomForestClassifier(n_estimators = 1000, random_state = 2543, max_features = None)",1
"RandomForestClassifier(n_estimators=n_estimators,max_depth=max_depth)",1
RandomForestClassifier(n_estimators=13),1
"RandomForestClassifier(n_Forests=200, n_TreesInForest=300)",1
"RandomForestClassifier(n_estimators=20, oob_score=1, n_jobs=-1, random_state=50, max_features=""auto"", min_samples_leaf=5)",1
"RandomForestClassifier(n_estimators = 200, n_jobs = -1)",1
"RandomForestClassifier(100,oob_score=True)",1
"RandomForestClassifier(n_jobs=-1,max_features= 'sqrt' ,n_estimators=50, oob_score = True)",1
"RandomForestClassifier(n_estimators=5000, min_samples_split=1)",1
"RandomForestClassifier(n_estimators=100, max_features=""sqrt"", n_jobs=-1)",1
"RandomForestClassifier(n_estimators=20, random_state = random_state)",1
"RandomForestClassifier(n_estimators = 50, max_features = 6)",1
"RandomForestClassifier(class_weight={False:1, True:2}, n_jobs=-1)",1
"RandomForestClassifier(max_depth=10, n_estimators=10, max_features=1)",1
"RandomForestClassifier(n_estimators=20, min_samples_split=5)",1
"RandomForestClassifier(criterion='entropy', n_estimators=10, random_state=1, n_jobs=4)",1
"RandomForestClassifier(max_depth=16,n_estimators=1024)",1
"RandomForestClassifier(max_features = 200, n_estimators = 15000, n_jobs = -1)",1
"RandomForestClassifier(n_estimators=5,min_samples_leaf=150)",1
"RandomForestClassifier(n_estimators=num_estimators, max_depth=None, min_samples_split=2, random_state=0)",1
"RandomForestClassifier(n_estimators=60, random_state=Lnum, n_jobs=1)",1
"RandomForestClassifier(n_estimators=100, max_features=10)",1
"RandomForestClassifier(n_estimators=30, max_depth=None, min_samples_split=1, random_state=0)",1
"RandomForestClassifier(max_depth=None, n_estimators=5, max_features=5, criterion=""gini"")",1
"RandomForestClassifier(n_estimators={n_estimators}, criterion='{criterion}', max_depth={max_depth}, min_samples_split={min_samples_split}, min_samples_leaf={min_samples_leaf}, min_weight_fraction_leaf={min_weight_fraction_leaf}, max_features='auto', max_leaf_nodes={max_leaf_nodes}, min_impurity_split={min_impurity_split}, bootstrap={bootstrap}, oob_score={oob_score}, n_jobs=1, verbose=0, warm_start=False, class_weight={class_weight}, random_state=R_SEED)",1
"RandomForestClassifier(max_depth = max_depth, min_samples_split = min_samples_split, n_estimators = 100, random_state = 1)",1
"RandomForestClassifier(n_estimators = 2000, max_features=2)",1
"RandomForestClassifier(max_depth=16,n_estimators=256, oob_score=True)",1
"RandomForestClassifier(n_estimators=1000, max_depth=15, n_jobs=args.njobs)",1
"RandomForestClassifier(n_estimators=30,random_state=123,verbose=3)",1
"RandomForestClassifier(n_estimators=15, random_state=0, n_jobs=-1)",1
"RandomForestClassifier(n_jobs=-1, n_estimators=50,max_depth=16)",1
"RandomForestClassifier(n_estimators = n_estimators,max_depth = length)",1
"RandomForestClassifier(n_estimators=500, n_jobs=2)",1
"RandomForestClassifier(n_estimators=n_estimators,max_features=max_features,max_depth = max_depth)",1
RandomForestClassifier(random_seed=1),1
"RandomForestClassifier(n_estimators=n_estimators, criterion=criterion, max_features=int(np.sqrt(len(self.dataframe.columns)",1
"RandomForestClassifier(n_estimators = 10, n_jobs = 16)",1
RandomForestClassifier(n_estimators=95),1
"RandomForestClassifier(n_estimators=25, min_samples_split=2)",1
RandomForestClassifier(random_state=10),1
"RandomForestClassifier(n_estimators=100, verbose=2, compute_importances=True, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=n_estimators, random_state=42)",1
"RandomForestClassifier(n_estimators=100,n_jobs=5)",1
RandomForestClassifier(**job),1
"RandomForestClassifier(n_jobs=-1, verbose=42, n_estimators=100)",1
"RandomForestClassifier(n_estimators=estimators, criterion=criterion, max_depth=maxdepth)",1
RandomForestClassifier(min_samples_split=len(X),1
"RandomForestClassifier(n_estimators=200, min_samples_split=9)",1
"RandomForestClassifier(n_estimators=256,n_jobs=2)",1
"RandomForestClassifier(n_estimators=num_estimators, random_state=0)",1
"RandomForestClassifier(n_estimators=256,)",1
"RandomForestClassifier(n_estimators = 400,n_jobs=4)",1
"RandomForestClassifier(n_jobs=-1, n_estimators=100)",1
"RandomForestClassifier("" + model_params + "")",1
"RandomForestClassifier(n_estimators = 30, max_depth = 10, oob_score = True, random_state = 0)",1
"RandomForestClassifier(criterion=""gini"", n_estimators=1000)",1
"RandomForestClassifier(max_depth=140, n_estimators=1800, n_jobs=-1, random_state=0, verbose=0, warm_start=True)",1
"RandomForestClassifier(n_jobs=4, n_estimators=400, max_depth=22)",1
"RandomForestClassifier(n_estimators=51,random_state=1)",1
"RandomForestClassifier(n_estimators = 10000,random_state = 0,n_jobs = -1)",1
"RandomForestClassifier(n_estimators = 100, n_jobs=4)",1
"RandomForestClassifier(numTrees=60, seed=1111, maxDepth=15, labelCol=""Response"", featuresCol=""features"")",1
"RandomForestClassifier(n_jobs=4, n_estimators=opts.numtrees, oob_score=True)",1
"RandomForestClassifier(n_estimators=100, max_features=""log2"")",1
"RandomForestClassifier(n_estimators = 2, n_jobs = 4)",1
"RandomForestClassifier(n_estimators=1000,criterion='entropy',min_samples_leaf=8,random_state=1,n_jobs=5)",1
"RandomForestClassifier(n_estimators=60, verbose=2, compute_importances=True, n_jobs=-1)",1
RandomForestClassifier(n_estimators=91),1
"RandomForestClassifier(n_estimators = 100, max_depth=10)",1
"RandomForestClassifier(n_estimators=1999, max_features='sqrt', max_depth=None, min_samples_split=9, compute_importances=True, random_state=SEED)",1
"RandomForestClassifier(criterion = 'entropy', n_estimators = 50)",1
"RandomForestClassifier(n_estimators=8, criterion='entropy', max_depth=None, min_samples_split=6, min_samples_leaf=7, max_features=None, bootstrap=True, oob_score=False, n_jobs=-1, random_state=None, verbose=3, min_density=None, compute_importances=None)",1
"RandomForestClassifier(n_estimators=50, random_state=1)",1
"RandomForestClassifier(n_estimators=150, max_features=20)",1
"RandomForestClassifier(n_estimators=500, criterion='gini', random_state=0)",1
"RandomForestClassifier(n_estimators=50, random_state=123)",1
"RandomForestClassifier(n_estimators=2000, oob_score = True)",1
RandomForestClassifier(**args),1
"RandomForestClassifier(n_estimators=50, criterion = 'gini', random_state=1)",1
"RandomForestClassifier(n_estimators=2000,min_samples_split=32,oob_score=True)",1
"RandomForestClassifier(n_jobs=n_cores, n_estimators= ntrees, oob_score=True, bootstrap=True, class_weight=rf_weights)",1
"RandomForestClassifier(10, oob_score=True, n_jobs=-1)",1
"RandomForestClassifier(n_estimators=100, criterion='gini', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features='auto', max_leaf_nodes=None, min_impurity_split=1e-07, bootstrap=True, oob_score=False, n_jobs=1, random_state=None, verbose=0, warm_start=False, class_weight=None)",1
"RandomForestClassifier(CLASS_ID, ATS, train, 15, 7, 5, domain=domain)",1
RandomForestClassifier(Sklearn),1
"RandomForestClassifier(max_depth=5, n_estimators=10, max_features=1, n_jobs=self.parallel_jobs)",1
"RandomForestClassifier(n_estimators=30, random_state=32)",1
"RandomForestClassifier(n_estimators = 100, n_jobs = 2)",1
"RandomForestClassifier(n_estimators=10, criterion='gini')",1
RandomForestClassifier(n_jobs=options.n_jobs),1
"RandomForestClassifier(n_estimators=500, max_features=""auto"",min_samples_leaf=min_samples_leaf,oob_score=True)",1
"RandomForestClassifier(n_estimators = n_estimators, criterion = criterion)",1
"RandomForestClassifier(n_estimators=34, max_features=max_features, criterion='gini', max_depth=5)",1
RandomForestClassifier(n_estimators = 1),1
"RandomForestClassifier(max_features=2, max_depth=2)",1
RandomForestClassifier(n_estimators=66),1